(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    253586,       4942]
NotebookOptionsPosition[    249214,       4862]
NotebookOutlinePosition[    249559,       4877]
CellTagsIndexPosition[    249516,       4874]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"p1", "+", "z"}], "]"}], 
   RowBox[{"Sin", "[", "t1", "]"}], 
   RowBox[{"Cos", "[", 
    RowBox[{"p2", "+", "z"}], "]"}], 
   RowBox[{"Sin", "[", "t2", "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8404310501223984`*^9, 3.8404310901753817`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a66a4d6d-04a4-4913-a528-58b727952047"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"p1", "+", "z"}], "]"}], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"p2", "+", "z"}], "]"}], " ", 
  RowBox[{"Sin", "[", "t1", "]"}], " ", 
  RowBox[{"Sin", "[", "t2", "]"}]}]], "Output",
 CellChangeTimes->{3.840431091052452*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c35f48d4-021d-4000-beae-6956ff5f5e90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"p1", "+", "z"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"p2", "+", "z"}], "]"}], " ", 
   RowBox[{"Sin", "[", "t1", "]"}], " ", 
   RowBox[{"Sin", "[", "t2", "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[2]:=",ExpressionUUID->"45ab34d7-6479-4a71-bc7a-6b45c0da9494"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"p1", "-", "p2", "-", "t1", "-", "t2"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"p1", "-", "p2", "+", "t1", "-", "t2"}], "]"}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"p1", "-", "p2", "-", "t1", "+", "t2"}], "]"}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"p1", "-", "p2", "+", "t1", "+", "t2"}], "]"}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"p1", "+", "p2", "-", "t1", "-", "t2", "+", 
      RowBox[{"2", " ", "z"}]}], "]"}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"p1", "+", "p2", "+", "t1", "-", "t2", "+", 
      RowBox[{"2", " ", "z"}]}], "]"}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"p1", "+", "p2", "-", "t1", "+", "t2", "+", 
      RowBox[{"2", " ", "z"}]}], "]"}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"p1", "+", "p2", "+", "t1", "+", "t2", "+", 
      RowBox[{"2", " ", "z"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.840431096406537*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a62e372c-f8e6-4fc5-901b-80d8d8a2e003"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"Cos", "[", "\[Nu]", "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Nu]", "]"}]}], "0"},
      {
       RowBox[{"Sin", "[", "\[Nu]", "]"}], 
       RowBox[{"Cos", "[", "\[Nu]", "]"}], "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RT", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"Cos", "[", "\[Nu]", "]"}], 
       RowBox[{"Sin", "[", "\[Nu]", "]"}], "0"},
      {
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Nu]", "]"}]}], 
       RowBox[{"Cos", "[", "\[Nu]", "]"}], "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rz", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"Cos", "[", "z", "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "z", "]"}]}], "0"},
      {
       RowBox[{"Sin", "[", "z", "]"}], 
       RowBox[{"Cos", "[", "z", "]"}], "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RTz", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"Cos", "[", "z", "]"}], 
       RowBox[{"Sin", "[", "z", "]"}], "0"},
      {
       RowBox[{"-", 
        RowBox[{"Sin", "[", "z", "]"}]}], 
       RowBox[{"Cos", "[", "z", "]"}], "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ehol", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", 
         RowBox[{"2", "z"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "z"}], "]"}], "0"},
       {
        RowBox[{"Sin", "[", 
         RowBox[{"2", "z"}], "]"}], 
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "z"}], "]"}]}], "0"},
       {"0", "0", "e3"}
      }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "complex", " ", "factor", " ", "\:043f\:0435\:0440\:0435\:0434", " ", 
     "\:0435\:0434\:0438\:043d\:0438\:0447\:043d\:043e\:0439", " ", 
     "\:043c\:0430\:0442\:0440\:0438\:0446\:0435\:0439"}], " ", "=", " ", 
    "2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0432\:0435\:0449\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:044b\:0439\
", " ", "\:0444\:0430\:043a\:0442\:043e\:0440"}], " ", "=", " ", "1"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Edyad", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]1", "-", "\[Psi]2"}], "]"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", "z"}], "+", "\[Psi]1", "+", "\[Psi]2"}], 
            "]"}]}], ")"}], 
         RowBox[{"Sin", "[", "\[Tau]1", "]"}], 
         RowBox[{"Sin", "[", "\[Tau]2", "]"}]}], 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]1", " ", "+", " ", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]1", "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]2", "+", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]2", "]"}]}], 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]1", " ", "+", " ", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]1", "]"}], 
         RowBox[{"Cos", "[", "\[Tau]2", "]"}]}]},
       {
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]2", " ", "+", " ", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]1", "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]1", "+", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]2", "]"}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]1", " ", "+", " ", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]1", "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]2", "+", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]2", "]"}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]1", " ", "+", " ", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]1", "]"}], 
         RowBox[{"Cos", "[", "\[Tau]2", "]"}]}]},
       {
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]2", " ", "+", " ", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]2", "]"}], 
         RowBox[{"Cos", "[", "\[Tau]1", "]"}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]2", " ", "+", " ", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]2", "]"}], 
         RowBox[{"Cos", "[", "\[Tau]1", "]"}]}], 
        RowBox[{
         RowBox[{"Cos", "[", "\[Tau]2", "]"}], 
         RowBox[{"Cos", "[", "\[Tau]1", "]"}]}]}
      }], "\[NoBreak]", ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Psi]1", ",", "\[Psi]2", ",", "\[Tau]1", ",", 
    RowBox[{
     RowBox[{"\[Tau]2", "+", 
      RowBox[{"1", "complex", " ", "factor"}]}], "=", 
     RowBox[{
      RowBox[{"4", "+", "2"}], "=", "6"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:044d\:0440\:043c\:0438\:0442\:043e\:0432\:043e\:0441\:0442\:044c", " ",
      "\[Psi]1"}], ",", "\[Psi]2", ",", "\[Tau]1", ",", 
    RowBox[{
     RowBox[{
      RowBox[{
      "\[Tau]2", " ", 
       "\:0432\:0435\:0449\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:044b"}],
       " ", "+", " ", 
      RowBox[{
      "\:0432\:0435\:0449\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:044b\
\:0439", " ", "\:0444\:0430\:043a\:0442\:043e\:0440"}]}], " ", "=", " ", 
     "5"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Edyad2", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Tau]", "]"}]}], 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]", "+", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]", "]"}]}]},
       {
        RowBox[{"Cos", "[", "\[Tau]", "]"}], "0", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "+", "z"}], "]"}]}], 
         RowBox[{"Sin", "[", "\[Tau]", "]"}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "+", "z"}], "]"}]}], 
         RowBox[{"Sin", "[", "\[Tau]", "]"}]}], 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "+", "z"}], "]"}], 
         RowBox[{"Sin", "[", "\[Tau]", "]"}]}], "0"}
      }], "\[NoBreak]", ")"}]}], 
   RowBox[{"(*", 
    RowBox[{"\[Psi]", ",", 
     RowBox[{
      RowBox[{"\[Tau]", "+", 
       RowBox[{"complex", " ", "factor"}]}], "=", 
      RowBox[{
       RowBox[{"2", "+", "2"}], "=", "4"}]}]}], "*)"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:044d\:0440\:043c\:0438\:0442\:043e\:0432\:043e\:0441\:0442\:044c", " ",
      "\[Psi]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
      "\[Tau]", " ", 
       "\:0432\:0435\:0437\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:044b"}],
       "+", " ", 
      RowBox[{
      "\:043a\:043e\:043c\:043f\:043b\:0435\:043a\:0441\:043d\:044b\:0439", 
       " ", "\:0444\:0430\:043a\:0442\:043e\:0440"}]}], " ", "=", " ", 
     "3"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"their", " ", "=", " ", 
    RowBox[{
     RowBox[{"a", " ", "1"}], "+", 
     RowBox[{"b", " ", "Edyad"}], "+", 
     RowBox[{"c", " ", "Edyad2"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "\:0432\:0441\:0435\:0433\:043e", " ", "\:0443", " ", "\:043d\:0438\:0445",
     " ", "9"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mine", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"e", "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", "z"}], "-", "\[Lambda]"}], "]"}]}]}], 
        RowBox[{
         RowBox[{"A", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", "z"}], "-", "\[Lambda]"}], "]"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "Y"}]}], 
        RowBox[{"B", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"z", "+", "r"}], "]"}]}]},
       {
        RowBox[{
         RowBox[{"A", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", "z"}], "-", "\[Lambda]"}], "]"}]}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "Y"}]}], 
        RowBox[{"e", "-", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", "z"}], "-", "\[Lambda]"}], "]"}]}]}], 
        RowBox[{"B", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"z", "+", "r"}], "]"}]}]},
       {
        RowBox[{"Bc", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"z", "+", "rc"}], "]"}]}], 
        RowBox[{"Bc", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"z", "+", "rc"}], "]"}]}], "e3"}
      }], "\[NoBreak]", ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "e", ",", "A", ",", "\[Lambda]", ",", "Y", ",", "B", ",", "r", ",", "Bc", 
    ",", "rc", ",", 
    RowBox[{"e3", " ", "=", " ", 
     RowBox[{
     "18", " ", 
      "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:043b\:044c\:043d\:044b\
\:0445", " ", 
      "\:043f\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:043e\:0432"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:044d\:0440\:043c\:0438\:0442\:043e\:0432\:043e\:0441\:0442\:044c", " ",
      "e"}], ",", "A", ",", "\[Lambda]", ",", "Y", ",", 
    RowBox[{
    "e3", " ", "-", 
     "\:0432\:0435\:0449\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:044b\:0439\
", "+", " ", "B"}], ",", 
    RowBox[{
     RowBox[{"r", " ", "-", " ", 
      RowBox[{
      "\:043a\:043e\:043c\:043f\:043b\:0435\:043a\:0441\:043d\:044b\:0435", 
       " ", "\:0432\:0441\:0435\:0433\:043e", " ", "5"}], "+", 
      RowBox[{"2", "*", "2"}]}], "=", "9"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8404311346867013`*^9, 3.84043122981901*^9}, {
  3.840431376525795*^9, 3.840431443427825*^9}, {3.840434745466835*^9, 
  3.8404347510031366`*^9}, {3.84043484955276*^9, 3.8404349322708635`*^9}, {
  3.84043496888704*^9, 3.840435050996597*^9}, {3.8404351231205907`*^9, 
  3.8404353001587*^9}, {3.840435333983292*^9, 3.8404354273817406`*^9}, {
  3.840435467780719*^9, 3.8404357196615925`*^9}, {3.841704547950594*^9, 
  3.8417045548879695`*^9}, {3.841704914415106*^9, 3.8417049560547833`*^9}, {
  3.8417258465859575`*^9, 3.8417258602059736`*^9}, {3.8417259168461494`*^9, 
  3.841725921218678*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bad3b70c-6f73-4ad1-a625-5f5970747c2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RTz", ".", "mine", ".", "Rz"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8417260639380336`*^9, 3.8417260865974274`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f74f3ae5-cf9d-4506-b265-a8efd31821b4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"e", "+", 
       RowBox[{"A", " ", 
        RowBox[{"Cos", "[", "\[Lambda]", "]"}]}]}], 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "Y"}], "-", 
       RowBox[{"A", " ", 
        RowBox[{"Sin", "[", "\[Lambda]", "]"}]}]}], 
      RowBox[{"B", " ", 
       RowBox[{"Cos", "[", "r", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "Y"}], "-", 
       RowBox[{"A", " ", 
        RowBox[{"Sin", "[", "\[Lambda]", "]"}]}]}], 
      RowBox[{"e", "-", 
       RowBox[{"A", " ", 
        RowBox[{"Cos", "[", "\[Lambda]", "]"}]}]}], 
      RowBox[{"B", " ", 
       RowBox[{"Sin", "[", "r", "]"}]}]},
     {
      RowBox[{"Bc", " ", 
       RowBox[{"Cos", "[", "rc", "]"}]}], 
      RowBox[{"Bc", " ", 
       RowBox[{"Sin", "[", "rc", "]"}]}], "e3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.841726070831048*^9, 3.8417260871911645`*^9}},
 CellLabel->
  "Out[12]//MatrixForm=",ExpressionUUID->"0a6c309d-5139-42b0-8821-\
4290f6ace6eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"e", "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Lambda]", "]"}]}]}], 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "Y"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"Sin", "[", "\[Lambda]", "]"}]}]}], 
          RowBox[{"B", " ", 
           RowBox[{"Cos", "[", "r", "]"}]}]},
         {
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "Y"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"Sin", "[", "\[Lambda]", "]"}]}]}], 
          RowBox[{"e", "-", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Lambda]", "]"}]}]}], 
          RowBox[{"B", " ", 
           RowBox[{"Sin", "[", "r", "]"}]}]},
         {
          RowBox[{"B", " ", 
           RowBox[{"Cos", "[", "r", "]"}]}], 
          RowBox[{"B", " ", 
           RowBox[{"Sin", "[", "r", "]"}]}], "e3"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", " ", "0"}]}], "/.", 
    RowBox[{"B", "\[Rule]", " ", "0"}]}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.841893648093552*^9, 3.841893678267472*^9}, {
  3.8418937887765007`*^9, 3.841893792812995*^9}, {3.8418938315485473`*^9, 
  3.8418938382872496`*^9}, {3.8418938684044323`*^9, 3.841893900071723*^9}, {
  3.8418939540627427`*^9, 3.841893964238284*^9}, {3.841894058787964*^9, 
  3.841894061599332*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9a6a6f25-8f85-43c2-8d37-bef6a2ebe475"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"A", "+", "e"}], 
      RowBox[{"\[ImaginaryI]", " ", "Y"}], "0"},
     {
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "Y"}], 
      RowBox[{
       RowBox[{"-", "A"}], "+", "e"}], "0"},
     {"0", "0", "e3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8418936694278708`*^9, 3.8418936806841116`*^9}, 
   3.8418937937509575`*^9, {3.841893844543016*^9, 3.841893900946066*^9}, 
   3.841893964990205*^9, 3.841894062318698*^9},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"343f138e-7aba-4e4a-a263-\
4df7fced3497"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "\:043e\:0431\:0449\:0438\:0439", " ", "\:0432\:0438\:0434\:0435", " ", 
    "\:0442\:0435\:043d\:0437\:043e\:0440\:0430", " ", 
    "\:043c\:043e\:0436\:043d\:043e", " ", 
    "\:043f\:043e\:043b\:0443\:0447\:0438\:0442\:044c", " ", "\:0438\:0437", 
    " ", "\:043b\:044e\:0431\:043e\:0439", " ", 
    "\:043f\:043e\:0441\:0442\:043e\:044f\:043d\:043d\:043e\:0439", " ", 
    "\:043c\:0430\:0442\:0440\:0438\:0446\:044b"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"gen", "=", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"e1", 
         RowBox[{"X", "+", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]}], 
         RowBox[{"Y", "+", 
          RowBox[{"\[ImaginaryI]", " ", "y"}]}]},
        {
         RowBox[{"X", "-", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]}], "e2", 
         RowBox[{"H", "+", 
          RowBox[{"\[ImaginaryI]", " ", "h"}]}]},
        {
         RowBox[{"Y", "-", 
          RowBox[{"\[ImaginaryI]", " ", "y"}]}], 
         RowBox[{"H", "-", 
          RowBox[{"\[ImaginaryI]", " ", "h"}]}], "e3"}
       }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp", "=", 
     RowBox[{
      RowBox[{"Rz", ".", "gen", ".", "RTz"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmp2", " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"R", ".", "tmp", ".", "RT"}], "/.", 
       RowBox[{"z", "\[Rule]", " ", 
        RowBox[{"z", "-", "\[Nu]"}]}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tmp2", "-", "tmp"}], "//", "Simplify"}], "//", 
    "MatrixForm"}]}]}]], "Input",ExpressionUUID->"df3312e9-be0f-4895-af23-\
03a260d682da"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8404346314561186`*^9, 
  3.8404347011198506`*^9}},ExpressionUUID->"7c070420-791c-4d1e-9e09-\
a64438dd5c56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "gyrocholesteric", " ", "dielectric", " ", "medium", " ", "dipersion", " ",
     "law", " ", "lakhtakia1995", " ", "4.11"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", 
          RowBox[{"-", "\[ImaginaryI]"}], "0", "k0"},
         {"\[ImaginaryI]", "0", 
          RowBox[{"-", "k0"}], "0"},
         {
          RowBox[{
           RowBox[{"-", "k0"}], " ", "eb", " ", "ec", " ", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "\[Zeta]"]}], 
          RowBox[{
           RowBox[{"-", 
            FractionBox["k0", "\[Zeta]"]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["ea", "2"], "+", 
                SuperscriptBox["ec", "2"]}], ")"}], 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{"ea", " ", "eb", 
              RowBox[{"(", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"], ")"}]}]}], 
            ")"}]}], "0", 
          RowBox[{"-", "\[ImaginaryI]"}]},
         {
          RowBox[{
           FractionBox["k0", "\[Zeta]"], "ea", " ", "eb"}], 
          RowBox[{
           RowBox[{"-", "k0"}], " ", "eb", " ", "ec", " ", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "\[Zeta]"]}], 
          "\[ImaginaryI]", "0"}
        }], "\[NoBreak]", ")"}], "/.", 
      RowBox[{"k0", "\[Rule]", " ", 
       RowBox[{"Sqrt", "[", "\[Sigma]", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["n", "4"], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["ea", "2"], "+", 
               SuperscriptBox["ec", "2"]}], ")"}], 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
            RowBox[{"ea", " ", "eb", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], ")"}]}]}], 
           ")"}], 
          FractionBox[
           SuperscriptBox["k0", "2"], "\[Zeta]"]}], "+", "2"}], ")"}], 
       SuperscriptBox["n", "2"]}], " ", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", "\[ImaginaryI]", " ", 
         SuperscriptBox["k0", "2"], 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"eb", " ", "ec"}], ")"}], "\[Zeta]"], 
         RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], ")"}], "n"}], "+", 
      RowBox[{"Det", "[", "A", "]"}]}], "==", "0"}], "/.", 
    RowBox[{"k0", "\[Rule]", " ", 
     RowBox[{"Sqrt", "[", "\[Sigma]", "]"}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8417051738039284`*^9, 3.8417053532973723`*^9}, {
  3.841705407876747*^9, 3.841705485533608*^9}, {3.841707442145153*^9, 
  3.8417075330294166`*^9}, {3.8417075722075596`*^9, 3.841707599285927*^9}, {
  3.84170768733353*^9, 3.841707772062519*^9}, {3.841724129607196*^9, 
  3.841724190134629*^9}, {3.841724438497698*^9, 
  3.8417244461247797`*^9}},ExpressionUUID->"1922cd37-4342-44b3-aa3d-\
4a39aa9d4e91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   SuperscriptBox["n", "4"], "-", 
   FractionBox[
    RowBox[{"ea", " ", "eb", " ", "\[Sigma]"}], "\[Zeta]"], "+", 
   FractionBox[
    RowBox[{
    "4", " ", "\[ImaginaryI]", " ", "eb", " ", "ec", " ", "n", " ", 
     "\[Sigma]", " ", 
     RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "\[Zeta]"], "-", 
   FractionBox[
    RowBox[{"ea", " ", "eb", " ", "\[Sigma]", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "\[Zeta]"], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["ea", "2"], " ", 
     SuperscriptBox["eb", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], 
    SuperscriptBox["\[Zeta]", "2"]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["eb", "2"], " ", 
     SuperscriptBox["ec", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], 
    SuperscriptBox["\[Zeta]", "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["ea", "2"], " ", "\[Sigma]", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "\[Zeta]"], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["ec", "2"], " ", "\[Sigma]", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "\[Zeta]"], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["ea", "3"], " ", "eb", " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], 
    SuperscriptBox["\[Zeta]", "2"]], "+", 
   FractionBox[
    RowBox[{"ea", " ", "eb", " ", 
     SuperscriptBox["ec", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], 
    SuperscriptBox["\[Zeta]", "2"]], "-", 
   RowBox[{
    SuperscriptBox["n", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      FractionBox[
       RowBox[{"\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ea", " ", "eb", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ea", "2"], "+", 
             SuperscriptBox["ec", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], ")"}]}], 
       "\[Zeta]"]}], ")"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.8417077740766797`*^9, {3.841724172293504*^9, 3.841724191921256*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"96b62e12-b890-45c6-a1c3-0410c6948da6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "+", 
      SuperscriptBox["n", "4"], "-", 
      FractionBox[
       RowBox[{"ea", " ", "eb", " ", "\[Sigma]"}], "\[Zeta]"], "+", 
      FractionBox[
       RowBox[{
       "4", " ", "\[ImaginaryI]", " ", "eb", " ", "ec", " ", "n", " ", 
        "\[Sigma]", " ", 
        RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "\[Zeta]"], "-", 
      FractionBox[
       RowBox[{"ea", " ", "eb", " ", "\[Sigma]", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "\[Zeta]"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["ea", "2"], " ", 
        SuperscriptBox["eb", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], 
       SuperscriptBox["\[Zeta]", "2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["eb", "2"], " ", 
        SuperscriptBox["ec", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], 
       SuperscriptBox["\[Zeta]", "2"]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["ea", "2"], " ", "\[Sigma]", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "\[Zeta]"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["ec", "2"], " ", "\[Sigma]", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "\[Zeta]"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["ea", "3"], " ", "eb", " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], 
       SuperscriptBox["\[Zeta]", "2"]], "+", 
      FractionBox[
       RowBox[{"ea", " ", "eb", " ", 
        SuperscriptBox["ec", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], 
       SuperscriptBox["\[Zeta]", "2"]], "-", 
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         FractionBox[
          RowBox[{"\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ea", " ", "eb", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["ea", "2"], "+", 
                SuperscriptBox["ec", "2"]}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], ")"}]}], 
          "\[Zeta]"]}], ")"}]}]}], "\[Equal]", "0"}], ",", "\[Sigma]"}], 
   "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.841724193800668*^9, 3.841724214511155*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"4c829bb9-edd1-4e34-9c1d-a66ba8d1e445"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Zeta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ea", " ", "eb"}], "+", 
          RowBox[{"ea", " ", "eb", " ", 
           SuperscriptBox["n", "2"]}], "-", 
          RowBox[{
          "4", " ", "\[ImaginaryI]", " ", "eb", " ", "ec", " ", "n", " ", 
           RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
          RowBox[{"ea", " ", "eb", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{"ea", " ", "eb", " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ea", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ec", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ea", "2"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ec", "2"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "-", 
          RowBox[{"\[Zeta]", " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["\[Zeta]", "2"]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "eb", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["ea", "2"], "+", 
                   SuperscriptBox["ec", "2"]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["n", "2"]}], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"ea", "+", "eb", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ea"}], "+", "eb"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]b"}], "]"}]}]}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "eb", " ", 
                    "ec", " ", "n", " ", 
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
                   RowBox[{"ea", " ", "eb", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ea", " ", "eb"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["ea", "2"], "+", 
                    SuperscriptBox["ec", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], ")"}]}]}
                   ], ")"}], "2"]}], ")"}]}], ")"}]}]}]}], ")"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "eb", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ea", "2"], "+", 
          SuperscriptBox["ec", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eb", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{"ea", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], ")"}]}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Zeta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ea", " ", "eb"}], "+", 
          RowBox[{"ea", " ", "eb", " ", 
           SuperscriptBox["n", "2"]}], "-", 
          RowBox[{
          "4", " ", "\[ImaginaryI]", " ", "eb", " ", "ec", " ", "n", " ", 
           RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
          RowBox[{"ea", " ", "eb", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{"ea", " ", "eb", " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ea", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ec", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ea", "2"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["ec", "2"], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{"\[Zeta]", " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["\[Zeta]", "2"]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "eb", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["ea", "2"], "+", 
                   SuperscriptBox["ec", "2"]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["n", "2"]}], ")"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"ea", "+", "eb", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ea"}], "+", "eb"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]b"}], "]"}]}]}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "eb", " ", 
                    "ec", " ", "n", " ", 
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
                   RowBox[{"ea", " ", "eb", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ea", " ", "eb"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["ea", "2"], "+", 
                    SuperscriptBox["ec", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], 
                    ")"}]}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "eb", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["ea", "2"], "+", 
          SuperscriptBox["ec", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eb", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
          RowBox[{"ea", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], ")"}]}], 
       ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.841724207208696*^9, 3.8417242191613903`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"32e07f7e-011d-4b9c-883d-9fb1efb2c36a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Zeta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ea", " ", "eb"}], "+", 
             RowBox[{"ea", " ", "eb", " ", 
              SuperscriptBox["n", "2"]}], "-", 
             RowBox[{
             "4", " ", "\[ImaginaryI]", " ", "eb", " ", "ec", " ", "n", " ", 
              RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
             RowBox[{"ea", " ", "eb", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{"ea", " ", "eb", " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ea", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ec", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ea", "2"], " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ec", "2"], " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "-", 
             RowBox[{"\[Zeta]", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  SuperscriptBox["\[Zeta]", "2"]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "eb", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["ea", "2"], "+", 
                    SuperscriptBox["ec", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["n", "2"]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"ea", "+", "eb", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ea"}], "+", "eb"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]b"}], "]"}]}]}], ")"}]}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "eb", " ", 
                    "ec", " ", "n", " ", 
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
                    RowBox[{"ea", " ", "eb", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ea", " ", "eb"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["ea", "2"], "+", 
                    SuperscriptBox["ec", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], 
                    ")"}]}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}]}], ")"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "eb", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ea", "2"], "+", 
             SuperscriptBox["ec", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"eb", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{"ea", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], ")"}]}], 
          ")"}]}], "]"}], ",", " ", 
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Zeta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ea", " ", "eb"}], "+", 
             RowBox[{"ea", " ", "eb", " ", 
              SuperscriptBox["n", "2"]}], "-", 
             RowBox[{
             "4", " ", "\[ImaginaryI]", " ", "eb", " ", "ec", " ", "n", " ", 
              RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
             RowBox[{"ea", " ", "eb", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{"ea", " ", "eb", " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ea", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ec", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ea", "2"], " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["ec", "2"], " ", 
              SuperscriptBox["n", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{"\[Zeta]", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  SuperscriptBox["\[Zeta]", "2"]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "eb", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["ea", "2"], "+", 
                    SuperscriptBox["ec", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["n", "2"]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"ea", "+", "eb", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "ea"}], "+", "eb"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]b"}], "]"}]}]}], ")"}]}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "eb", " ", 
                    "ec", " ", "n", " ", 
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}]}], "+", 
                    RowBox[{"ea", " ", "eb", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["n", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ea", " ", "eb"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["ea", "2"], "+", 
                    SuperscriptBox["ec", "2"]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], 
                    ")"}]}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}]}], ")"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "eb", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ea", "2"], "+", 
             SuperscriptBox["ec", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"eb", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]b", "]"}], "2"]}], "+", 
             RowBox[{"ea", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]b", "]"}], "2"]}]}], ")"}]}], 
          ")"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ea", ",", "0.1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"eb", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ec", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]b", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Zeta]", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8417242596150374`*^9, 3.841724309583972*^9}, {
  3.84172436475496*^9, 3.8417243780369816`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3b2a84ed-436a-4acc-a89a-59c1812f95bf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ea$$ = 1.588, $CellContext`eb$$ = 
    1.152, $CellContext`ec$$ = 1.058, $CellContext`\[Zeta]$$ = 
    1., $CellContext`\[Theta]b$$ = 1.8912387774610553`, Typeset`show$$ = True,
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`ea$$], 0.1, 2}, {
      Hold[$CellContext`eb$$], 1, 2}, {
      Hold[$CellContext`ec$$], 1, 2}, {
      Hold[$CellContext`\[Theta]b$$], 0, Pi}, {
      Hold[$CellContext`\[Zeta]$$], 1, 2}}, Typeset`size$$ = {
    360., {111., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`ea$9785$$ = 
    0, $CellContext`eb$9786$$ = 0, $CellContext`ec$9787$$ = 
    0, $CellContext`\[Theta]b$9788$$ = 0, $CellContext`\[Zeta]$9789$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ea$$ = 0.1, $CellContext`eb$$ = 
        1, $CellContext`ec$$ = 1, $CellContext`\[Zeta]$$ = 
        1, $CellContext`\[Theta]b$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`ea$$, $CellContext`ea$9785$$, 0], 
        Hold[$CellContext`eb$$, $CellContext`eb$9786$$, 0], 
        Hold[$CellContext`ec$$, $CellContext`ec$9787$$, 0], 
        Hold[$CellContext`\[Theta]b$$, $CellContext`\[Theta]b$9788$$, 0], 
        Hold[$CellContext`\[Zeta]$$, $CellContext`\[Zeta]$9789$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Re[($CellContext`\[Zeta]$$ ($CellContext`ea$$ $CellContext`eb$$ + \
($CellContext`ea$$ $CellContext`eb$$) $CellContext`n^2 - ((((4 
                I) $CellContext`eb$$) $CellContext`ec$$) $CellContext`n) 
            
            Cos[$CellContext`\[Theta]b$$] + ($CellContext`ea$$ \
$CellContext`eb$$) 
             Cos[$CellContext`\[Theta]b$$]^2 + (($CellContext`ea$$ \
$CellContext`eb$$) $CellContext`n^2) 
             Cos[$CellContext`\[Theta]b$$]^2 + $CellContext`ea$$^2 
             Sin[$CellContext`\[Theta]b$$]^2 + $CellContext`ec$$^2 
             Sin[$CellContext`\[Theta]b$$]^2 + ($CellContext`ea$$^2 \
$CellContext`n^2) 
             Sin[$CellContext`\[Theta]b$$]^2 + ($CellContext`ec$$^2 \
$CellContext`n^2) Sin[$CellContext`\[Theta]b$$]^2 - $CellContext`\[Zeta]$$ 
            Sqrt[(1/$CellContext`\[Zeta]$$^2) (((((-2) $CellContext`eb$$) \
($CellContext`ea$$^2 + $CellContext`ec$$^2)) (-1 + $CellContext`n^2)^2) \
($CellContext`ea$$ + $CellContext`eb$$ + (-$CellContext`ea$$ + \
$CellContext`eb$$) 
                  Cos[2 $CellContext`\[Theta]b$$]) + ((((((-4) 
                    I) $CellContext`eb$$) $CellContext`ec$$) $CellContext`n) 
                  Cos[$CellContext`\[Theta]b$$] + (($CellContext`ea$$ \
$CellContext`eb$$) (1 + $CellContext`n^2)) 
                  Cos[$CellContext`\[Theta]b$$]^2 + (
                   1 + $CellContext`n^2) ($CellContext`ea$$ $CellContext`eb$$ + \
($CellContext`ea$$^2 + $CellContext`ec$$^2) 
                    Sin[$CellContext`\[Theta]b$$]^2))^2)]))/(((
            2 $CellContext`eb$$) ($CellContext`ea$$^2 + $CellContext`ec$$^2)) \
($CellContext`eb$$ Cos[$CellContext`\[Theta]b$$]^2 + $CellContext`ea$$ 
            Sin[$CellContext`\[Theta]b$$]^2))], 
         Re[($CellContext`\[Zeta]$$ ($CellContext`ea$$ $CellContext`eb$$ + \
($CellContext`ea$$ $CellContext`eb$$) $CellContext`n^2 - ((((4 
                I) $CellContext`eb$$) $CellContext`ec$$) $CellContext`n) 
            Cos[$CellContext`\[Theta]b$$] + ($CellContext`ea$$ \
$CellContext`eb$$) 
             Cos[$CellContext`\[Theta]b$$]^2 + (($CellContext`ea$$ \
$CellContext`eb$$) $CellContext`n^2) 
             Cos[$CellContext`\[Theta]b$$]^2 + $CellContext`ea$$^2 
             Sin[$CellContext`\[Theta]b$$]^2 + $CellContext`ec$$^2 
             Sin[$CellContext`\[Theta]b$$]^2 + ($CellContext`ea$$^2 \
$CellContext`n^2) 
             Sin[$CellContext`\[Theta]b$$]^2 + ($CellContext`ec$$^2 \
$CellContext`n^2) Sin[$CellContext`\[Theta]b$$]^2 + $CellContext`\[Zeta]$$ 
             Sqrt[(
                1/$CellContext`\[Zeta]$$^2) (((((-2) $CellContext`eb$$) \
($CellContext`ea$$^2 + $CellContext`ec$$^2)) (-1 + $CellContext`n^2)^2) \
($CellContext`ea$$ + $CellContext`eb$$ + (-$CellContext`ea$$ + \
$CellContext`eb$$) 
                   Cos[2 $CellContext`\[Theta]b$$]) + ((((((-4) 
                    I) $CellContext`eb$$) $CellContext`ec$$) $CellContext`n) 
                   Cos[$CellContext`\[Theta]b$$] + (($CellContext`ea$$ \
$CellContext`eb$$) (1 + $CellContext`n^2)) 
                   Cos[$CellContext`\[Theta]b$$]^2 + (
                    1 + $CellContext`n^2) ($CellContext`ea$$ \
$CellContext`eb$$ + ($CellContext`ea$$^2 + $CellContext`ec$$^2) 
                    Sin[$CellContext`\[Theta]b$$]^2))^2)]))/(((
            2 $CellContext`eb$$) ($CellContext`ea$$^2 + $CellContext`ec$$^2)) \
($CellContext`eb$$ Cos[$CellContext`\[Theta]b$$]^2 + $CellContext`ea$$ 
            Sin[$CellContext`\[Theta]b$$]^2))]}, {$CellContext`n, -2, 2}], 
      "Specifications" :> {{$CellContext`ea$$, 0.1, 2}, {$CellContext`eb$$, 1,
          2}, {$CellContext`ec$$, 1, 2}, {$CellContext`\[Theta]b$$, 0, 
         Pi}, {$CellContext`\[Zeta]$$, 1, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {212., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8417243137097616`*^9, 3.8417243787088394`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1553b7e8-8f8d-4f07-8629-da63904939e8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "*", "cholesteric", " ", "dispersion", " ", "law", " ", "lakhtakia1995", 
    " ", "4.3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "2"], "-", "1"}], ")"}], "2"], "-", 
     RowBox[{
      SuperscriptBox["k0", "2"], 
      RowBox[{"(", 
       RowBox[{"ea", "+", "eb"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "^", "2"}], "-", "1"}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["k0", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["k0", "2"], "ea", " ", "eb"}], "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"ea", "+", "eb"}], ")"}]}]}], ")"}]}]}], "=", "0"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.841706642937003*^9, 3.8417067267830877`*^9}, {
  3.841707379802058*^9, 3.8417073980632143`*^9}, {3.841724466936259*^9, 
  3.8417244836995173`*^9}},ExpressionUUID->"c6008d01-a7f7-4711-89a3-\
a956d1dcb576"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["n", "2"], "-", "1"}], ")"}], "2"], "-", 
      RowBox[{
       SuperscriptBox["k0", "2"], 
       RowBox[{"(", 
        RowBox[{"ea", "+", "eb"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", "^", "2"}], "-", "1"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["k0", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["k0", "2"], "ea", " ", "eb"}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"ea", "+", "eb"}], ")"}]}]}], ")"}]}]}], "==", "0"}], "/.", 
    RowBox[{"ea", "\[Rule]", " ", "1"}]}], "/.", 
   RowBox[{"eb", "\[Rule]", " ", "3"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.84170698990135*^9, 3.841706990964981*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3ee2aa1b-a0d5-4db7-bc61-d49758739b3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", " ", 
    SuperscriptBox["k0", "4"]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["n", "2"]}], ")"}], "2"]}], "\[Equal]", 
  RowBox[{"4", " ", 
   SuperscriptBox["k0", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["n", "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.84170699149726*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"bceab057-08ae-46ea-9684-d7b2a0b87e75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "2"], "-", "1"}], ")"}], "2"], "-", 
     RowBox[{
      SuperscriptBox["k0", "2"], 
      RowBox[{"(", 
       RowBox[{"ea", "+", "eb"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "^", "2"}], "-", "1"}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["k0", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["k0", "2"], "ea", " ", "eb"}], "-", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"ea", "+", "eb"}], ")"}]}]}], ")"}]}]}], "==", "0"}], "/.", 
   RowBox[{"k0", "\[Rule]", " ", 
    RowBox[{"Sqrt", "[", "\[Sigma]", "]"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8417071856270533`*^9, 3.8417072347005806`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"cd08f64b-78df-4993-bd92-ca0a739dcd76"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", "4"], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"ea", " ", "\[Sigma]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"eb", " ", "\[Sigma]"}]}], ")"}]}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"ea", " ", "\[Sigma]"}], "+", 
     RowBox[{"eb", " ", "\[Sigma]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8417072280501833`*^9, 3.8417072353290567`*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"917e79d6-dfd1-4769-a8f8-d1794825adf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "4"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"ea", " ", "\[Sigma]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"eb", " ", "\[Sigma]"}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["n", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"ea", " ", "\[Sigma]"}], "+", 
       RowBox[{"eb", " ", "\[Sigma]"}]}], ")"}]}]}], ",", "\[Sigma]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.841707247786091*^9, 3.841707255089449*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9be4191a-fdb9-4b88-b5b8-b11db94e0b42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     FractionBox[
      RowBox[{"ea", "+", "eb", "+", 
       RowBox[{"ea", " ", 
        SuperscriptBox["n", "2"]}], "+", 
       RowBox[{"eb", " ", 
        SuperscriptBox["n", "2"]}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "ea"}], "-", "eb", "-", 
            RowBox[{"ea", " ", 
             SuperscriptBox["n", "2"]}], "-", 
            RowBox[{"eb", " ", 
             SuperscriptBox["n", "2"]}]}], ")"}], "2"], "-", 
         RowBox[{"4", " ", "ea", " ", "eb", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["n", "2"]}], "+", 
            SuperscriptBox["n", "4"]}], ")"}]}]}]]}], 
      RowBox[{"2", " ", "ea", " ", "eb"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     FractionBox[
      RowBox[{"ea", "+", "eb", "+", 
       RowBox[{"ea", " ", 
        SuperscriptBox["n", "2"]}], "+", 
       RowBox[{"eb", " ", 
        SuperscriptBox["n", "2"]}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "ea"}], "-", "eb", "-", 
            RowBox[{"ea", " ", 
             SuperscriptBox["n", "2"]}], "-", 
            RowBox[{"eb", " ", 
             SuperscriptBox["n", "2"]}]}], ")"}], "2"], "-", 
         RowBox[{"4", " ", "ea", " ", "eb", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["n", "2"]}], "+", 
            SuperscriptBox["n", "4"]}], ")"}]}]}]]}], 
      RowBox[{"2", " ", "ea", " ", "eb"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.841707256700279*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"1a1d0499-b78b-43d0-8ce6-3cd9f26611ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"ea", "+", "eb", "+", 
         RowBox[{"ea", " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{"eb", " ", 
          SuperscriptBox["n", "2"]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ea"}], "-", "eb", "-", 
              RowBox[{"ea", " ", 
               SuperscriptBox["n", "2"]}], "-", 
              RowBox[{"eb", " ", 
               SuperscriptBox["n", "2"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", "ea", " ", "eb", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "2"]}], "+", 
              SuperscriptBox["n", "4"]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", "ea", " ", "eb"}]], ",", " ", 
       FractionBox[
        RowBox[{"ea", "+", "eb", "+", 
         RowBox[{"ea", " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{"eb", " ", 
          SuperscriptBox["n", "2"]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ea"}], "-", "eb", "-", 
              RowBox[{"ea", " ", 
               SuperscriptBox["n", "2"]}], "-", 
              RowBox[{"eb", " ", 
               SuperscriptBox["n", "2"]}]}], ")"}], "2"], "-", 
           RowBox[{"4", " ", "ea", " ", "eb", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "2"]}], "+", 
              SuperscriptBox["n", "4"]}], ")"}]}]}]]}], 
        RowBox[{"2", " ", "ea", " ", "eb"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ea", ",", "0.1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"eb", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.841707262450754*^9, 3.841707345152872*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4a442a70-d272-4ff0-977e-382d7a9ad736"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ea$$ = 0.32, $CellContext`eb$$ = 1., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`ea$$], 0.1, 2}, {
      Hold[$CellContext`eb$$], 1, 2}}, Typeset`size$$ = {360., {113., 118.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`ea$24586$$ = 0, $CellContext`eb$24587$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ea$$ = 0.1, $CellContext`eb$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`ea$$, $CellContext`ea$24586$$, 0], 
        Hold[$CellContext`eb$$, $CellContext`eb$24587$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{($CellContext`ea$$ + $CellContext`eb$$ + $CellContext`ea$$ \
$CellContext`n^2 + $CellContext`eb$$ $CellContext`n^2 - 
          Sqrt[(-$CellContext`ea$$ - $CellContext`eb$$ - $CellContext`ea$$ \
$CellContext`n^2 - $CellContext`eb$$ $CellContext`n^2)^2 - ((
             4 $CellContext`ea$$) $CellContext`eb$$) (1 - 
            2 $CellContext`n^2 + $CellContext`n^4)])/((
          2 $CellContext`ea$$) $CellContext`eb$$), ($CellContext`ea$$ + \
$CellContext`eb$$ + $CellContext`ea$$ $CellContext`n^2 + $CellContext`eb$$ \
$CellContext`n^2 + 
          Sqrt[(-$CellContext`ea$$ - $CellContext`eb$$ - $CellContext`ea$$ \
$CellContext`n^2 - $CellContext`eb$$ $CellContext`n^2)^2 - ((
              4 $CellContext`ea$$) $CellContext`eb$$) (1 - 
             2 $CellContext`n^2 + $CellContext`n^4)])/((
          2 $CellContext`ea$$) $CellContext`eb$$)}, {$CellContext`n, -2, 2}], 
      "Specifications" :> {{$CellContext`ea$$, 0.1, 2}, {$CellContext`eb$$, 1,
          2}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {174., 180.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8417073370244856`*^9, 3.8417073460430965`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"2d420150-2b48-4d2e-801e-4db2521802d7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "cholesteric", " ", "bianisotropic", " ", "medium", " ", "laktakia1995", 
   " ", "4.16"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8417244988524237`*^9, 
  3.8417245284402122`*^9}},ExpressionUUID->"11eeb040-544d-4a21-aff7-\
4d2f5c30b708"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{"k0", "  ", "\[Beta]21a"}], "-", "\[ImaginaryI]"}], "0", 
       RowBox[{"k0", " ", "\[Beta]22a"}]},
      {
       RowBox[{"\[ImaginaryI]", "-", 
        RowBox[{"k0", "  ", "\[Beta]21b"}]}], "0", 
       RowBox[{
        RowBox[{"-", "k0"}], " ", "\[Beta]22b"}], "0"},
      {"0", 
       RowBox[{
        RowBox[{"-", " ", "k0"}], " ", "\[Beta]11a"}], "0", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "-", 
        RowBox[{"k0", " ", "\[Beta]12a"}]}]},
      {
       RowBox[{" ", 
        RowBox[{"k0", " ", "\[Beta]11b"}]}], "0", 
       RowBox[{"\[ImaginaryI]", "+", 
        RowBox[{"k0", " ", "\[Beta]12b"}]}], "0"}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.841724571045039*^9, 3.841724707533859*^9}, {
  3.841725364784154*^9, 
  3.841725409352124*^9}},ExpressionUUID->"183743f8-eaeb-4df8-8979-\
b5874cc54988"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", "A", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8417247093526926`*^9, 3.841724726855818*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"875665b1-3d6d-41a2-be3c-f62aef56d5d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]12a", "-", "\[Beta]21a"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["k0", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]12a", " ", "\[Beta]21a"}], "-", 
       RowBox[{"\[Beta]11a", " ", "\[Beta]22a"}]}], ")"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]12b", "-", "\[Beta]21b"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["k0", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]12b", " ", "\[Beta]21b"}], "-", 
       RowBox[{"\[Beta]11b", " ", "\[Beta]22b"}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.841724711840452*^9, 3.8417247280677814`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"e128cbca-bb17-4065-bb86-c1796bbdab32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "4"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["k0", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Beta]12a", " ", "\[Beta]12b"}], " ", "+", " ", 
           RowBox[{"\[Beta]21a", " ", "\[Beta]21b"}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]11a", " ", "\[Beta]22b"}], "+", 
             RowBox[{"\[Beta]11b", " ", "\[Beta]22a"}]}], ")"}]}], ")"}]}], 
        "+", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k0", 
            RowBox[{"(", 
             RowBox[{"\[Beta]12a", "+", "\[Beta]12b"}], ")"}]}], "-", 
           RowBox[{"k0", 
            RowBox[{"(", 
             RowBox[{"\[Beta]21a", "+", "\[Beta]21b"}], ")"}]}], "+", 
           RowBox[{"2", "\[ImaginaryI]"}]}], ")"}]}]}], ")"}], 
      SuperscriptBox["n", "2"]}], "+", 
     RowBox[{"Det", "[", "A", "]"}]}], "\[Equal]", "0"}], "/.", 
   RowBox[{"k0", "\[Rule]", " ", 
    RowBox[{"Sqrt", "[", "\[Sigma]", "]"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8417247780560446`*^9, 3.84172495683377*^9}, {
  3.841724987084263*^9, 3.841725008662297*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"28753035-16d5-45c1-b9ff-da5f46931f65"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", "4"], "+", 
   RowBox[{
    SuperscriptBox["n", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]12a", " ", 
       SqrtBox["\[Sigma]"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]12b", " ", 
       SqrtBox["\[Sigma]"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]21a", " ", 
       SqrtBox["\[Sigma]"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]21b", " ", 
       SqrtBox["\[Sigma]"]}], "+", 
      RowBox[{"\[Beta]12a", " ", "\[Beta]12b", " ", "\[Sigma]"}], "+", 
      RowBox[{"\[Beta]21a", " ", "\[Beta]21b", " ", "\[Sigma]"}], "-", 
      RowBox[{"\[Beta]11b", " ", "\[Beta]22a", " ", "\[Sigma]"}], "-", 
      RowBox[{"\[Beta]11a", " ", "\[Beta]22b", " ", "\[Sigma]"}]}], ")"}]}], 
   "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]12a", " ", 
       SqrtBox["\[Sigma]"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]21a", " ", 
       SqrtBox["\[Sigma]"]}], "+", 
      RowBox[{"\[Beta]12a", " ", "\[Beta]21a", " ", "\[Sigma]"}], "-", 
      RowBox[{"\[Beta]11a", " ", "\[Beta]22a", " ", "\[Sigma]"}]}], ")"}], 
    " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]12b", " ", 
       SqrtBox["\[Sigma]"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]21b", " ", 
       SqrtBox["\[Sigma]"]}], "+", 
      RowBox[{"\[Beta]12b", " ", "\[Beta]21b", " ", "\[Sigma]"}], "-", 
      RowBox[{"\[Beta]11b", " ", "\[Beta]22b", " ", "\[Sigma]"}]}], ")"}]}]}],
   "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.841725008881016*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"a0605b5c-a836-4bf3-b520-09cb23245c56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{
        SuperscriptBox["n", "4"], "+", 
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]12a", " ", 
            SqrtBox["\[Sigma]"]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]12b", " ", 
            SqrtBox["\[Sigma]"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]21a", " ", 
            SqrtBox["\[Sigma]"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]21b", " ", 
            SqrtBox["\[Sigma]"]}], "+", 
           RowBox[{"\[Beta]12a", " ", "\[Beta]12b", " ", "\[Sigma]"}], "+", 
           RowBox[{"\[Beta]21a", " ", "\[Beta]21b", " ", "\[Sigma]"}], "-", 
           RowBox[{"\[Beta]11b", " ", "\[Beta]22a", " ", "\[Sigma]"}], "-", 
           RowBox[{"\[Beta]11a", " ", "\[Beta]22b", " ", "\[Sigma]"}]}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]12a", " ", 
            SqrtBox["\[Sigma]"]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]21a", " ", 
            SqrtBox["\[Sigma]"]}], "+", 
           RowBox[{"\[Beta]12a", " ", "\[Beta]21a", " ", "\[Sigma]"}], "-", 
           RowBox[{"\[Beta]11a", " ", "\[Beta]22a", " ", "\[Sigma]"}]}], 
          ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]12b", " ", 
            SqrtBox["\[Sigma]"]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Beta]21b", " ", 
            SqrtBox["\[Sigma]"]}], "+", 
           RowBox[{"\[Beta]12b", " ", "\[Beta]21b", " ", "\[Sigma]"}], "-", 
           RowBox[{"\[Beta]11b", " ", "\[Beta]22b", " ", "\[Sigma]"}]}], 
          ")"}]}]}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "0", ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]11a", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]12a", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]11b", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]12b", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]21a", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]21b", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]22a", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]22b", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.841725033136858*^9, 3.8417252104087696`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c6c91bc7-671d-4627-86aa-085a0dac535c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Beta]11a$$ = 
    1.134, $CellContext`\[Beta]11b$$ = 1.07, $CellContext`\[Beta]12a$$ = 
    1.082, $CellContext`\[Beta]12b$$ = 1.008, $CellContext`\[Beta]21a$$ = 
    1., $CellContext`\[Beta]21b$$ = 1.034, $CellContext`\[Beta]22a$$ = 
    1., $CellContext`\[Beta]22b$$ = 1.166, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Beta]11a$$], 1, 2}, {
      Hold[$CellContext`\[Beta]12a$$], 1, 2}, {
      Hold[$CellContext`\[Beta]11b$$], 1, 2}, {
      Hold[$CellContext`\[Beta]12b$$], 1, 2}, {
      Hold[$CellContext`\[Beta]21a$$], 1, 2}, {
      Hold[$CellContext`\[Beta]21b$$], 1, 2}, {
      Hold[$CellContext`\[Beta]22a$$], 1, 2}, {
      Hold[$CellContext`\[Beta]22b$$], 1, 2}}, Typeset`size$$ = {
    360., {175., 180.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Beta]11a$21930$$ = 
    0, $CellContext`\[Beta]12a$21931$$ = 0, $CellContext`\[Beta]11b$21932$$ = 
    0, $CellContext`\[Beta]12b$21933$$ = 0, $CellContext`\[Beta]21a$21934$$ = 
    0, $CellContext`\[Beta]21b$21935$$ = 0, $CellContext`\[Beta]22a$21936$$ = 
    0, $CellContext`\[Beta]22b$21937$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Beta]11a$$ = 
        1, $CellContext`\[Beta]11b$$ = 1, $CellContext`\[Beta]12a$$ = 
        1, $CellContext`\[Beta]12b$$ = 1, $CellContext`\[Beta]21a$$ = 
        1, $CellContext`\[Beta]21b$$ = 1, $CellContext`\[Beta]22a$$ = 
        1, $CellContext`\[Beta]22b$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Beta]11a$$, $CellContext`\[Beta]11a$21930$$, 0], 
        Hold[$CellContext`\[Beta]12a$$, $CellContext`\[Beta]12a$21931$$, 0], 
        Hold[$CellContext`\[Beta]11b$$, $CellContext`\[Beta]11b$21932$$, 0], 
        Hold[$CellContext`\[Beta]12b$$, $CellContext`\[Beta]12b$21933$$, 0], 
        Hold[$CellContext`\[Beta]21a$$, $CellContext`\[Beta]21a$21934$$, 0], 
        Hold[$CellContext`\[Beta]21b$$, $CellContext`\[Beta]21b$21935$$, 0], 
        Hold[$CellContext`\[Beta]22a$$, $CellContext`\[Beta]22a$21936$$, 0], 
        Hold[$CellContext`\[Beta]22b$$, $CellContext`\[Beta]22b$21937$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ContourPlot[
       Re[$CellContext`n^4 + $CellContext`n^2 (-2 + (
              I $CellContext`\[Beta]12a$$) 
             Sqrt[$CellContext`\[Sigma]] + (I $CellContext`\[Beta]12b$$) 
             Sqrt[$CellContext`\[Sigma]] - (I $CellContext`\[Beta]21a$$) 
            Sqrt[$CellContext`\[Sigma]] - (I $CellContext`\[Beta]21b$$) 
            Sqrt[$CellContext`\[Sigma]] + ($CellContext`\[Beta]12a$$ \
$CellContext`\[Beta]12b$$) $CellContext`\[Sigma] + ($CellContext`\[Beta]21a$$ \
$CellContext`\[Beta]21b$$) $CellContext`\[Sigma] - ($CellContext`\[Beta]11b$$ \
$CellContext`\[Beta]22a$$) $CellContext`\[Sigma] - ($CellContext`\[Beta]11a$$ \
$CellContext`\[Beta]22b$$) $CellContext`\[Sigma]) + (
            1 - (I $CellContext`\[Beta]12a$$) 
            Sqrt[$CellContext`\[Sigma]] + (I $CellContext`\[Beta]21a$$) 
             Sqrt[$CellContext`\[Sigma]] + ($CellContext`\[Beta]12a$$ \
$CellContext`\[Beta]21a$$) $CellContext`\[Sigma] - ($CellContext`\[Beta]11a$$ \
$CellContext`\[Beta]22a$$) $CellContext`\[Sigma]) (
            1 - (I $CellContext`\[Beta]12b$$) 
            Sqrt[$CellContext`\[Sigma]] + (I $CellContext`\[Beta]21b$$) 
             Sqrt[$CellContext`\[Sigma]] + ($CellContext`\[Beta]12b$$ \
$CellContext`\[Beta]21b$$) $CellContext`\[Sigma] - ($CellContext`\[Beta]11b$$ \
$CellContext`\[Beta]22b$$) $CellContext`\[Sigma])] == 
        0, {$CellContext`n, -2, 2}, {$CellContext`\[Sigma], 0, 100}], 
      "Specifications" :> {{$CellContext`\[Beta]11a$$, 1, 
         2}, {$CellContext`\[Beta]12a$$, 1, 2}, {$CellContext`\[Beta]11b$$, 1,
          2}, {$CellContext`\[Beta]12b$$, 1, 2}, {$CellContext`\[Beta]21a$$, 
         1, 2}, {$CellContext`\[Beta]21b$$, 1, 2}, {$CellContext`\[Beta]22a$$,
          1, 2}, {$CellContext`\[Beta]22b$$, 1, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{658., {206., 212.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8417251917758245`*^9, 3.8417252106587667`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"d216bd66-c793-428b-88bd-373f8d3ddaff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "thin", " ", "films", " ", "helicoidal", " ", "bianostropic", " ", 
   "medium"}], "*)"}]], "Input",
 CellChangeTimes->{{3.841725548404931*^9, 3.8417255584801717`*^9}, {
  3.8417256474198875`*^9, 
  3.841725650460062*^9}},ExpressionUUID->"60dab20a-7811-4d02-aa2b-\
84e6273033c1"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["n", "2"], "==", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Sqrt", "[", "2", "]"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Sigma]", 
      RowBox[{"(", 
       RowBox[{"ea", "+", "ec"}], ")"}]}], "+", 
     RowBox[{"2", 
      SuperscriptBox["p", "2"]}], "+", 
     RowBox[{
      RowBox[{"Sqrt", "[", "\[Sigma]", "]"}], " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"\[Sigma]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"ea", "-", "ec"}], ")"}], "2"]}], "+", 
        RowBox[{"8", 
         SuperscriptBox["p", "2"], 
         RowBox[{"(", 
          RowBox[{"ea", "+", "ec"}], ")"}]}]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8417263568995295`*^9, 3.8417264713465867`*^9}, {
  3.841726505236659*^9, 3.8417265305552063`*^9}, {3.8417265655809565`*^9, 
  3.8417265792914486`*^9}},ExpressionUUID->"f0798b8c-b17f-4791-aeaa-\
d568bd989ff4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", " ", "\[Gamma]"}], ">", 
    RowBox[{"\[Beta]", "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.842056329346232*^9, 3.84205638072934*^9}, {
  3.842056422384389*^9, 3.8420564292755833`*^9}, {3.8420565104385986`*^9, 
  3.842056545812475*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"9323699f-39d2-4aae-9af3-882efbaa4cda"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJztvXucjdX7/z+kkkOkt5TSWyEqERUibUQZikI6SKWo3ooKiUSFDsqpQYmc
hVAYhwhtxnGchm0cZvYM2zazDdthk0gnv33fs1/r8Frrrn7f77/f9+PzaD7z
dM11r3Wta133Ol73TS+83q5b0aSkpI/KJiVdEv+ZUjU5/n9FfYU/U31Jif/h
d/y7naf6egaX9Qg+KH/30hOXWtajtfx358+WPTI98Xuaj58Hbn+uN8929Oau
8LV0QNfxhc/psdXQD856/okvd37M8/tc3C4loS/gUf6ARzn/gbdMK7RrvRGF
dgvuNfSDW+1s4W75RTnTfM5/U5p/R/plO2j8zfWFv3f6JGGHoIc9gx52k/yi
87/n5pCeNB/Lu+3YbWPhzxNDE38fMp4Lzs9l/rnDj84kPWk+lnd/r7M5Ud/B
iX8Pe7Rv2KMdJdf9PGw8F9z115z0RLu/X+hfKXnGc8H5ucwL23cq6ZHPBXef
+xr6x8BEu0c8/C3i4W+Su/9rMon0yOe6z4s/F/3JLUafhUKe+yu4++uxbT73
12XvFP5d1aNGOcG5nMxdvRMnkJ403xj31+8E5/KAu7j9jsS/90v8jHr0i6hH
v5Bcj1dRUR73R695gnN5wFs5YH5G4ve+CTudMMoDzuWx8mFfkJ5EfH3kW8G5
PJqed3f63P5+sU9Cb8yj/8Y8+i/Lpxryrt3yxpI892vJH3L+n6GzBefy/xN3
61dxFz2H349p9H4z33/6Ty6v1AOO95rO+T1IvKX83f5eS/hXqzTd315YTvU3
9SA+6/8e0PtXa/leYz3giHvg9vdXWqHdUzLF83Ocn2+tEfJcXnDEDb38QT1e
vbFScNYDjv6l212+X2528OAfBGc94Hb/Cev+PHaJ4PZ2CBfGoZYBvd2U+A/7
g1vtI95HCT1N19D7wtTvvke77SY7y/jv4marKf4HDHm3PG9m6uMRjttf/Ujx
OWDIu/35jT3UXlG9PMKfo4Ye8MJ6yXEQx0MXD15G8VDqKXyvHRd+5/rnuLVC
nsdZGm+7j/yE416aR5xkeY4LMo695pp9CckHPJ4bSLzf1gjO5f8n7trjzv3k
dzJOguO9h/ra466UB8c43N7PpDzaX/PjVhyH0gw9iG/gHD+ZYxyl6wkY8u74
rqeUc3+MWS/kWS+4/n7fasRJ5kUcuGQX6Qvay99lv+4PXTbT+JzLFRRxQLeL
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
+t+/mWf0D2t5hsj+xvGU4yZ+R/zU7cb7QRG9vMrvHG/BC9fTpJy7jrgpj875
mHrc+PnrEWqvqEd7JXgJqY/jrVbfOVHxHNc+D+YLeS4XuFvuMsfILry/E6F4
SPHB2N+RnOOALs/nGHh/h/XwOnXM6Be6fvbPmMd7OubhHzHDbuBu+5eM0rq2
jLfghXZ+R9hTl0815N3nTJygz9fjHPcYYE/W4+L2O4z7D6zf/fHVj8L+LI/z
t+AcV7X+sFnu37O8i5vxun/A0INzJWhflndpuwPG+TnWg31X+APLu/p/DlE5
g4Ye9+f4bN1/uhQY8yurnhSeD4fsdkP5rsyj+oYNecyb4beYV0MenPVgHm0f
L0j9Gv8p4uHvUh5xzisOcrzD74h7mp2VuMrcLZfyO8dJLZ7y35U6IuRZL7gb
H5sd088tKXGVuftnj0ep3DGjX4Pb2z1m9Gtw7te6PJ/Hihn9TtfD+3Mxo1/o
+tlvY4Zf6c/l92LMsLP798dP6PYefITKadrTi7u483Ha/+P9d5wn60fj0KgR
b7VyifPq8v6A+6u4p7XV0KPvp0eNeKvpEefVA4a8vg8eNeKtVs5S64zzH5B3
9Sn7oBxvwfXzd6a8vu8cNeItuIvn8n6YlNf3i6NGvNW4OK8eNuT1/Vx5Dob1
uL/kHNDnV72Peaw7SD3YH9HtwPvyUf190C2i+4mxLx+lc+kRMd+GPDjrwfxa
tyfvyxMvcdSj33B5ZPzluMnxEb8jTurtEvXod4lyKb9zXNX+vif93WMy3rJe
cLcew49TOXi/Pkpxj55r7NdHKf7w+Xver49SPOTzW7xfz+XhfT7er5fc7rcx
w3/A7e/LmEf7JfRPPUHnwGRc1dujr7CzLp9qyLt82BfCzuC4bwo7W/W8u9O4
p8r6XTx4mT5OxHxm3FrRLlj3hx5w1u/ytvuMe7DWej2WrseznlHym6ChB/cm
9OcGDP04vww/ccWSjpN8yNCD88zgHLe18nwg9w9wLhDy4KynsF+HqV5BDz8J
inM1ev8PGfKF7Z3jsZ6YkN+RT/UN2+02Vq5r6O0u54Gsx/3Z9ojH/jf5G+L2
igJj34jlMf/WxkNzosb4ifVgPg7O8Zy5+3ePR424yfKIr17xl+Msfke8Bdfb
R+rX6m3IxYy4AW71ByU+M+e4ocvzPYGY0d91PXw+LGb0L10/7y/GPPw2Zvgb
uH2+ETPs74r9cEJvjy9l3La3hzd348+ek1QfPq8VE/f79bjO5zykPDjL4x6/
Hr+978HiHr8ed73vlWn+JM5x8fkSLqd3HgF7Oc37abh3q8dj73sg7p+3X0Px
2Ps8NLh+7ovPx8h6gXO9dG7eH+Z66fLmPRYuJ+7b6e8B7/OO4Pr5MT7fw+3F
9+r++Z6z3U/M+zb43W5/81ym22+T5P0we/lNrp9P43NLsr76+zfVkOf6gnN9
dXnzfhHXV9djnkPleuEcvf4e9j6XAK6fi+NzWtIO4HZ/5vPv/3zP0+7P5j0B
XY957pbtoOuX9XVpr2z9HEXwpJDXxxfe+47g+vk9Pscm7QbOdtM55x3gc6//
fK+M7abrMc8ls910/eY5FbYDuKt9qrm+z3YAt8cNPjfH8y6OG3yu7Z/vjbAd
9HKa5w7ZDvid7YDzOBhX2MtjcvfHnQXGeIXtBs5203mawdluunzA4Gw3XY95
7pztpus3zy2x3fTn0n7P2sP6uvlKeT5eH3d7r4eCY/9d02+cK+bzUhzneT+c
5/kc53m/mvexOM7z/jCX89+f92I7688199XYbuDYRwPn+Q5ztpvO0wzOdtPl
AwZnu+l6gh7lDHnoDxuc7aY/19x3ZLthHb2wPFGxzq6X85/Xg7Tndj4uuC4n
7Q9ufy/z+jevN/F7mdenJbe/l3n9mMvJ72Vex43p9jLes7zO+s/7E2xPTf9U
cz7G9gRne+o8zeBsT10+YHC2p64n6FHOkIf+sMHZnvpzIwZne+rlIXt+6T0f
1sv7z/Nhnv/qP2W74Ce3i855HMXzM5bncRSPr1kPj6N4PMX6eRzF709+Lp+f
4HjG5eH1a/YXyd31q4unxPqCbkfOT8v3F7zyuHrlX/XKm+qVv9Qrv6hX/k+v
/Jxe+TO98lV65Y30yt9o5lH0yrvolS/x3+ZFdJ9fcZdnPjH3z/5F3jCsV/zb
PDxYB3Dt9S/yWmAe/W/vcWO+6eJ/cc+R70lp9pka+dfn4d1f4+PtZYnxJbjX
+5/PbWrlL/nv983xHuf+ivcR4qlWr3+xToif6Nf89yzPcZvLze9Hr3EIj3PY
7jxu/NtxuDLOZ79Be2l2t8yz4BfwB71e5jwdfmcfJ5vrIV7rKugHvI6k9xvz
Hh2vs3mt16Ef83oj+j33q79f/zTXY73Wdb3Wh/9+/dncl2Suj//M83jM9X5s
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
zSL/ft6fGYJz3FD03NHv9CZhZ5avEg+n57/YTfoDHvUN+Jrcc8meh6fu9Sn1
1eIGeIfS7e8ZPlfej2D5+O+3Vm2VReUJGnqmta89ZXAsW/w7yx94NpD8x2LJ
4QesB3xM1eQXxh/PpfqGPeob9k3sOrFrMD7OVP1EjRvglSbsvrwt5elU5Zf2
CD576FyI7BCx+Y/LG97yydZj4UNCnuMG+Eddrv2o6RGZz4Pl49pKfrc2THaL
GnrA63Yq0rTml7JfcDxh/s7ZH9vV6pZH9o8Z/Ujvp9wuMaO/gLP/6/IBg7O/
6XrYT2JGe+n6pd381w2sm3ufPN/N8l483r9mXqiRyEeauP8wgvKZV04Ku+c5
Ur6jfL+W8wCQZ67Lp3rIpxryznN/K9DzpTvy8fl5uaRplE9Y0e/815fIo67q
j//nTKPZ6SSf5lGeNKM8znmPipR33ZF3zrdUPkN5iRX9jt1PJs6NqPrj8e9E
9OaAkOc4CXnmkHeeO4Lytyfaq1PKJMpvrOgfHf/9TCKvu6r/teCy707V20vl
D3jYJ2CUx3mNHWyvr9M48vHx6MGN5el7aIp+Z91rfuJ8jqo/brdvv52Vpfkn
77M48l48+Zbhm4qclPM81pP/8NdjbywV9LGe7b/0e7Hv9zlkt6BHuwQNO1wz
cNPls5X886zHyUOyOHF+SdXTKh4Uv+9+UMgXag0Zz/Xirc8sS3ryffk+YT2F
++AHfaznrfuvLdn6fIjaJezR7mF7v1aew3rifnXHN4nzXaqe+H933VwlLOT5
/QV5L/5rfu07Bk+kvKeKnmCzP493TuTDV/WUeSn1oRKND5M/RDz8KmLUd8H+
GVt35ucZz4V8/H16bmvi/JuqJ/7f9skP5Ql5fm9C3ouf/eZjf4NhMj8p69l4
a+9jcxL59lU9r16fUfruFvnkh1EPf44a9e1S85Nror2OGc+FfLy+yxr9nOdj
PU4nblA/IuT5fQ15L570zbROPxen/NWKntNXDul4bSJvv6rnjtrtzj1Y+Qj5
pb5/J/2f9s0t57JYnu2j60nz0J9m6Of3CHO7/oCH/oAhz3GYub08QY/yBD3s
EzLkwe3lD3uUP2zIq/1elWc/BB/T58ZivyTOr5r1NXmfB1/uM+uvI+585vqk
wvFRxC/zdYPzeEbnqQZ33mdpG2Ueb5aP//eKb4pvJZ5m6HHOo07MlfkBwEsX
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
ByKtXj3iU+ymxU/mc4rNb/3ZvgKyQ8SQr/hXx2n5V8t88iyfu6zH7ga1jwnO
cRK8/7CuNcuUl/kAWX7+DWXu+bpvlOwf9bC/ux748Nbvjwt5jpPg+d+UKFWr
t8w3xPJF+88ITM8+Qe0SM/ovOOvX5dMMee6nunzA4NzvdD1Bj/KEPPSHDW73
w5jhV+Dc7np5ogZnO4PH/bPWvb8n/LWod54HyPN9dnC+bwvO9/XA+b4POJ//
B+fzveB8Hg/ca1+b96/BeT9IsbO2vgrO6w+KvDY+B+f3Edvf633kNZ73Wt/w
Wu/12s/y2q+HPZnDnsy9zlejHW36bfe5/u7+pu2+tvu/ImZeBfZblmf+d/dh
bffm2G+5vsy9zs2y36rFtJ2f8drn9dof8Vpv9Jp3e41LveIt4jHsreWBMfJq
UL4p0Q6Ub+pvOPJd4D4/38uHfr09pZ5/4rjXj3vFfD9Y1S/9Qtfzdxz3ix2M
+43qfUTo1/1Lt7PK1fuN6j1Flsc9R+c14Nyn0vulfK7uv/K5zB09zn0qXY98
LjjuVTnYuY/B9yfwXL1/yOcyX5a4j8H3J1ge9zIcdxTns5Xzzjif7eik887C
/lWTQla/lf2S/N+Q53NzSUna+WzlvDPOZ+vl0dsR5xadc9qsPyVxThvnsfj8
FMqvxw9ZTuY4j8XnpFg+OXEuC+cn+FwDnqvHJ/lc5jg/wecacH6CzymwHpyj
wD4o70+iPHpclOVhjn1Q3p9keex7Yh+C9wfwXD3uyucyxz6EZX/A3Yfg9X7W
g/0IrA/yuh3Ko8d7WR7mWB/kdTusD/J6G+vBOiHm4Tw/Rnn094wsD3PMw3ke
jHk4z2tZD+bjWnsa7ynJtfxjRn4ayosY58izBG5/70iOPDAqV98jyDfBeSZY
3qmuk3dC/XfzPSK5ep/dvOcn5cGDifut4Byfcc+N76VZ5N37blo9jPjJ54KT
knCfBPLQj/skkOfnQh73Sli/dq/EOB+XlIRzpXzeE+dK+Vwn68H5UnB7PJQc
57jAOS7h/ASfU2B5nKMA5ziD/Uje92N57EuCc3zA+j6vo7M81vnBuV9j/YvX
k7D+xetDrAfrYFr7K/2aOfIEautlSr9mjrxn4NyvmSNfk8rVfs0c+V7Ucqr9
F3klwCHH8sgvAW4bv6kc99DBuV8zxz1TzZ5K/1XtpvZf7f6Vcp8J968gD876
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
dKohz+1rz7/L8gGDc7vY8+ByOUMe+sMGZ7vx/Ah5SO15ZGP/yHH/FJzHjczZ
nva8oTE6F7fVQz5gcLanPR8nlzPkoT9scLanPc9lzBgnW7h7Pxfcvm8bo3Py
qYY8282ed5DlAwZnu9nz/HE5Qx76wwZnu9nz6sWMeTTyrNnz4XE5TY77zuD2
/e4YnQ9JNeTZzvY8ZywfMDjb2Z5XjMsZ8tAfNjjb2Z6vK2as19nLY9otOXFP
HJznWczZnvZ8SzFax9jqIR8wONvTnq+Iyxny0B82ONvTngcoZqzn28sTFXlh
7Pl4Yv/IcR8fnOetzNn+9jwuMVpH3eohHzA429+e74TLGfLQHzY429+eXyRm
7IPYyxM1ONtZ2Wd38xu4z2812JjXF5bX6z641z1ur/vXXvemve41e907/v97
/9frXq3XvVev+6de90O97mma9yW97A/u5f9ecckr/nu9f73GM7Abjxu9xp9e
8xGveRzaneezXvN3r3UJ94dlHQZ+y+tFXvb3iude702vcYvXONBrvM1+y/Zn
7jX/9VoH4P4F/nfrObb1K/eHZZ2N44NX3FiWND6vR+4soQfx2TlP7uSn5vHb
X591mHgxa5mxfthmcqPXJ/+8ylg3w3deeR0D+fd5/Dw4WO3e5GUbqDxpvlqJ
77vzOhW+48jrA8jLz+Pwym83qFUq/ve8jvdX4jthaF/IP5TIZ83jT3xHhOdH
yN/K46X6ue2b/GfyPlEvPBf593n8jzyGPB7wX/bamsuOB431RuSt5nEvvvvO
63X4jgjP15C3msfJzp8534eG36K++A4W7AY9yMvP85Sy92bfM/h4HrVvwFf3
mUr183fnG+ul+I4sr1PheyQ8r0T+ax7Pl3i2zdqtw44Y69j43jyvW+L7kbwu
hO9gob54Lr4HwPMvfK9a7+8h8d1ZXmfT+lXRRB6YN+cZHP1X+53f+wq/d252
0/blZb+1jgcUHvrhrXca3rtSkzfGCQqPbJgfePApv1ZOY/yg8LY7Wy/M+m6t
kLeOKxSeHB3x4IVh64S8dbyh8HlDP5vwZNkNut14HJKwjzEOUeTb3lz/uUH9
N/pYvvicR1ZVS98kuHXcovCiuR1Sql2WLuSt4xmFPzv9168u77JFyFvHOQrP
631N/8aL5H1s6/hH4XWSem/qvW2bkLeOi1R+qvI8X9Z2IW/NL6Hwlo9u3fns
gR16P1f8lnnDhH9qfszvNYVvH1qn+u7ufvG79f2o8P2Pj0+/5rF1mrzxnlV4
/49yTjfqvlErv/G+Vvj+sX1f214xXchb3/sKv237wPRBM+V9eOv4QeEbX693
99G923V78vgkYR9jfKLI31C6fZUnKe+cI9+xfN6yY/t3Cm4dFyl8yoZmmbP3
7hLy1vGVwheX7FVrxyp5r9g6TlP44SuWbS46fLeQt473FB67vP9Pcx/LFPLW
caPCx+4YPrhBuT1C3jr+VPjqWxs/v3D3Hv29q/gz88XDHky6rvZK3S8Vf2YO
/wRnf2b+/ogR5ZvG44/KVX9mPuzKlwdc1XOrVn7Vn5l/sf27yvX37hDy7M/M
h43a8fBjETmuYn9mvmDy3dV7tQ3o9lT8Wa2/6s8s3/Olsat7j9jtY/n3iv3S
t8miTMHZn5kv3tCiffks2b7sz8zrXrm17L4z2v1bzZ+Zp/4nLzbg7D4hz/7M
/Mopt122J7JfyLM/Mx8yKqn/e3uyhDz7M/N3cp4Kf7UlW9/fJX9WefGHMmo3
fdyv+xn5s8oH5dR4vGGXjULe5s8qV/0TnP1Z5bdVf77bir0ZWvnZn1U+49sr
pl+1bZeQt/mzyvtvvOrjUsN3C3mbP6u8WPaCivNuoPvV5M+oD/uzKv9WryqT
3p+s39925F/Zfyx45ud9Wt4E9meVh8Pv1FvUMEvI2/xZ5XdV+OjDtIHSH2z+
rPJPKuzI2PO9vNdq82eVN3pl4pfPbMkR8jZ/Vnm9HpU6jsjJFfI2f1Z5QfXP
t649fUDf76dxssoz5jarNG3aWt1vaPys8oLyb9Q9VzpdyNvGzypfeTL459Bd
OzR5Hj+rvHatvdmj03dp5efxs8oHjely+anYbvG7bfys8gsjG//WInuPkLeN
n1U+ZPEVrx2dvk+3J42fUT4eP6vyg89+N6/eA1k+ln8ztnL6FzvlPWfb+Fnl
D5Wpc65U4xwhbxs/q3zqqP9NyJuUK+Rt42eVtxzWa8kjZ6X/2MbPKi9ecsdn
n9wg75faxs8q73hd9fcvWyblbeNnlbctdWXJjx8+pM8PFX9m3nBSziM/DF2n
+wGde1T5gi/e25k+VeZDsZ17VPlfq5sNDh3eqcnzuUeVr7rh44k9P92tlZ/P
Paq8TJGNZx7dL/NEsD8zH9Rr/Ixrzu0Tv9vOPar8MV/12v3zsnR70rlHPI/P
ParyBf2fvqfFEv2+vSM/qkfujxmdcwW3nW9U+bn+H7bffe6AkGd/Zt4/55s6
XRrJe8i2c4wqr5l9em6zs1Ke/Zl5YPg1/ltmS3+znVdU+c37U9Z83E7e82R/
Zv702VMVr/slrK+nKP7MfEJm/U9PX7lBb1fFn5nfWHT/h+Uytwt59mfmjw/v
0PhEm4Amz3kCVb45efsfx67fo5Vf9WfmebObRfdO2yfk2Z+Zb2rQ8q4ph7PU
PCaaPzM/eSp7U/3fg7o9FX9W/171Z5b/Ibn/FyuO5/pYvmLj368avfqg4OzP
zAdN/+G/d66Q997Zn5lvnlJtwBufHhLy7M/MsxbUWfB5O+k/7M/Mzzz+/pq1
V8k85+zPzF8t3u/PBVukvOU+rMY7XvvoQzsG0r0yWt8Q66G8XqfIjx484tjA
RF4FVT706CVrem/epLcrrYeIduV1P0V+5oXyLZ9IzPdV+QUnY5+02i/Hnbb1
E0feuk6oyJ86vijQK5G3QZXf1qBm7bILMzX9vN4CeWNdUZEvs/Wqj9+fvNfH
8psODO1/35l9mv15fQb2NNYhFfnmLwzsXS+RF0KV39pr+trz27OFfu6/kLeN
u1T5rXk9pjdfIvOYgHdo0+belZ1zhX7b+k8iz5e5zpmk5pdYfOtPifwSqnys
aff9XX88qPsnr38m2fNOCD+k9SXIGeulip4ld6Rs7nw+5GM9DaeM1Th+Dsip
ff/yPw/J+bxl3SmRV9RcX1XkH56aWeePxH6lKt+ofZOkm87JctjWqRx563qs
Iv/HVbnvnForyw0eOjGw/LuHDwv9tnWtRP4ac/1WkX+3YOSRpok8GKp8lYob
d/y2QcYZ2zqYI29d71Xka1xff1fZbvK+tziH0/+rIb9Pkd99sK2bOfLW9WFF
fkZm/VbnEvk0VPkxA34u+OZNec/Wts7myFvXkxX53L2nPn+rQOoHb7pj9/T/
3HdE38dS4i3zhaFjpZ++NF33JyV+Mq/a5sWPy+3cJeQ5HjK/47JFZ7vt2aPJ
q/GN+YKdZyZWa5illV+NV8x3HJ+aOb6hfO9y/GH+x401n2kTn9eA2/IMq3z5
FztPVV9B+4JKHFDto8YBln9h13tNf4/3R5ZHfwTnfs280+A2tSb/cVjNY6j1
U+Zz24XvvO8X+ffc75jfdabZ8d75ch+R+xHzcqFXV0fT5X1v7hfMPx75U2re
bOmf7OfMs7aV6DHm3QJ9X1zxZ+a9ti5aUOGJLbpdFH9mnn54eMOZP8p8juzP
zFsUazzvrTN7NXnVn5nnb57TMNIvWyu/6s/Mr1i6onTr+Dxd/Y656s/M57ec
9FCNRjIusz8zv+R8z2v8ww7p9lT8WbWP6s8sP+VI996n1urvCUf+yzb3Tel7
WO5zsz8zh3+Csz8zD/U6sPiJP+T369mfma+sPPWVzmfl37M/M6/10M11+hyR
+9bsz8zvTrqkec8d0j/Zn5lf92rZ5OsWHNXPJSj+zHztc427z1pA+X8Vf2b+
a/2Z6yt9ulv7foDqz8yPV+9Ub/7pfZq86s/MVyyNzGj+nX6uQvVn5gPzUnc2
jh3QvnOt+jPz8gdeKHnVWTkOYH9mfmF06rpx7cK6PRV/Vu2j+jPLb/ntia+b
Kt8xhzzGG2r+VtWfmb/4YLt9r+bL8xbsz8zhn+Dsz8yfvaJGetc/5PfK2Z+Z
X3fv2Xmpv8i/Z39m3u+e9pdMPCr9k/2ZeW7tNyptDsjv+bI/M/9l9ysfr0vf
ppdb8WfmDwQ/LTroUbnOyP7MvOTKS96ol79fk1f9mfnX+29sv35TjlZ+1Z+Z
l8m7Zey318txJPsz83P3JT2e8438PjX7M/O5j5858H18nq7ZTfFn1T6qP7P8
rYnxLcunjqvSYN0U+b1p9mfmmT9ljDybruVP0fyZeZ/9k0v3PyK/Q83+zLzB
93uvH/eL9Ff2Z+aPz121I/SHzFvB/sx87taRz687L/+e/Zn5iZVHeh2IRvVz
Zoo/M994w+wF5/dt18uh+DPz196e9sGEMnvUe86aPzOvdN2i4tm7sjR51Z+Z
z389qeTJ7Fyt/Ko/M5+V8b8Kty+V8xb2Z+YnGzW50KydnM+wPzN/tdj8p+ps
OazbU/Fn1T6qP7N89KsuTc8p3xeG/P0H1s+d9aZ8H7M/M3/02s2/jp0tvxfM
/sy8wq8zbuu9Q8ZH9mfm+YMeeO3zozJPCvsz849Dm9ZPOS/9lf2Zee6zax5b
+Kf0T/Zn5t//t+GoTy7I39mfmY9sUG3+rtwdul7Fn5lPDzz4TWjXHvVcuObP
zOvft6pmanq2Jq/6M/NAbNrj/ePjB7Wcqj8zz3668uMlH5Z5+tifmR8592KT
S36R82f2Z+ZPJNY5Nbsp/qzaR/Vnlu9R6r+931K+Awv5sp+/OnVGI/ldV/Zn
5ovHv9ti+Lvyfcz+zPzzgTuSM7+X+XfYn5l/2bdyo/0BGR/Zn5n3yP6t1tKo
zFfC/sx89OvFk/sq/sn+zLzEnU8c/OGvRN4N5TuAhflgFxT6TbGpiX9PEzxO
gz8/OU77/obD3YdcMTohHxAc+usMHHdnvZLbEtzvnj+9MmWYlqfckXfKN2Tj
bOKF5z+vbfehll/ZkXfs1WP7DOKF58L/2w7fSQ0Jeac4/f6cStzv61dk394l
l6cK7uTDSb+YWCcv936iHmGhx2nXFP8k4n7fmu1Dhj5SYqHg0OPY87Gu72p5
DR09Tvs93mMCcb+br/rJmf21fG+wT8P1XxL3u8/p3PVtLT8Wyrlwyjjifl/r
eLHe/n624Go5u3R9S8sbJNo3MIa43yn/zBMrvhFc1dNtZm8tb4qjx/n33o+k
EPe731c5e8VMwaHn1mZvBWc/vIjkC79L9UrXXon2ihn+xtzBtX8fTdzvIe+W
p8crk6YLrvmDIu/F1XKK73/F+5NezjRfmW9H1S6/YZV47uop9ZonpaZS//L7
snNnfXlpCXmuXX9umm9Q3sifz83OEPz+Ij/mXHnXUtEvwEsuL/ZM0RpryP8z
fMOmLv9i7JJl5FcZvtcrdWzd4JO1gjv+FLgov5PVrHiFr5MP5ws+5d6uH90+
ZAn5W4bvf9NKFa9SdI2Wj82R/3NVtdfmL0wlv5J2s7cvc7/B2T7cLm/Enalb
mxWCc72YV099+GzXIvo9zvSL+wx5cLQf4qUaPx2Odkb5wQPFBv3xZ90Novzg
D1+8furv3wdE+S9ZXHvs9OvSRTuinPPa7tyzs0m6lmdRLc/CufH/Fc0XfNLc
av/J67pFftc7rm3NxaBxP5LLz/ZnzuVn+zNH+Zlz+cFRTvQHvH90Pwn4/hPs
PqDqj9+RnwR8Bzd+++7VV2wT5Zk04ZOqFT/ZpX3XQvpDwHc0srrU6MEHRXmO
3bLpYP8iAWF/3R8CvtvPrZr/eO98Uc73eg5rf7HGLtEuXP6eByoOTb8Y9R1w
y3PQd2H0fedGN9wl2gVcq6/RL5j7Da73C5bPMDjbgdtlT/dTa1sr31/2Kqe1
vRR52B3jAtQLHOMC1Au8WrmCi5+tWiHqBT7glQeaXz1to6hX3ZdS3nz82B7x
fNSrScU9j28vsUf7HoJTL+jpds2RVoEah0T5W7R5bung3nvE+x284Ogl8490
2yvaF/WqXHZ7fvozmSLugU8+etWTH80NiLgHvvz2j14svVfmjXPssffiIWu+
B9U+3O7M2T7c7sxhH+ZsH25f5ty+4KgX7I7xnR5ngmJ8p8eZoHi/6XEm6Ku8
4bpLv1qYRnEm6Lu72V8TKrXYLup1quzM6p81kd/zQb1m9ez6QemP5X0wPR4G
fX9ecmfvxnPDol6/vP3XC6MP7xfjN3DI9y754gPPTzsi6tu39cp+V2/NEv4A
/sCJL3Y1Pi3z/7V2yym/u2GPw8z9Bmf72ONw0CMOBz3icNBod+ZsB692B0d9
YfceifG7Nv5MConxO+r7yIRHGz04+KAYf6G+vSvvKjHxEpkHCvXt3CvWPOfu
XPE+QX2hH3Ed9UXcR9wAz3rhsuMbJsk8ULDDjNs3XFV/qMzLjvqebpL7aJNO
OSI+gN/Zo+HQmQGZxxd2GHr3ZeMa15H5UNk+7A927jc47GOXzzA424f9gTns
wBz+wBx2YO5V3xVxNdsv0ncx4vMz/T0YFvMz/T0Y9v168fMlJ8asovdd2Dei
yj0rd163kd53Yd/cUSsHF5+cQe/3sHgP6O+1sK/M+j9eKed8zyhR3zHaukaI
3o9h3/sfrDlfEB8/o77d32v/3N5WIREHuL7c7nbuN7j+3mf5DIOzHbjdmbMd
uN2Zo92Zww7MvexQ3S2PzJ+PebY670O+fWeeDfuA3/zFnl+anJsv7APuvHf+
99IKYR/wtgMmjgx9tE7YB3xdyV/rXlpym7APePmp5f9aWWG3sA/eH4gbsE80
8/delzWTea9gH+ipe9mo3319Dwv7gJ8a23TP98OOCPuAs5/Yud/gbAf2E+Zs
B/YT5rADc9iBOduB/YS5lx3gJ4i/WF/Rx1ERsb6ij6MK51HJpefSOCoi5s36
OCoixvuob9Nlvx+64yWZL0AfF0V871Y+tv3r2vmi/ODjKiwr0f2uo6L8AzMe
KHHBL/PgjouXd/1FmQ+f293O/QbnenG7M9fHhxGj3Znr48OI0e7M9XFvxGh3
5mw3bvfHTo1Ib3OzzFPiZTdwvI+xrgZ7qusXzroa7Km8v911NdgTHOsisCf4
9mjx5keLbhJ2A397+r03HGqUIexWpcVdf76edFTEB9gB8qE73jpbv/lhYQfw
nzJ7HjlfEBF2eDI45vU2s2UeMa4v+4+d+w3O9WX/YQ7/Yc52YP9hDv9hDv9h
znZj/2EOuzH3stslbjllHnKsp+rj9kSensAYGrdHxXqqPm6PinUyfdwe9WXO
CTdr+/ZqGrdHfaH+P+etqLqBxu1R3/PXL6v7zLfbaNweFfNRfdwe9c3qUvvF
D6ftE/YMfFbl15R3ZF422E3I1/h0eo2i+cJuKfs3Ta6YL/OvwW6105/7fG1X
mQ+b7cZ+aOd+g7Pd2A+Zs93YD5mz3dgPmevznajhh8zZnuyHzGFP5rAn7Iv1
eNgTHOvx6r5JIl+6ux4Pe578acTNHyh57mBPyBdLSmrSoOlKYU/wuktKDG/c
d52wJzjWHWHPN890ntFxvMyLJ+Lel9++0a2TzH8He97zXIcVS2ueEOMo2BP6
51ZeUK/XS4eF3dJeSh2UVUTmuQMf1KbiwmpjTsj3bcKev3wdG1hivMxnx/Zk
/7Rzv8FhT7t8hsHZnuyfzGE35vBP5rAnc7Yn+ydz2JM57Mncy55vxn9feVHP
M+/s8+jz3Bj5oeQOdvZ59Pkvy0uOfR59Xhwz1hPAzx2f7O9SY6FoL7t+5mke
5U/zKGeaR3nSPPXr8/SY2K+An9Tv/lrB3R+cEvL6/D3mydEfufw69xucy6/L
Zxicyw/O5Rn4cZ29/T/eTOsMMSNu6PUKeNg/4GH/gIf9Ax72DxjlB7fbOeBZ
Tn2dJGbsj9u53+Bcfl0+w+BcfnAuPziXH5zL33P6wBdqNs+kdZ6YEc/1dgx6
+FvQw9+CHv4W9PC3oIe/BT38P+jhb0GjvuBcr4rTM0f0vTyL1rVixvsLvPBn
yLCDzv0GZzvo8hkGZzuAsx3A2Q7gbAdwtgM41/fcExUCLyQfEO+XX1uG/GWb
yjyq4KyHOcal9v4e9ujvYY/+Hvbo72GP/h726O9hj/4eNuwGznYDZ7vxOBx8
0d5GU7cWCYv38uh5Dxf5WcR/yVkPc4yXbO9Z9bwKc7anLp9hcLanum6n2hOc
7QnO9gRne4KzPcHZnjxuBMe40R6fIx7xOeIRnyMe8TniEZ8jHvE54hGfIx7v
l4hHfI4Y9gFn+4B72QfjQHDMB9luOvcbnO2my2cYnO0GznYDZ7uBs93A2W7g
bDdwths4243ny+CVp0x+qsEHBWL8PHn33LX33HlKyIOzHuaY19jfs1GP92zU
4z0b9XjPRj3es1GP92zU4z0b9XjPRj3GD7xfJjnbH5ztD8725/kgOOYxbE+d
+w3O9tTlMwzO9gRne4KzPcHZnuBsT3C2JzjbE5ztCc72BGd73lXyiX6jbjou
5oPbouteGdNa5jHneaIXx0/7OIr3SSW3j6N4n1Ry+ziK90klt4+jeJ9Ucvs4
ivdJJbePl2JGu+Antwt+crvgJ+yM+TnbGfNwtrPXuUrMq9nOXufuMA9ke2K+
wXbD+JvthnEn2w3jJ7Yb4i/bB/7K9sHv2H9gO+P8FLc7z9/BcW6R/c1rHePv
1kNs6yrcjnb+//rL/01/UfObw844p8jrEtif5nE19iN5POnVj3DOmNedcH6u
UI9cN8A5CZ4HYV+cx/PYh+D3PtaF+f2Fc668XoRzeygP9ONcF8/rcW6D52XY
p+f5BfbbeByI/RIen2D9mt+zXvEH9xz09vWL89mwP+qLc6i8voTzarxegfMo
PN/E+QOeN2Efkce32AficRfOGfN6Hc4x8PzLK95i34jHaV5xGOdmeF7sFZ9x
LhN+gvL8dO+r+7atPGTMowe8s/q3h4ceMuY1I+pXOTB8ziFjfOgV/3EOg+eP
2H/lcT72IXhchHPz8Ae0L85n8/onzhPz+iHOD/H6AM4T8HwN+3M87sU5RV6/
wvkSnhdjX5nnL17vR5xj4Hkizj2jXmh3r/ep17l9r3PIXvv+XnEY/MG0S1Nq
dZDrQuB6XF3gwf0G196PRdb4ij7Ty1+16Ez9Pevca13xc07DT9fo79k4v3ZU
u8kDbqH5rLhPGDP0cHmYc3n4fcEcz8X9w6rJ6zMzn/pKPBf8hYqLtlUus0w8
V/A/uqU+/epm7X6Qm8+03gvH1o3YI56r33uMGfq5XsxZP9eLOdcLHP0O9yer
Jmf3fGdhilYehzdq0unnYSMWauVx+M7sH1N9ldK08ji8X69+z/e4dadWHoe/
k7TjwT63ZGnl6aH4Mz/XZgeV83NtdlC513PZDuCIP8zV837OPdIiSaPH9J02
QusvDl98fuT8iVvTtfOHbt60Ex/89sWNmdr5Q4dnTax0am1ejnb+0OGz1z87
euq3h7Xzh+53IE7svLzstKNGeWz91+R+g6txwJTPMDiXn+3JnMvP9nTMXJjn
M5K86oNPtH3nwvycy785uWmWtu/s8DWPtL2+xvDl2r6zm+d09gvlk0dv0Pad
HZ658Nz+q9fu1PadHV66UY3Od/9nv7bv7PBqK34uO//ZfKOcbGc79xucy8l2
Zs7lZDszV/fHVe5VfrwHcW+5WnLdnodPDxX1kvec23S7r7e8pwD+Ysk+yx9Y
v0TUC/ybF2Ys7Npa7ueK7w1Xbzbg9fi4DPUCb/y9/8qm0zNFvcDLjFxVZ9YV
OaJe4A9cnFLu7upHjPJzu9i53+Bcfm4X5lx+bhfmXH5uF+Ze9dLOD7v5Ca/o
+ftj+j2CwnyJf/Uo9jSdG3fvF0xP7qjcL4B8ckrSlrQHJxu8/VfrXvywxUJ9
nODkx/tp8Jj2RfT9X0e+98gzZ8eW22nwm766u8y3O+g8eVxPqQlPjd330X5t
/uvIv7Pjh/673svRz1fH5Yu4dtD349zvFuyqfrRZMX1fyeENHqq/ufP9+jq/
w79p8tW+FUeO6eeuPe4dyPv5McOe7Fd2eb8hr45PVHm2M/uhXX+GIa+Oo1R5
7dy7x30HVV47D2+5B8Gc24XlmXP7sv+zvHau3uM+hSrP/QVcXQ9R5cGRN+Gv
iwtSbu4wULS7zNeXlbKq6URt3c/NT13ygaqvXSbnTeAPtH2vXPjeAkN/ra8e
2ZwWOC7nC0E1j0PMeC77FXP4j10+w+DwB+Zod+ZiXkwc7cgc7cWc7eNlf3DY
x6mHm5+i6q6qDee/I+wD3jNY8eSwdeOFfcCn73ti+LKFPwg7gF/5Zq9N7erK
+Sn4sv6Xd2h2/xZhB/DKA//6ffB+ee4d/PsWjXYce3ifsAP4xBOlBreoK+et
4P2++r7Yr5fJeSv49RfL7H/wnmNGfdkf7NxvcPiDXT7D4GwH9gfmbAf2B+bw
B+ZsH/YH5myf2ve/U2qj/6SY/7I8OPKVVE3uldJyaD9hT/D46DQ5b9EXwp4y
r9qj72/PnSPsCX5/kfebrRy3VNgT/LZJx48OXLNG2FPkTxn+VrfmlTYLe4LX
abD8iz5ddgp7gt9Xdlyfr2vLdQnw1xulvBa8rEDYAbz+N183ffXO40Z92X/s
3G9wri/7D3OjvuQ/zLm+7D/M4T/M4T/M2W7sP8xhN+Sp+bzqsGC7mX2F3SQf
12nImbHCbjIf2p1Nlp+ZJewGXungb13m7lisrTM7/Ma+O0J5K3bL+9EJftm1
Tx3PnSbPvYCXvWlxxhc15foS+LB29RblXnrMKD+3u537Dc7l53ZnjnZnjnZn
jnZnznbgdmeOdmfOduN2Z852W7ji6jNdbz8p1vdYHhz5iZb2iC7rdLaPsDP4
51VPL9v7hrwHIfOe/bqs4JFvtP0Oh++v98G9/ZRztuC3jdz8458t5foh+Mzy
lZ5IqS7vL4B/GXg76Zsx8jwP+BdtxhdrfGuBqC/4tp7pbe8qdtyoF/uPnfsN
zvVi/2EO/2EO/2EO/2HO9mH/YQ7/YQ7/Yc72ZP9hDnvKfGJtUl58V95TkN9H
L5FUo4q8pyDlJw19PmeGsCd40RGnS42/ZZGwp8jfVa9c2eyi8p4CeOh/x77Y
3FzeUxB5wMMjr1xeXd5TAF+0rsvEBfXl/QLw1qVXtHzmU3neSeQB+3Pm/MnV
jhn1Zf+xc7/Bub7sP8y5vuw/zLm+7D/M4T/M4T/M4T/M2Z7sP8zZnu+X+z6r
XNGTYr+A5bV92HgcQf4AzuOE+y7a/DE5TeQVYI7z9ZyvBvkGOL8N7rtwXhTk
eeI8Lchfwnk5kLeGOfJbcL4O3EPlvBy4Z8P5GZAfhfM/IP8B53/AvRy+v4/8
apx/APmo9HMCIZHfiPMPID8H5xnAPXvOM4B71ZxnAPcpuZw4d8z3zZHXje/R
Y7+R77PjnhzrwTlcvreOPCJ8Dxr5JPgeNO4z8b1m5Ovi+7nIC8X3c5G3hu/h
Il8F38PFPirfw8U9Kr4XibxffN8TeXH4/ibyo/D9TeTJ4PubuF/Iz8W5SL5X
iLwafP8O+8B8/w73ZfmeHe6H8T0m5KtT16sdjnxOfA8L+X74HhbywfA9LOSH
4HtYuBfO961wz5LLifN0fE7J63yR1zklr3NNfH4PnM+vgvN5dXC+FwDudZ/C
676J170hvs+Vkti3faJCq6llF+wU719XvMga36lj7y3v3SFg7J/uq7W4YPHt
8p4F9hM7BI6sztgs71mAv3XlxPO9KxQY+2vPfz7Pv/mqsMEfblNseMmRBca+
2/ExlXyrL54y9rk6pGyZXmHgPGM/6+vg+7dcGLPa2Gd545nSb559OmTsj3R/
tubazZdEjfX2Gye91+GPlmFjfX7Ay9VjZ784bqwrvv3Vb/mfK/EfvMcHExqH
q+vx31lvLN/p2DsNL11trN8Ovu9krdfpveDI314sd+qXb1H+lrh83ZUVmmY1
zTPWRbf8/ujmBkr8B3+s6JCu25qcNNbZFn487OvuS74z1g9rbr37cJ86Pxrr
h7cUvDm5WdX1xvrh0teeCA+IyDwh4OdX3dK+y/zdxvrhtBJHOreclWWsHx5e
lT1+cIOQsV60c3iNW0tVnWesa1UYsmXvbUNzjfWB/dNaDXqoyx5jPeH5h9YO
eu7SoCH/epm8JS8uChnzyks/mLoz5wq/Mc+9umSv6Vc/stGY586dffPRWLMd
xjzX90up+vUu7Dfms89vfvfk9h0HjPlIzqYi298+usqYH6U92XHaoBXrjfnR
9Xd9GxxWapsxP1p24GzF7ybmGPon7Pgg19fmkDFePfTC/T+0uHqXMR5e+7/O
BT1m7DHGwy1+27a4Xmq2MR5OH/TkV7dXkfEc5yrU70IXnqctPH+gfl/X4QXF
n59x6WcLifvFvjv6vVwnL9w/Rv+W612F+8c694v9TvU7e4X7PoX7nTr3i/02
9Ce5/1u434b+KutVuN+my/vFfpsu7/f94BuX6cQRyMPP06bf0XND84VCHhz7
E+r3fAr3pwr3J3Tu19bN8b2UQrvJdXPJ/WKdFP0D8lgn1blfrJep+f4deayX
6dwv1svAUS+sp6h51gv1FK6n6Nwv1lPAZfwvnG+r+a0L26Vwvq1zv5hvg4t8
syf7XPpYfL6ty2f4bpzdq9VTN6QJ/4T8ouJPlMoasFr4Jzj2y+V+eyEvX2Zw
v0PV15CfZGj7FrJd4u/fhZfUvqNumuCID1iP1tslw1dp9/4lr/y0RlnPLpTH
uqTeLhliHUq3c4ZvynM1Zve4Ll2UE3rGR6d3WHvTeu37UQ7/LXr8/d8ay+8s
IV790eHZ/esryO+8g0/MeWD2hWXrtTz3Dsc6hVj/QFxN7EOjPJB/NTXt66fK
yu+Ag4/L+POjEvH3k/q9KYdjXwflhP7xs/5YdfQ5+f1u8Oa5yQ3Lldomygn+
64JbOztxE+VE/GxaKefrCx0CYjyFdse+OMoJPZnBn0s92GWPeC70TJ35e+OK
M2QefcTh0sPubvHQLPk9NMjPqDSqV5tL5fo65G+LDlo0/rz8/gn46NLfTrkt
VebdRzwfkHRNma3vye+cQn+gRMX8VkPkd6igZ37OmtOr4u8z6IeeK0//p2DK
BPn9UPAKRUffH7hdfn8T/tbntScyp6fL72bCrw7m9ur4QQP5vTU8t/n697s7
72/UF/rnd20/uUkbuf6H91G5a0e87ryfUF/wJ5d0PV2vg/yuKNprd++xta6d
f1j0a7TXhY6tu2Y3ld9xQ3k+T6130BmHgYs8eKVe+n7wLUdFfUV+40mT7jlQ
LCreU9Bz3YXf7gh9Kb+XYb0nW1Tmt7dzv8Gt9xqE/Rd4cL/B/15PhsF5/sXj
ATv3G5yfq8tnGNzruXwvg8chdu43uK08Uj7D4LbyOBzlueGSo6Oc+Q84z0/B
ed7nJc/jJTv3G9x2f1zKZxjcdn8c33Xn++NqP2Juu8enjuvs3G9w2z1EKZ9h
cNs9RHzHm+8hOtx2D9HhXuXn+bs5/rRxv8G5Xrp8hsG5Xur3nNV6gXO9wLle
4F71ssYrj/wP6vjZLu/3kPcb8ra4pI6f7fozPPRnGPK2e174Dq2RP8Ej74Q6
PmF5a14Fj3wU6viBuTUPg0f+Ckfemp/BktcC8uDnB9y9wFlfgLw1f4VHvgtH
D3Oe19i53+Dcvrp8hsFt9w3V8SFztjOPu5izPcGN9b0E97IDrx/yPM7O/QZn
+/D8gjnbh8fzzNk+4GwfHjcyZ/uAs33AvezD67c8n7Vzv8HZbjzPYs524/kO
c7Ybj/+Zs9143Muc7QbOdgNnu/G83s79Bme78XyTOdtN/V6fajdwths4243n
O8zZbuBsN3C2G7iX3XhfgNc37NxvcLYnz9OZsz15fs2c7QnO9gRne/L8jjnb
E5ztCc72BGd78jqPnfsNzvbkdR7mbE/1e2WqPXm9gjnbk+f1zNmePG9lzvYE
Z3uCe9mTzxXwfBP3/dw/U+aPv869MS+7yzxjfvHMpO0356V+Z7yvB6/78IfX
y88z3lM4f8lxGPcJ9ef6xT09nj/ivhDPC247+vWcSZesNsZ7Pz3ywPi0aj8a
44diJz5puOsyvxGvMhd+lrMhb5XR7zJT59/eK2ml4T+4N8jz2W8fe/XNWpvT
jXnW+G13dOo3fIMxf8F9Gx7/J7fr+M2i3huNcene0p8t7tR6oxFXF58tdfmH
zdcZ/ty3Xo1wUupOYz0B9/14nlvy7c9btfLvNOZTI04W37t7zjZjPrK32z1f
D22yw4jn9/duO8k598bx57OHM0dPGL3HmO/jfh3PQ3ueezI/Y2qmMd/ZWvr0
kqPf7jbGdTiXye+REtktrqh5a5Yxf8f9MZ4nNlq+eNnej/Yb43mcF+dxEc7z
cVxd+cqqa7dHcox5NO5H8Xwtd+OxwOyrw8Z6QssGF1648HTImLdOKv/WbX+1
DBvzO9y34XkH7tvAr1DOUNHbBjSrGzbGb7gXwePeQWMjU1Nq5xnjkxM3nS96
aFrYeP+Gys155tv6h434hnt6PO/+el3j51+6X353Hs/F+XseT56fffWRSTUj
xvv9kwsLijvnKfk9lff7iKl3fhox4urBBVlNF99QYKwvLSs4+L9eowqMdRvc
Z+N5dMknJrSO3VtgzAtw/pvHb6frpK+849YC472J+6K8rpI95LuZ0SPyu8/Q
/0uf/Wsb33PMGFfjnDGPc2p1nFn/qWrHjPfIjdX6/Fpt93Fj/rKi8qBDA+88
bowzcQ6V3+8vjd7/fs01J43xfPahRq1/uP2kMb7COTl+f/1/khMFCQ==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/1bIc7qv3k1bLbp3/gEOJwIv
           "]], Polygon3DBox[CompressedData["
1:eJw1nAncVdP6x/c7nvOe93ROGTJkKpJkuH/XrDkkKXSTxOVKmZJKIpIyJRGh
a4hUSEmhuQzXTCQlcwmVeb64ruG69//99qw+n/bnXc9ew95n7bWe4fd7Vk37
DupxfmWWZZ2qs4x/2dSaLLutIssmct1DuUc+y1ZTvp9yZX2W3VrOsvsKNETe
q5hle5Sy7PvaLPu0KssOQu7UkCrq92Wwhxtk2TTavUb/VVz3Uv6Ke/+i/de0
f4vxbmT8vXmB5tzrhXwu4x+YY2we8Vx9PNfnv8k1nfI82o+kfRva96G+HX+P
QO6U7vXn+XN5/o60bcv7LKD9aOraU3cK7Xsy/jzKz3KvMeVHqb+U8qHc6039
3+nTPsnT+G0tuUqMtQfPb0bdCfRZSN2LtNmG8kTutaV8MPem0rYjf49CPjI9
cwzjt6D8DWPsVx/j1VM+hfEOpu9xXH+izcu880GMN5qrHeWLmb/HmKtRyK2R
hyJ/S//rkc9CnoVcSd8rkTshX4r8HfWTGOsYn8+z+yJfRX1n6kdT/yTjFXj+
D9R9zvwX6f8AbZ5EXkmfT+jbi/aPIS9H3pbynrRvxPu24n13pf2N3BvFeCsY
byvk++uj/WuMN7eO96Z+F77fDny/NdT9l+s1yiu4/qB8Cc/YhrE/YszdXU+M
0Rr5AMaYUor15PzszvOaUncT413D897kedsgj0VexPjvMl6GfAvXBp79Jf3v
oe8ixr/K9YB8KuNP5VpMeRn3PqBuOP13YrxujLeWumuR/4o8Dfl55qcX6+cE
5DuQ/0P9EvqMSfP5N+Q3abOU92tM+Xza3kL/KbT/nfateJcfeId/8n5zuLc3
5c+Zk93p/xW/pz9jHU2fFtT1pv0CxjoW+SDkwchLkAcxXgf6H8LPW8Yzrka+
G3kev/FG6rvzjE8of+PvY/yh1B9NfUfav0r703jGRp41j3cs+Y7UP8g7zKDP
S8gDkdvS/kDav4h8NvKfkFsgP4N8IXID3udA3mcF8h8880ee9QX9f0Xuxfjv
Mf4sxq9FPo/2h9H/z/R/AXkA8kye9wDtn0feSPlz2j/C1ZG+51A/g3vTqX+W
+mP4/a143hqesZFnXUT9NshH8fy5yIORD2f81oz/Mu2HIM+i/0z6v4J8geub
+nbUL0fuyngt6d+H/gvp35Nnvs2zZ/C+1dSfgfwF8mLkLZA70r7Kb0X7ObT/
P8a7HfkdxtyiGL9/HHVjGP9L2h9M/2np9+eRe9D/CNpfTpsnaLsX9VdTfwX1
v3P/74y3lL+7IbdjvCNp34Cx+QnZo7TfjXtfI19PmyZ8z+70X55073+5d1w+
9Kd6NON527q+mKvPqmJ/zOb+WurXcc2h3J7xJzP43dQ/xPhdkJsyzvG833zk
3shnIM9EfhG5DePP8PvQt4Hzh7wE+Urk/9DuWJ5xM/Ik5NN49o/0OZ2+x2ah
v7/j3kre/2Z1LuXjGP8U5L5ZrOczkDcib80YryBvT5sN9G+Z9Ml2yB9Ux35X
v3amfRPab5PF9x/NcxdTtzS907e0f4X68TxvB8p/YX4fYT7+wR7bmnKBcpFy
gStP+Sl+zw2Ux3M9TflE2tzD/Exmfubx/r3dv8j3IM+vDx2iLlmPPIv3qaP+
evr1pG4CdQu5vqD+I+pfoH4R8rnIjzD+i8iLkQciz0V+Cfk15PuR19H+Tn7P
69x7g7ovGfNKfusd3FvC829j/FW0HY78gt+Oe2OoX829OfR/gj7Li/EN/BbL
1CfI9yIfQf23tL+M9l3LYYOupP2j1HdD7orcA7kB5WO4jkLujlzUlvDcbsg9
kaeon8phU0chP0L/+Vzdkc+m3ciGoXPUPR/zjv2KYfO0fcNpP7sYOlxdfhHy
Q8g1jDeUcdvS/4ZS6FDf95rK0K0Tkacjv894S/kN19Lmq9rQ6er2afTvQpvG
3LujGDZZ26zNnoN8EvO1jLZz6HsN73cA7Z9nbbzA1Za2WyK/xnMmaOeQT0du
yvrZkfX1OPcml2Oful9PZLxq5CG0b62tpf11XFW1YeO19XdR/x3tL6D9Ktcz
8je0n037t2g7liurDZumbduC+pddg9Q/Qd0vXI2R32WMjpRPpX4H3mdbui3V
fiN/Rt3ZjL+S8V/VhjDeh/zGu5D/Sv29/NZpyEtofzLyNOSpyIuQ+yNPR74P
+Unkw+h/GGMd6uXc6r9p1xizGeOdor5V1/H8xdxvQ5sO6hGu1pT7UD+V8aYw
3gLqb0N+kvdrSX0Hft8K2kxjrA+on+R+pz6zXn1I+62QV6fvvNK9gHwl5cv1
GVzPvg/j30v/x7h/O/JT9G/F+B2p76L/Q9vLmM+HXW/l0FPqq/OK4bMdQv0l
leHLXca9ysr4Bn6LCfnw52qQD6XtmfRvxe9tRpN/pPn5rjZsqrZ1kWuY9qv0
G1lPp3Pdxvv8wO9pQd3JyEOQn0JuWAx/ar6+Whb20Tk+NPl3+sMjuDZWxZp2
bV+kTaY8rzLmZS1z9h3tD9T2MvZZvN8DzMf99HnaeaJ/Lr3/uFJ8E7/Nqcl/
/Ak5l4852z/t7bG0v46rC+Xm3Hu7KnSIumR8OWxbnv5bFmPPqxvUEeqChdy7
U13D/VG8zzf0mZGL31yk/C/9s3zsMfdam7S+tBHairupOy49ux/jFcrhm6uL
3U93cG825ce49zZt29DnbPqexdVaXeP+o34h9S8jX0ybRpRL3OtI32+Ym5OR
d+W6mrrtaP85f2fqm2k/+bujsQH193O/CfU/8PdR7n9cCv9za+oa0ebw+tC7
D1JexL03/c32qQx9o95Rv+pL6lPO5X0GIX9dG9/UbzsYeUVNrDnXnt/Ib+Wa
M5Y4nDk8hPnbN4t4qKQ/xjMGq/doW0Z+GPlC5PnId9KnV2Xo3PuQp+ZD3g75
6Pqwl+tZb98zXgPaHm/M4NzSpqG+LM8bwbdZTptlPG+MMQD1N1H/DGOdQv0w
6p+nvhH9G5XDLl6jL0P5R8b/ORcx1D7q64Zh27/RRhdjTk9hrJ1qY67v4l5f
dT33RzQM/0R7/m0W8cVqrveo/06/nPp5xfCnR7gGaNuQv10rI2bxm5Sof4Hn
D+CZf+J91vOMtozVnnsjkTcw19tVxjfaSHkW91/Wd+WZQ+nzOH+fQX5KfUr5
UepX6utSHq5dYE4eqA4fSF/oMerXUf8Q198pZ7zn4azFX2lzF20aIJ+OfKQ2
txB/lU/Tn6V8DFc/yn25jjJOVG/o/3G1zMfe7FoR+sw9+jbrdw2Pmcl1Sy50
hLHzt7WhO8r5GM9xXy3EHleXHJr0sXvPva8OcA+2cl4rwufU93yH8QvGy4w/
PxexwyNZxIvGjV8aW1P/CfJ1yJ/nwhfTJ7sWuTHP+0DbyP1TmZ91/C1RX+b6
gPKSFHsZ/xkH7m48Tt3FvM+PxkHUt0X+qTr86PeSrlG+E3k1ciXyd8i3qkeR
1zPeBq6nc6FDjTWMUdWtxri+e3/ansT7fM+9BhXxTsafX1D3G31/4fqMcpl7
P2fx+/SnX2XM/+i7I99UiD3j2nSNupfqeP9ujLU37/9MIXSQuqiH/nop5tC5
ND40TvzR2In67al/BHk7/u6PvB/XNpR/M1ahvDPlBYVYTx0rwv83DuhKfacs
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
B+rrEtfi9/rR9YncGLl5Wr9irmKvYqBioWKqYqtiqmKrYqpiq2KgYqFyqHKp
XYxtGob9+bIqODL9lzsY5+Es2rinFmszqoPjk+sbS/3kLGyUtkr//AbKZ+n/
02YVz7k+iz1wHHUXc42l3C/Zu5HIt6T9+2f9t7rYzydzneA3Yr3PT/7d99T/
T86iIny8zqXgJOQm5CTkJuQs5C7EcMVyjT/l5n+qDXsqBicWN7M2+ImZCZub
z/UA5X/WB74gziBXuTvX2qqoE+89V78hCx2mjteG+lv8TdrWD+tDn6nXRtD3
Zv7en4XOkteeiDwrC5ur7f26FP61fvb/GkT7GchDtRfOJde0LPhzdeDjtLks
6TK5ujfqYvzBfgPXYz64M/noPXiXZ2k/ifYn0v5E2r9J+2ezsEkjaH8t16Qs
+Hh5eTlcfQE5R7nH66i/y/ngXp/kT1xqX3WoMb7rQzyW65hcxD/PUXcr7Y8t
BGcpd6nvITcq5tU+6XznSoz11oqIP4x/5HjkvOW65X7E8MT8xPrE9sTc5D5u
rA0s7tWE1/vN1YXmMOgT6AuY26D/pc+gr2CuhD6YvtjIzXhdOXw+fT2xx+fz
4U9dk3y4DcivJt/K91DHqevE+MX6XX9i3+cnf0LOTp9AX0Auz5wDfSJ9IXMR
5MjkTq6rDe5MP1J/UrxTX1PM/5I0nti6OnvnpDPV5XJY+h/6IceWw4ZoS1Qa
chX6bCvrYo3qyxnDGMus4V7fhuHX698bcxt7m3+gD26Ma6xrjGzsZQxm7K4P
4zp0PerbaLNdZ643bblr3D1xQfqeft+ByMOywDpXJL5wbuIT3aPTE1/g3MmB
yIWIkYuVy6HJpV2KfHniN/ZhvD2z0PXtSxHL9Ux4lr9fPaw+1rbqE9yEPD0L
X+HFpB8GJv9Vnbh9spFLk721rzpd22EORX/971zkVjh2y1zYBXW/c+rcnpv2
txi67ysHKLb+QtI/5yb/+ExxrSx8dn13dZ76QoxK318dqa5UR6orhyR/XB1x
ey72uftdfFVfxjkfnHSD38acGsf3OaPTt7JenaAucQ6cC7FZc2vOT99SHaMu
cj1ra7W52nL3qfvVPe5eVw+oD3wn300OV+5hWW1wuycnvk2bo63Rp9DX0OfQ
19CG74HcPAvb3jc9T85S7lKOU67xudrgPuUH5G67JY72xOSjuMT1FbRZW+SC
39OWucZca4O5d3k5bLC22BhI3l6ddDjl4VnoKteoa9U16lqV15HfkT+Wa9Ln
0QZLe+oLyVFsWxvv5LuNV8dloZNvSDbirmQjtR3G6I/kIkfI2P2sYuQ8mOvQ
lrozi5ETYS5Em3LEKMYq6kB1oZjMpMQ/iZWY8yU+J05nLtjZxchhM3etHf1/
LwVGKTZ5mPFaIXBb8dtvc4FxiT2IQYhdimeL6YrlLixEvob4+Ra0aVUKvuKH
LPBz4/XfSoFZilUeKtfD360SRyC27x50L4pxijXLf1kW9+zH+55TjJwVc1Xa
0/8/pcD15ahblwNz6pB+/z75yFGS/5AHMXdJjE+cSbxpai70hTlz5srJpWpj
xKXEp7Q92nd5r+H1oU/eYk+9noXPr+8vfiA/Ik8iX6I+NafOXDpzBS6nvH3i
Ylq5tmhzMH9/QL6qGDkHcoJygeYiiAOJBy2oCixUzFIsUkzSPBExDbEN96B6
yRwFc9rMZTN3QZxHvGd1Fti8McvtyUcwljm3GDlK5iZ1oK6yHDZe235EOTAN
MW4xeLEOOV3xer+xXK8xin6U/pSxizGJe0J7bawiRi+GP7sqsHsxEbESMROx
EjFfsRIxE7FgfX59e318YwF9cn1xfXJ9dXEy8bItEr+ijyu2L8av7ytGLzcg
RyB2L4avL6xPLLZvzKBvro9uLKGP/+dc8I36/ps5AjF9uQNxWvFaOS65CWMM
Y4EWWcQecgxyA3IEcg97FqPt7gmvkmOWK5EzkXs25jYONx43FpdDEdcU35Rb
MYZdg1yujNh2ZDFicGPvw8uBs4m3dU18gpi12LUcm9ybGLhYsZix3Jd5UvI8
8j0v5SLeE5MQi9C+y2mJnYmhiYUPSvysMbaxtxym/I08jtymOLB48KKqwCON
wVfVBCZibK6Pra+tj62vrR+vPz8R+UpjlbRWrDe2Nu40/pRPlleWc5R7rGa8
t3LBuYsvizPLxZv7815VtJWLNsfDXIppKT6Vc5fbdI/LxTcoxXgrs8inFMcR
zxEzE/uZzbjLs8DAxcJ3KwceZJ3+nLkt4iW52shxcc259uQA5Prk6eXrzak1
l8qcEOMlfYDN8ZG2S5ul7cqXgzOXKz+qHLk+xdTXnJ+RheAK5QzN25SzK6Vn
iXebwymeuTD5VsYNxg9rqiLWMGfK3KDpKV7RXojtztW2liNnU/uinbk2jeez
5CmvS3iGvsCapMPExOV/12aBleuj66trf7RD6iR10/yq4CblH9dnUTb3tiQm
VB3f0G/pGnAtiLGLtatf9eWNGYwdjCOMJ/wmfhtzZMwFuz/FW+aA6Nv5+8yR
qa+N3GFziBvUBiduvoKYk1x5RTny/cz760i5D/3fr4jcv0J95CBUV8Yadi0v
qAls6jOuRTWBi4mP+Y3eqYkcBnMX3CPuFfORxZrNA99sf90Ljud+NY/SfMp3
uR6kPCwfe9s93ozn58rBz8vTq28/4e+OyDtzfVYTmJnY2Yf25XkD84GvvZIw
uHORv0V+Annb+tDnPquhGCBzV1+OfAHn4kjKtxVjrZqzpj0yB1yscVS6N57x
9qoMe6RdMifLXC5zuswPEhcVHzV/UCzVHK92lKtrI/fLHI6Oab+Y22FOmrld
gkDm85iTJx5qTsvqhJcaj5iTNDXhv+LB5sSZW2hOuPno5ueZp9dEH6oy8lXM
W/myJnJbmnN9XRM+m76bPqO+o/lM7dL45j49lPBZc/CmJPzW+MCcKXPl5Bzl
W+Rd5F+MV/RV9Fnk+nZM/OqFXDvkw4ZoS9omW/R8wqe0OdoefVAxKX1UfVNj
LGOtFsk/NeeraRYxgPGVGJBYjpjOirrgmOWaxSzFLs0x1t/Uxmprzfk097Nx
LnKBX0r4jzZV2yqmKvZpPGxcbEypb9ws+ebaTG2nNlnbrI3X1muztd1zkf18
nkGQXxffkj/XRmortZHaSn0EfQUxQbFBMS/z2h9L+GDT9Gx/p79XDMyYR0zH
WEicYGwqGx+JGXjPHH7xAXECc/uNicQ+9kvxp/ia+Jg4mbn0Tye8Tp9B38GY
zthOG6+tPyD1FVPdP82572QcZqz3ZMIHtfHaemM4YzljZGPl24uha1yL4gf6
DPoO+hT6Fs8m/FAfRl/GmMTYxBjTWFOfR99HH0VfxZwBsW8x8CNz4QPpC+lT
6FvoH+g/mLNi7op8m/ky5s2Y+2dOofkk5pXIv8l3mNtyVWojPin+aoxjrNMs
5RvIqTXNBwfcKfF55qcZAxkLGaMYq2zMx9kGzyx4duHXUvDNrv2J5eDEzNUw
Z0OuTH9EX3+v5E8YB5jbMQS5ST5y/M0F0acw99+cKev1Kc2lkteR35ET8xyC
/oy5By0TXiCGLDYpRimWbg61uTGbcmRK4ZPomyysij3sO/lucq5/5IJvNR/D
vAzPIhzHQN2rgjvybIe5cfJJ8krmyIlbik0afxmHiYGKhbrnxHTlfMQW1CHq
kpqUv3R0esYexeAPfbZ8pz6Nvo2cp9ynMaCxoDGnsadnhLolX1C+3Zwcc3Oc
T2Mpc4TMDTJHyLzEH9N8+I1fqYscb3N3zOEx99ucRHPnetVGrqI2oWGyP/qa
+hvLE16zNhdxzQXJJhgHacP0PY0ptW3aKGODEfmwXdoQY5uJ+bAtYirmqpmz
JtYiHy6eqo3SVm2X4mf37Gt1EWMaa8r7Hl8MG2osK2+tbdVme26gdz5s+RSu
9XVhS41XzGn9kLFPzUeuqzGgseD+yD2KcWbBswueqfBshWc8POuxAXlDXdhQ
uSs5LG2rNtK8yTvyYTs7lyPv0ZiqmPSp+7VN0oG5pF/VicvrYj+bq9Qp6UR5
Gvka4x91qvrcXKVjs8Bn9Gn1bWsr4vyE+ILcQL+k0/T59P30N8192JwT4Po2
V0B8/6wssKOjGkZOgjynfKe5Cp5hkK8QexL/lyOQX5JD6JnWpGvT/SE3r/2R
R5JPkpuQRxOLHpQF7ue3F/v1TJJrYDfkdTVxxsU40u/g9zDGNdaVg3VfeVZK
btZvo080uSK+kZiB2IHf1G9rTo+5EuZMmHtmjrnnKzxnYe65GLl+n7nvYuee
ufCcg+cdjklxs5iLHLu4qzm65up6puGpFIe3Tz6ja1ZOfZw4Xj64dn0E8+XN
R52QcGLzWbsg35YPTlJuUg5TLnM4c/pVXfhw7gc5NHN2jbGMtTwDILYsf+7Z
AHO4zOWazft+mM4geBZBH831Zs6PuWDqaHW1a39Wml/3gD6j3K4cr75kp1Lk
eJnzY+6TObDn0ubefOTGmkNs3HJLPnKLB/O8T+vCJ3Y/mUM9QHynInKrne8r
ElfuWjJH0VxFc2DMhZEjGZ7kj+oi58hcM30ifaNNOfo1gSmZuy/GLDcuRy72
LKchfy1GJsZ5SCG4Ae396rrgb8Zkkd/StRD6Xq6qkGzY78m/aJJiLDk39Z76
T1snx6ZeUb/oGyxO/qD6VX7LHAz9Kv2rd1IMbCwsRiNWI9Ytf6rN1mczBhTb
X1gXsaGYvfkX5mQ8n3gAY0rzBxbUBSfgPcu7luPMwErjybo4S3Ac12X1wUHI
RbhnzbuQo3Mv6z/JXe6SfA45UX0XfRi5UjFI/QT9BbFJOSe5Jzk1uTVztj9D
fq4qcrk9YyH3Kwfs2Qsx3eZpT4v1PsrzlleFDdQWylmqx9Rn+nrmiJtLYk6J
ueM/lwJnMLf3wHJgVO4595pch3PsXGvT5Ba1T/La8ttyi57T8rzWihQz/bsU
ON+m3N1y+BjmbpjDoe8hXyT+Kp7qWUB1mLpMned8yd+YJyMHIhciJqcN03aJ
5Yl/m4syLgvu8PiGwcvLz8v9i1eYN2H+hFyhOef7Jn/RuRdPN1fGNenalBMT
156RBVfmGTz5KbFf+Sf5KLFg8WL5LZ8hfzk2PdszXmLH5tHIb5pnIHcnni7X
pk+pzlHX6GuaI6ifpr9mLtTb9YHti/HLDTpHzpUcklySYzr2aVlwqa5hYw03
kGvbMzXmnpiD4lkbc07MPTHHxlwb5/KK5IM5p3J6V9P/jiy4Ps+gmK9i3opn
UzbnhIsXmCvuGt0z+bueFZRzFGMVW5WL9EyRuQXmGHjWaDNHKn7h2S71u5iG
fKlnYZxT59Y5dW7di8ag5u+4J51j59o14lqRY5Y3lD+Ue/aMwCfGrFVxdsDn
iRuJ4YrlijmbR2s+rVi0OXQnJPtkbp1r3Fw289Vd+2Lg6kN9brFx8//Mox2Q
MGn9NTE3sTZzqw8pR96b+W/6N9pLc1XMWfGshjG9sb06Wd1s3qX5l+YAm5tr
DrG51eZYm1vsHjG32Bxj944+kL6QMb+xv/6P5749/y02rk+vb2/+vWdR9Hn0
fczxa5uPMwOLU3wrNq89065r399vEP6fWIYYiVikZ3j0Lc0T92yP5yfMoRfj
EesxB/7dusixbZz8N7EXMZcBxcj/PCPFA3IO+nvqAfWBXIaYjNiMHLM4tGck
PEu4a22cndBf9Fy85+PPTvbUPEXzFdsnH1Jf0txB5/6chpETa8xi7LJLfeA4
4jlib3L85nV2zgf3/7U6vDIwmNH5sJ1iGWIa2tCd6iN3SkxwSPIXxVbEm8x1
Mp6Sc5BrMNdWTEZsRvs6IPkP4jriO+Y66Z+KM4k3edZW/+cc+t+Ti1xnz8CL
a4hveDbeM1liLe2Sf+KZat/dHAbPWm/OATb39+NC/DUX2Pxvz67+txR/PRPW
qRxn6M2TFMPS3+6b3tl3NbdLf3ku9esr4qy0nIXchedJxDHl0Dx70yvxV3IY
/v8E/j8FchvmiOmX6Z+ZOzYy4W1VCS+So5qc8GPjCzEfsR8xI7Gjn5K/4e/r
nPwP81rNbzV3w/Oya+siZ9zc8U1nfmrjG/ot9en17cW0xLY8E+n5Lc9xeVbS
HG5zuV2zrl1zmJclvkTM1Jw4v7nf2ly5KxL/4vq2j3nIKxM+KobqGR/P+njm
yrNXnonzrNLJtXFWzhxvc73dM+4dMSixKDE2sTYxsEPS9xVbM8dzk+9cGbmf
rgf/bwTPyHtWXv9ODFqM0vcbX4qzX40Sf+AZUjFS/cVNZ0vTHnDtK8shyyWL
uYm9iYG1Tut9E5ZXH+Pp/xoTGQuJsXr+aBPP1DC4f8+YeNbEM1rmDppDWEr+
+XpzIarCh9ev1L8UoxCr8EyVsbvnXDxrZc60uTfGjMaO+p/mHY9KGIc5EOYu
iBmKHbrn1KO+p3vRM8f+3xiuQc8iy8nLzYv5if3JCX6EvLQquMKlpfDHzKkw
t0KM07XpGhUbFrPUuRTzFft1TYiny1O4VsQ41Q91ic/xDIkcqdyoZ0vk2OTa
Jibf4f8BV0K4DQ==
           "]], Polygon3DBox[CompressedData["
1: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
7n8I+i6KtT+GLU7Kr8qX6t3+BzRpqHg=
           "]], Polygon3DBox[CompressedData["
1:eJwl1GtojmEcx/GLzfmwIcv5MDkUZSmHV4oX5AWJpkwSpeawrZCztBDGnA8r
JYdyKETYMLa1KXPY4TEMhRfMqY09w/KC+Dw9L749d9/7d/2u/3Xf9zZ0Sc6c
7LYhhHFoj6JuISzyuxBbO4QwvnMIrVw5CrhjuMin8226hzC5awgD24UwAL07
hpCC33wP/n5iCBWolq/Bdz43KYQp1m7gT+s6g+YuIYyQb+Ia0SwbRYt8vX2f
tQnhKRo6hTBEdjWfLF8qW4KHso/wjc9IDiFLfzH/S3crkmQX8fn8F36srjQM
5w/qf+fgE80/2uxj8EfPC75Wphof7DvIvqv4Bv5eQgh/+XzZSfwOfqSuFt3R
2L5macUP/rn8bdkiLJfvI7+E32KeTNcz7V3Kl6GHZ3NCzzAuFRe4i+jOb4v1
mzGKPG4POvF1+m9whXhvzqn8PNlCLNCRgSquGr3ks+2bYt9i+W9muol/5mmW
f+lc9UjUUyAT4XPk+7l+JH/XveKE2AO1Tn6e7nRU6n6Inknx5/Zctr5d/H3N
4TNlX/NfuUZ85pfy2XyE38xtwjTup3c03b7X3dvvwzyICn65Gc7yc80zQ2an
53zNLFfxhX+lp0HHpxj6F1uTpeMOvy4x/r3V8Zney1tda82a4rq342Rgmvuj
uDfy/Z1pIJrkt+vJ1VPGH5A5hGf8Jmsb9RTyy7gViPDp/Ct+uzkv+C3VM8uM
j3FUNhW3uCKMlr+OVPuukZ/QJf5+xzhz1HtJ4NfLV8o+QJ7sJQzm5/MVXDlW
cldifxt8xKy7uV34ZPbP6Ms/5fdx+WjkmtCPz7Xvrtg3zD+xbxVqZNP0V5n5
CWbrPidT5znvteaUM5Z4ZtHY/wvnTuNqramxNtI2vm9e7BuTP6zng+5xuMxf
QZL8Ef4jdxJRrgX9+T/WFeg8jnP2OY8mPRvdG+a9z+VX2jcrxN/jf/Wxuck=

           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwN0E8o5GEcx/Eva8ZOrD9H60/50+IkceIgcdMczGm4EDeF0tbmLpkojpy4
KqUcpNSepLTrInftHjQzpoTW2gP2dfj0fp7P7/N8vs/za51ZzCyUR0QnfaCb
TxFfGfvVEbWMOqqn09qImlREM36XOZF9qYroS0YsyffjIT/Nv+Y/OP/Gv8e/
HyOerJ9xOxFxVhaxg73yw7p78If9G/8nlnTcUZE2zMzJrOMX7KJuWrCfw3kc
qIgYkx3EZF3EFK/FPbfMfte3WhNxacam/jTvH1U6+4JX/HP+rHWKjnSk5Cd5
E5SlZZkN+W94623TMo/Wa3hsbg4n7edlsnhg9qu3NuGouwzxR7Ddt37rVvyM
jdREeZ0regpYcIc//lUeO8xupzba9X+L/D3M6Eo7N46/dZX4v+Qf7Bvc5QKT
lJBJ4H/cAkAj
           "]], Polygon3DBox[CompressedData["
1:eJw13XegHVX1PfCXvJT3kvduHr03qSIJhAAh9BZq6DXSCURAmnSQTmjSpCkq
iIL0johSBaSjgl8UpIMCivTe4bc+Ofv3xySzZ5+ZO3fumXP2Xmvt8xbYZd/N
9hnc1dV18fCuriH5/5cjuro+z87AoK6uF3PsiGxn5vi5ObZJfFvF3i723rGX
iX1utnez3532T8Q3Jdse8R+cY6vEd1614ft7trOz/3Z836TN47EPz3Z69s/K
sY3i2yXbb7J/WY6dE99OsS+OfUnsH8fus2V/jRybMb6jYp8T+yexN4v9q2xf
Zn+m3M/L8Y0c2dV13dBcM/aKPe07+Cyf6bsNj/+K+H8Z//j4N82xLePbPW2W
Stsrsg3Ev3j8b8R3VeyZYo+O/VbsHbJNTfsD037F+K7JNmv8Y+N/J77rYs8e
e1zs92OPzvbttN8k7eeP75tsF8R/dvxL5vPPj/1BfENj/zNtu3N/l8R/fuxx
8V/an+/ana23q2vCQFfX8bFnTPu/Dcvv1cm9pP1u2S5M219mG5X9G3L+FTl/
1diXpf1Pc/5Pc/4KOX9K/Ovk3A3TCX4R//djbxx769iXxH4x9/NCtjmyP2e2
PeKfFP/m8f+6p33W+rE3Hdw+c2raXpn7uSbf8efD2296RuxTutpvPTTtL8v9
/CL3s2zaD4p9UezzYo+NfXHaf532s8Z+Je230Qdy7r45tpxnle2T7PfF/1x8
w6rfrpJ/OvHtmu3y7F+pT8Q3YMv+xBybeUTrI/qyPq3vfC/bPtk/NMdWi++7
+nDsH8RePvbPs32U/d583jPx/SZ2X+534dj/if3j2G/E/1XO+UvszbNNzv6e
ObZ0fPvGPiT20bHXjr2xNrF3iz0m9g3Z5sr1xud6H8Y3zbsS34tpc1fsmW3Z
X8cziW+vbH/I/p059uv4jov9eOznYt8Re69sB2b/yBxbK76vsv0i1/9xrj86
z/eY2H+N7+m0uTVt/5Xnf0T2j82xT9I3Ts2xi2L/KvZ2aXtTtnlz/oSc/0l8
78U+MPYRsRfO9d7yHWMfGnvB2FvF/lnOPS/XOD7tX429W/z7xz9v/PPm2Hzx
TUqbOeP7bX2Ga3+abYsR7V32Th8b+/XYe+b8g3P+/Dl/kRxbKL6N0mYev022
w+I/Kv5F458j/jnjXy/+2eP7zBgR/3HxL67/x+6PvWjs19N2z9i/S9vbc85F
sU+M/WLst2LfY/yL/XDsJ2LfHPuVPK+jsz8txz7L8zp0eOvb+viktH01/mNj
nxD78/gPybGDs11rLDDeZf/B+B5Pm5ti7x775ti3xr7Q52e7wH6OTfbuZPuv
z8qxR419I9uYZixbKdt/sn98fCemzRf5vNPS/jW/ZY49pC/Evjf2I7Gvjn3G
8DaWGlN3iO/kbC9l/50cuy++H8X+d+wPYj8Qu8eW/dXMCfHtEfsHsX8Ye43Y
+2e7O/sP5NgV8e2f7cjsH5dj67pW7u8ofSH2p7m/fWNvkfFi+4wXl+fC+6TN
bfHdnTaX5NyjYv859j9i/z52b9pfnd/r4vxeE3ras7w//j93tWe6ZfwL5XqL
53qn6d/5jIH4H8ux5zIe/jX+iWk7Psf+G98cse/M9W7J9dbvab/ZafGd1NV+
y9HxvxL/S/HvFP9VOWf2+H+R8XKVDCQLpc2Cabu4OSzHxqb962n/WtrvmvZr
xh6Vz54x93No7Lli/zX+B+PfMPbE2DPGP2v8h8cebg7K9ebJ9d7P9daJf+b4
Z4//iPjXiHO1+JeNf0Tudd3Ya8de3hgYe7a0vy3XvznXX7enPXNjjTHHb7FS
thWyPy7HeuJbPO2/nW27tN0+21jfOf4x8Q+Jf4nYi8VeIvbgEW0MvzH2NUPa
2G4ONjebo83N/5drbRB7hdj/y7N6PPZ6sSfEfj32PLEfy/09nPvbOJ83Q+zf
xr4q9uqxZ4n9h9g3xJ4Ye6bYv4t9Xew1Y480h+d68+V6H+b5rDuyPSPP5shs
D+dYmnbNFf972V8xvsF5ft15fvu5Xs6fKf4F9b/43zcfehd8v/SPUfGPir1A
7I/jXzn+YTm/J+fvn/MnxB4Ue1DsfWIvGfu13N8r+dBdetqcb+73znp3XzJn
Zjs+7aaNbHOEscaYY+44yfFc76+53itpt3Ke0caZjzfNZ3+WG/l9jh0b3+pp
s+PIFgOZy8xpYiNziLHdGG9uGZc2b+Ta/8tnTM25G8SeLefOnWsc29PeUXOb
Oc67u2H8c8Y/b/zHx39yPn+2+J/MsVfzPD6I/ybvlpgu9vjY7+b67+b6e6X9
6rH70raT8w+OvWrs3tgjYx8Ye558xrw5f7Gc/2Vvm4OMFcYMc5M5WWwgRjBX
L5vz387138z198j5s8c/R/yLGD9z/nG5vxmMl/mMFzqt776c9i8Man14vthP
xP5z7E1jX5L25+Z5nptzx+d93dZYmXNXz/2dE/8V8f8s/p/Fv1L8H+qP+bzr
9P9c/wext/bs0/6qtD8g9uTYU2Jf09N+v+NinxH73tin5zpH5HoP5Nj18W2f
bZXsrxX/efFfmM87M/4zjRX5vAtinxH7jNhLxT489hexh+R7P5nPPyH2zOab
XOPlTusD+sI6ud5Pc70T458l/r/n2L/i3zn+tbK/fvw/i//y+M/P9c73LuT6
02LPlPb/lzYvpf1vYp8X/3nxLx//3jl/s/gm5/xLe1qf1XfvzP5d2a5M+5+n
/c+9GwMtFtwpz3u/QS0mnJy243P+yjn/rNhbx14u9oqxz+xpMZVcQE4g1to8
/gXiXyz+UzzPXH9W432O/Tv3d0q9Hz+O//74T419UuxzYz8Y+8zYp8X+eew/
xz4654/K+X/NsWdz/gojWuwmhtteLBP/Wbn/s3L/43L/R8Tui//RtP9n2h+Z
6x0yrL1z3r2jYx8We1rsW+UDseeLvVDsk2KPzzWXybWXyjWG5bMWiP/JPI+/
5XlsHv/GsedO+2+l/Qmx10+bU9P2BDlRzl04/ufS/qm03zr+BWM/HfsfsbeM
vWjsF2I/E3uyGD73++Pc/49z/0vn/o+M3W/+y2c83Wm/1dHZ/9Hg9pv9MP6R
8T+cY0/Ff3r8P8r+T+J/xPwpxsv1Ts31lsz1Por/5tzb9XKOtP9h7APS/qi0
/52xyFgb+6TYt8f+Vc4/O+efnfOXyfmHxb9f/D+M/7fxHxJ7r9iHxL4x9kGx
vx/7oNjXxz4q53fyWX/JsWfyeb+OfU6ud06ut+xAy1HkKlPNqSNaDCiWFFOK
Df8m3/Dbilly7jD9J+fPnfMfyvg5OPbQ+P4U+77Ys+X/GeIfyDZr9od6f7I/
V/YfjH+I9y32nLEfiN3tfYk9R+z7Y1+Yz7sx93pP7v9Zv2f828X//fhnyv3u
F/v42NNifzv2erG3jb1n7Blj/0L+mfPvzPlP5/x/JXl9K/sPxX9prr9Z2u+W
9t+L3Un7r+IfGXvG2H+M/+vYfbFnin137IG0XyD2IrH/FnvW2AvHXjz2k7Fn
iP2t2IvG/r/Ye8c+NvZxsRfJ9WeMvWDsxWI/Ef/MsReK/e3Y/4g9UowUe77Y
fzYx+r1izxL73thf5n5GxJ4h9l2xv4ndH3vm2PfE7hEvxZ439iOxh5tfYs8T
++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
87H4/evYt8f+1kCLicRGT+b+3u5p+YP4/qiKr3as8frY3paPfa/mi5NrfJ1a
88NJNd+uUvji1OqPO9f4LZ5eLP7vVn70w3o+u9b4cULFf7vV/HJixVPTCr96
ZHDDKnsqP4JpwIph/rgDHAIuYELFi5Ny/kejGp4Iz4MBw4JXqHhxw/g/HtXw
Z9g/zBh2vFzF6+uLlUc1/BI+DQOEBY6veHuD+D8Y1TgSuL4x1li7SuFHF9V4
PNx7NLjFPGKftQoPvbKrYaWTa/zGr7gWTgW3g+PBtYiHJ1W8Kp5dseJj8e0n
seePvXTsVWK/PqrxhT8pfuPSej/3rXxHfoPfPKv4C3wcPgEXhJ/DJ82T6y2V
662Q6/17VBuTf1H8BT4GpgHbeKT4k9UKr72k5r8Fc/64nL9azn9zVMuP5EPr
xX6v8h/50rqx3x3V8CZ8hu/su4+r/Gid+N8Z1fiWO4c0Pgk/NF99X/iB/H+O
2EvEXjr2s6Maxg/rf7r4mO1qfsaH4a9mT/vvpP1Saf/0qMYR4Ape6Wr85ULx
Lxf/2N6Wf8F8Yb/4TXzl5xVfi2flT3On/ZKxl4/98qh2f2NjrxT7P7HHeO+6
W44n14OJw8bxn/jMudJ+TPzLpd2LaT9n7NGxl4n9/KgWX+C+8Ev4vLnr94GH
wEvmqs+Hn/yt+sO4yvXgK/hC/Ct+DF+2V/FX3hnvzrx1v/CUv49q/Bu+ij6C
3mGOup+FK7/QJ/VN/Bu+cb/i0/DJj9b4vnfhAfLr/YvPo5/AN89Z3xceJL+f
KC6OfWuez6Ujm94B331f8WtLV366dtq9XfiRXHaRbLP0N/75ybSfq/h3fCX+
s7f0CMsUPjK58An8M7561tJb4O/wywPFz8/U3/AleNKj+bze/oYvweL+VPn4
dyqfggcsXfnCloVv4Kvx2zOVHgVeBe+CFcCnjii+sK/4ee+cd89v5LeCh8G7
4FHwJ/wuvnPR4u9nz/EZuxvGB+vDh+I/Fy9+WD4IP4EXwgfhKfA3eCP8kL6F
XkM8i7/uq/wQfgh/xMfib8eWXgR+B5+Dhz1UeBvsY045YX/Tx9DTTCg9AH0B
vcz40o/gg+kNxpW+BP7WqfxXvkivMlPFc53iuwcqvhR/0sfQV0yq+BheOlPl
t3cU/gkPhe/Jd+kf6C3WrHgbXgo/hU/eVfgevA8+CP+jH6K/Wa/ibXoNeqKJ
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
fO92t9oFGnXafBp92nU5g9xCjiGXoNlX26DGgZZfTCPWEfOIdZ4rvIIeXL0g
zQbtLw0wLQcNCy0HTQdtC00wbTyNPK3w84VP0KfTk/d0mvaFBubTkS1/hleo
R6TXf6byafr95zsND4Av0C//s/J7eIR6Hfrtpyrfp+emD5YzyZXkTHKpWTst
VhOzjehreAJ8gZ6b3lluLNeT88mRxXhiZzG02E8MLVYTs4mt5QRyHzmQXEEM
J1eQM4jt5ESf59rvdbdcScznHny2WHBRzyCftQB8NPZ8fW3fsUXimyv2vLGH
ygE7LcYSa5nTzG0wqTuLn4FVPVH4CP32k4W/iK3MoeZSOa9cWE4sF57bZ8Ly
Yy/YaTm1XFvOLdf2jssV5Yzefe/0F7nW+93tXZdTy8Xl5HLteXJs/lxvuJy0
02IwsZg509wpZ5Ury5nlsnOm/TxpP8Tnddqm73sH+NyT7+4ZuNfXC58xZ5u7
F+60z/KZ8/a1Z+bYvPUs3YPv5jtOv7dOG5uMUd41z3zB7PcObb8FjAH2AIOA
PXjm7s09+i1eKTxFDCYWg1HANmAcsAvXcb2F4P1DW4wp1hTzin1XK/0GPS49
7Kqlz6Afoc+lOaZNpnGgdcCZ485Xiv2d/saR48pXxin2N04cN74CDrK/tVk8
24ej2rk4alw1jSUt5n9pSHobP40PfS3byr2NH31lVOMscZc4JlwTThu3TcM5
ur9xkrhJnBxuzkYTTgvOhwPGBePYcG04UdwoDg2XhqPH1a+I44z9v9ir9zZ+
Gl8+Jc/7mzyrj+LfJs9719h/zHO8DZ5jLox9T+w7Yn839vbZ/pj9M3Js807T
kNCW0JjQlmwX/13xnxb/pp2GGcIO5cBy4dsLj4APwgtx4rjxCTjc/sZx4jpx
0LhoHDgufDwOtr9x5rjz5XGg/e0Z4ulfrWeL88X94khxpc/AYHobP47vpnGh
HaEhoX2hyaU9pWGiZaIpoTWhOaE10T9o02mKaIv0GX1Jn9KXaHBocWgmaCdo
hmiHaCRoJWiU9DV9jjZohupvNE60Thubc/OsTsm2UadpMGkxaQZoB2iOaI9o
AmgDaIppiWmyaLP0aVpiGl59XU5Em0wjJFd6jgaht/Hp9AEvZBvf2/h2/PpL
2Sb0Nv4e//4vGovepn/A59Nc0wrgfHG/U2Eyudc78xtv29c4bFw2jhXXSvNE
+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
mstqvsCXPFzzh/hFfezthVeoVddn9R19SF/W5/RNfVRfvLTq09QQq4Wfs8Yb
9VXqsy6pekU18GqNDyw9Cb0dPdwVVX+lhl6t+8GlX6Hno8ezBsCVXa2G39oA
1tA4s6vVGKs1nr/eT/VS6rHU+F/W1dYgUPtvzQtrb6iRViu9R/GD9Fr0Ls5x
7n6Vb9LIfZP9FSq+pKdRS0KPSF94bdXnqNG3BoF31LvrHfbuWtPgmq62hoG1
DrzTtFk0a951fVBflN+qNfNOepe9097VX1d9sjUCrB2wT+lP6Nfo/zxTz1YN
m1q42QofUC+n/m7/0vfQG9IvHl56J/pKekpttN258turq/7JGgPWHsC/4QL1
YX35uIpvx1d8jS/E7y5V8eJbxc+9Vnrqayt+gmHCMm2wbDEaH0zqnMoX5A/6
vL4/seaLd4o//W/pZ8VosD6Yn9iNPlZtAA01LfV1FQ9eUXgvTBD2BwO8vLAU
ueZ3s00Y2uZv4++Xpc+8vuKzKwuPv6Hin6sKLzYH7lL4/h0VP+1eeLdY88aK
p64uvJRmoL/WFZHbP156X/Vl6rmeKP2u+i41yuKlD7qb5gq24553KL4Aluc7
++4wEliJmGHn4h/wCzCpHYsfkMuLAXYq/gFf8HLpVR+vepRzSo9KL79tzUfw
z89LzwoPhYd8UvpanDiuHGeOKxeji23FuGJ3c6i51HcYXX6xPE4YNyxmF7vj
jLep+dj8CaOCRW1f18NZ467x4w9UviV/Oarys2Uqv5iuAR3a8o+TKseR6+xR
59If0COMrfzqmMrf5HPyxyMr3h5X+Ytj8jQ50zF1v+5fTiL3GFPxLMwNtkaD
QHtAg4AvpyG4r+J32gKcNa2Cd8i7RI9Nz62GQS0DzQKtAc0BLQMNgBxC7rB1
p+WD4kv6YfpZx/joMGhLaKDkGnIO+gDP7/yhjd+We/Dja2lANqtrev5yqB3r
c5xP0+Ga/yz9t3pC9YDWtDy9q62xYK2Fy4ofe7f4o1NK70qfTl+uhljt7tYV
D5rzzH1ySrmveoi3utoa9taymLHwb+c499j+tiY7TAI2cXiNt2r41ObhGGnb
1uxt3CM8m1b5F91tbWoYA6wBpgPbMV5ai9ua6moT3yx+ffU6/76qz7CmhvUf
4N3wbGsqTyu8CP5tTWR/O0NNstrm7QpPvLXqCa15Ym2RO6q+zxojuxa+D990
jnN/X/WC1hSxVsrrxe/j9HH7x5c+lx6fvl4MJpYT04nN4O3wfWs6W/tZjCc3
kaOI/eDr8H1rdFsrWa4llhPTybnwA/B3ayhbGxqmA9uBecG+aApwuavX/dA8
0m7QcNBC0mjRbtFw0W7R9NEW0BjQbtFs0XJNKJvGgLaBxoH2gOaLFowmjBaM
hpGWcUJdb/G6Hg0AHt/90DrQENASwMRgYzgL3MUSdX0aAloCmgDaABw8Lp5m
lBaTJpOWVM3IO5UPn1d6aPpp9QfqH2gAaQHH1/3R/NH+0fA9UzZtIA0BLcEi
5afpoO1wPm0gDcZ79f1cj0aEVoSmcPCQpjGgNViivp/f/7/1PD0PmoUPSltI
C+f50m3Q0Kg9UUdLW0MfQsu5cp3/dOnlxtb9LlL343nT4tHg0SKOK9sai6d0
tTUqrFUhx5Vby7HlvnJsubUcW+5tTDO2GTONneYAc4Ex2Fis1txaZNYkU3Nu
DSZr41mTytpMN1W9sjWXrA10ZOmD1YOoX7u56pGtGWTtHWO6sR3GBHsyRhor
jenGdmO6sR0mBUujN6b/Vp+ivuSBqreyvov1MWAqsD1ziLnEfGFuMScY78XE
YmMxudj80OLrrEFhLQp6MrXQak7p+3ctvR/9/djS/9Fn0U/T49MTWLvZmp74
bvVm1v6xXof1G6zZZi02a0RZK0rMLnYXY4m1rJl1SVdb48laWuYYc42YS+wl
Zhe7yznkHtaAsvaVNbCsDSWGF8vLOeQe5jhzHYwOdmcONZfCKGF3YjixHEwS
FihHkavAYGGpchq5DcwVNvuXqm+yXoJ6eRjbhcXv4R/FiGJFGCxsFuYGe/tP
8YX0AhcNa3wkPtCYD9+3hr+54K6qn7UGlLWi4NPwbn+zw1ru6h/o1dU3qR/C
D8D3/Y0jfwsA5kOLryYCFgQjggXBhGBHMCxYFv4Sv4mj/2nh6fBv+Dy83xrk
RxbeDd+2Jry109V7qD1Wozq9PqvT8HBrqlurH18AT7fmvLXMcfi4fPwFvB1e
Dv+3Rru15h+tekQaf1p/bWDzNCDOFZ+IXWDSsHAYJazy1eIz5JBySRg47Bpm
Cjt9pfgSnBpuDV6P34MH4sKvHdz0Gi9WPZX6ePXpOCW1RWqucE30JrRdYkCx
4Jqlt6B3pX+1RspGXa1mWO2wmFBsKCeVm4pJxCZyTLmmNV2s7aJGUK2gNTtW
72o1vGp5J5Zeh96RnhZnhfvCgeGycKa4VJwqLpUmjTZNDCYWgwfCF2luaW1t
9mnU6GWseWPtG2vaWdsO54v7FbOJ3eAf8EQaXXztgsWXH1n83wLFt+FDrD1o
TrK231fF34gZxY5ybrk3fYu1M6ypQI9qDQ9reaghVUtqTYcxXa1GdVjpX3DH
YkyxpntwLzhpXDJOGjcthpyufy39DL0rfei/Sl9tTjG3iBHFijR7tHs4RNwh
DhG3aE2FhbpaDalaUjGj2FCMKJYcX3woPBrevGrxs/Sg9KHq09RXqedVPwrP
hd+eWfEnPQO8VfwvfpUDyA3E2GJt+Cmu+7zKF6yZYO0ENYRqCa35Yu0XetS+
0le7lphWbOsc58oh5B5qTnPq9Bo6tXRLFv4L34bf08SeGfunlW+owSdhU5On
Nm/14u/ou+ld4dXwafE0LbfNvhibNlJMLbaWs8g/li3+GT6PX1ITrzZeDaFa
wrGFl+Kj4O3jCk/FR+Gn1NyrvZ9jSFvr1xoL+YjpNYZqDa3h0NPVahjVMtJb
WSvdmuX08n8t/RX9vLW0Hit9lzW1rC33+9Ib9ZWe5t7S69Aj9ZR+Z+bS69An
/a70TSNKL0VfZi1sa5rTP11XerOu0j9Zg9vaRvRE9EbXl55uUOmX6Ht8ps+i
Zbql9E0jS391VenV6O/oja4ufRv9EX3SH0u/NUvpnehrTuhqazZZu+nu0nPN
WnqjVypesuaetfdervjKmn7W9pu/9ACHFb/ZV/UMU4rfdo41GsVlrnVj6aW6
S89FT2jtcH9Tgp7q9lFtnXEaJ/qlu0o/NnPpm+4s/eFMpZf6Q+nD+ksvtWDx
f9Zvsv7PbaVnpKdyzZtLf9ZberQbSp81uPRj9GnWmremOX3jI6U3U5+jjodm
zDH7anvU76gHWrKehxoftT7z1He3v1g9L8fEyGJLMabY9+HSd6knUv/zUOnR
1GeoL3q89IbWNLQW4YOl96I/VL+hHkk9hzUKra3459LfqT9SX0R/rt5C/aL6
PvwNvuWcwhOer/xkTF3/2co3Rld/f6D0afSN9I7WmLTWv5hcbH5/6eHoFekf
byq9HL0e/Si9nL8V4m8S0DO+WPnOknW/T1d8vUS9b+qB1EfRb9Nzy3HkFnKC
xerzxepidrUuYnKxuZxC7K6+6tvVX+m/n6n2chC5yITSk6g3wA9a0+fbXa1m
Xu08TQqtBs0GrYocXC4OQ4OlWUPZWsnWzLJ2lphQbIiTwk0tXHyy9aCsH4aP
VN/wcuXj1nC2VrM15Kav7Vx8pXx94eLX8ZPqD9ULWoN4j662BpG1iKyRY60c
NenqyGlK1PJOr2kuvlnsj9PCbYlJxaYwPdieNSWtLWkNFWupWMPqhKFtjSr6
UZou2ioaK9quDYu/fazwAPXe6sWt2WHtDmvmTu1qawxZa2jz0geod1QfaU1p
a1dbg8taXNZvUh+hvtHaQIsWX2Q9LetnyUnkJjRjtGPqL6wlaT0I6z9Y43qf
rramk7Wd1Fuor1C/ql7SmpP+dqS/MWj9CJwWbgpHhevC3eCacE44HGvKWSsO
/4bfxInhwnBiuDKcFK4N54arwg/iyukUxJM4L1oCmgJcGE4Ot4Zjw9U9LMYZ
1Goe1VKqt1efb/0Qa6eIOccUH4/LlDMsVfwxvpt+l16X/pg+mR7Y3zrwNxXo
k82hYrNTa36l7xhXfDV+Wh/UF+m36Xs7pRfxnR8pvcjY4rPx1XKOJYtvx51a
T8D6AtZHsd7JG1UPYz0OayN6BqOL7/ds8H/WBtSn9C1rjFpr1JpH1j7yG/ut
6ZXpyVcp/aO/geVvAa5Q+iN/g9XfUjWGG8vpk+mBViq9pb/B5W+NrVz6R39z
zN/SWrr0Zv4mmL/ttGjpi44t/RC9kLXWv+xufytsbOmH/M0wf0tsxdJr+huu
/tbXhNIP+Zte/jbsuNLn+JtR/vbVsqWf8jeb/K0l9fLWP7CeifVZnqv1IKx3
Zf0sa1pa29KaUtaWwrfiC8XkYvPFSt9J70TH9Occ7xrccla80/KlX/U32Pyt
MfofelzrEVrvcJnSH/mbXP6W1HKln/I3oC7ub5oox+z7W274XHyvd967/0yt
R2F9M+tzLVn6JfpS+lR6eHp0+nj6/iVKH0UvRt86uvRn9K70sDR9tHo0e7R+
NHu0fzSAtHwbl35CPbH6YGvwWovXmkjWRnql1oOwHpT1m8aUXovelt5109In
qcdWj2zN6J26ag2xEW2d/CldbY0xa40tUnq1Y0rvJoeXy+PscffWm7CehTWb
rIdDI6SWW4067dDCpX87uvRdC5We7ajSa/kN/Bb4fXw+DZnf1G9Jm/ad0utN
K33d4qXHO770af8P6vVekw==
           "]], Polygon3DBox[CompressedData["
1:eJwt0k+ITWEYx/FncK+5c7nnlowsaG7Y0aSRGAt/V3LzZyHJIDaTuIqFZCMk
E4kVFmIrpGaBKKuhdLORJYkNM4Ma+Te6c/mczll8O+f5vb/fc973eU/twNEd
jWkRsRgFjMyKuE8Yw61iRLMS8aYcUbd2GvtmREzMjtiFRiniCA5Pj9itvirb
L3cMfbI3Zf/IPpK7IDeEZ3xdmCfXjfmyZfV37Ld+hvcsPskd1O9FR0QbTZtr
pP1oRbkCirKT6pXYyVPi6UJTrx5ajfZWz3d4STuBS3IXU2RPqut8l/lWya3G
K9rXJGIjz1qeDZ5f1B/4xvOZ3MZHvrv0VmfEX/pPjPJM0rbL1GXXYznfnGo2
p0PqAWymlZylM5/PY+ctye5RX7OHEfu57jlQyXzD9j/GM44y36jMOe8P87m2
9BtOspkU9G/by0R6fvoy2lL00Repz+vX1vufbwTfFb7eajaTIZ5TGOTrQNV7
goq1p/rf4T2e3+0KvOf5RpuitTBlFveS7H/Zon2/va3BA77PfL+t/8KPfFa9
9E2lbNbr8lmld/48P/8NvKbNRY2nB0v4utULfGdmfv9Pkmx/C7GNthV70//D
uf4DPsxhBw==
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ldOVAEUgOGLJCQ8EJYAA+KCWAILkHXQVYqAdKT3LkhVOkqX3ocuFkDe
+W58OPn+c2Yyk7mZSEZm+uuYIAjaTUW8iQ2CSlayilWsZjVrWMNa1rKOdazn
R1OvG8JmIxvYxEY2s4ktbGYrW5iVoJnNNuawnbtxQZCrO3Snieo9ty6dp7vZ
Y/bd8u29+pwH9j7dbw51gduAHjRH9jf2If3JHNvf2of1iR7hKd+5fdaj5sw+
xgu3qB7XE+F36UK3yfA1PcUv5lIXuX/VV3qabX7rDJMS/TY9q+dMh55nsnun
XtCLpksX+4wl3a2/8buJeF+PfVn3coUpbn16Va+ZVHu/fV1vmJf2Afum/hE+
B13is7d0mteG7Nt6x7x33w2fjVtp+LzD52teed+w24Eucz9kOY/4gce89ltP
eMNT3vKMPxnlHc/5ixf8w9/mUv/lFe95zQfe8JG3/Mc7PvGF/+lO3P//6jNN
JIH8
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0T0oBGAYB/DH57moK7eQKF+RcClfcUqKbiKMPpLBotzCxqLOIiWriVlK
WWSxicFok8UmGU4y4Sf1/t/f8w7vd/Nqfm6jJCI2pb484rUsIstp41UWuM8r
XvKNz2w3qaYiYoFZjsmh+pi3fGBJqVRGjHKQW1znOU+ZtE6xKuLd+Iuf/OYP
E8mIKmdJsZZ1bGQLu9jLjAyoJznBec5yhcvMc4M73OYBD3hv7yd7HPGES1xj
BzP8cPaiO9zwmnssyJ46wxmWsoGP7vDiTc54wV3ucJE5DnOKuUTEOCc4wiz7
OcQe9rGT3Wxl25/SpG5kPeuYZpoppljNamqR0P395V3y/y9/AYw5L78=
        "]], Line3DBox[CompressedData["
1:eJwt0TkvBWEUBuDDvQjXvtbET9CgVohoVKISnYZEVPZ9qehENP6ASBSiUolE
LBGNSiQKEbHvO0+hePO858zku3NnKju6W7rSIqJXDlIR14mIl8yIG77ylm+8
4zvv+cEHfvKRX3ziN3/kWf/lCyPLOUzjG9P5zgQ/mOQn+/IiUsmIfuZygHkc
ZD6HWMBhFnKEo1Kkj7GY4yzhBEs5yTJOsZzTrOAMl/zmsWe8So84My/rl/qK
dOq9PLWv0Xv0OvnNiJjP9Z/0Pf3Hi9uWI/ctmrf0Bc5x365Wb9NbZdecY67W
q2THfOJZrhx3KWt6trM39E3XZs3r+oRc+C5jbLc710f0Zll1X71dk35k38hD
Nvx/yz+f4kej
        "]], Line3DBox[CompressedData["
1:eJwl0c0rZXEYwPHHdbloZmQhEupupixkM3uRrZKVjZSlwkZZ8A+o23iZMTPe
zXj3J3h/5++QZMMkiabrmo8snj7f59fpnNM56e7+9r68iBgwlx8i7hIRV7zn
NR/4VBRxox/1P1NdGvHiLKv/Os+xID+isDji2Z7SNa75ZC/VZaZCl3yMqNLV
Jm0vt3/WdabenrZ/0c26kS1scNakW027vY217t2lO3WP6dMdruvVw3qIIyaj
B51n9IyuTEZs2qftG5ziOn9xjT+5yh9c4SSX+Z1L/GO+6d+c4CLHucAxznOU
c/zKWWa55dkv3GaOO3zlLsM77TGP+0zwkAcmXx8xyWMW8ISFPGWKZyzi+dv3
5QVvE+//8j+KYEAf
        "]]}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{1049, 2545, 1051, 2546, 1053, 2548, 1055, 2550, 1057, 2552, 
        1059, 2554, 1062, 2556, 1064, 2558, 2559, 1066, 2562, 1068, 2564, 
        1070, 2566, 1072, 2568, 1075, 2570, 1077, 2572, 1080}], 
       Line3DBox[{1083, 1082, 3562, 1081, 3561, 1079, 3560, 1782}], 
       Line3DBox[{1084, 2574, 1086, 2576, 1088, 2578, 1090, 2580, 1093, 2582, 
        1095, 2584, 1097, 2586, 1100, 2588, 2589, 1102, 2592, 1104, 2594, 
        1106, 2596, 1109, 2598, 1111, 2600, 1113, 2602, 1116}], 
       Line3DBox[{1122, 2604, 1123, 2606, 1125, 2608, 1128, 2610, 1130, 2612, 
        1133, 2614, 1135, 2616, 1137, 2618, 2619, 1140, 2622, 1142, 2624, 
        1144, 2626, 1147, 2628, 1149, 2630, 1151, 2632, 1154}], 
       Line3DBox[{1161, 1160, 3580, 1158, 3579, 1157, 3578, 1156, 3577, 1155, 
        3576, 1153, 3575, 1784}], 
       Line3DBox[{1163, 2634, 1164, 2636, 1166, 2638, 1169, 2640, 1172, 2642, 
        1174, 2644, 1177, 2646, 1179, 2648, 2649, 1181, 2652, 1184, 2654, 
        1186, 2656, 1188, 2658, 1191, 2660, 1193, 2662, 1196}], 
       Line3DBox[{1204, 2664, 1205, 2666, 1208, 2668, 1210, 2670, 1213, 2672, 
        1216, 2674, 1218, 2676, 1221, 2678, 2679, 1223, 2682, 1225, 2684, 
        1228, 2686, 1230, 2688, 1232, 2690, 1235, 2692, 1238}], 
       Line3DBox[{1245, 1244, 3607, 3606, 1243, 3605, 1242, 3604, 1241, 3603, 
        1240, 3602, 1239, 3601, 1237, 3600, 1786}], 
       Line3DBox[{1247, 2694, 1248, 2696, 1251, 2698, 1254, 2700, 1256, 2702, 
        1259, 2704, 1262, 2706, 1264, 2708, 2709, 1267, 2712, 1269, 2714, 
        1271, 2716, 1274, 2718, 1276, 2720, 1278, 2722, 1282}], 
       Line3DBox[{1290, 1289, 3623, 1288, 3622, 3621, 1287, 3620, 1286, 3619, 
        1285, 3618, 1284, 3617, 1283, 3616, 1281, 3615, 1787}], 
       Line3DBox[{1292, 2724, 1293, 2726, 1296, 2728, 1299, 2730, 1302, 2732, 
        1304, 2734, 1307, 2736, 1310, 2738, 2739, 1312, 2742, 1314, 2744, 
        1317, 2746, 1319, 2748, 1322, 2750, 1324, 2752, 1327}], 
       Line3DBox[{1337, 1336, 3641, 1334, 3640, 1333, 3639, 3638, 1332, 3637, 
        1331, 3636, 1330, 3635, 1329, 3634, 1328, 3633, 1326, 3632, 1788}], 
       Line3DBox[{1341, 2755, 1343, 2759, 1349, 2763, 1355, 2767, 1361, 2771, 
        1367, 2775, 1372, 2779, 1377, 2784, 2785, 1382, 2790, 1387, 2794, 
        1392, 2798, 1397, 2802, 1402, 2806, 1407, 2810, 1414}], 
       Line3DBox[{1413, 2809, 1406, 2805, 1401, 2801, 1396, 2797, 1391, 2793, 
        1386, 2789, 1381, 2783, 2782, 1376, 2778, 1371, 2774, 1366, 2770, 
        1360, 2766, 1354, 2762, 1348, 2758, 1342, 2754, 1340}], 
       Line3DBox[{1431, 3676, 1429, 3674, 1427, 3672, 1425, 3669, 3668, 1423, 
        3666, 1421, 3664, 1419, 3662, 1417, 3660, 1415, 3658, 1411, 3656, 
        1789}], Line3DBox[{1433, 1432, 3677, 1430, 3675, 1428, 3673, 1426, 
        3671, 3670, 1424, 3667, 1422, 3665, 1420, 3663, 1418, 3661, 1416, 
        3659, 1412, 3657, 1790}], 
       Line3DBox[{1435, 2813, 1436, 2815, 1439, 2817, 1443, 2819, 1446, 2821, 
        1448, 2823, 1451, 2825, 1454, 2827, 2828, 1456, 2831, 1459, 2833, 
        1461, 2835, 1464, 2837, 1466, 2839, 1469, 2841, 1472}], 
       Line3DBox[{1484, 1483, 3694, 1481, 3693, 1480, 3692, 1479, 3691, 1478, 
        3690, 3689, 1477, 3688, 1476, 3687, 1475, 3686, 1474, 3685, 1473, 
        3684, 1471, 3683, 1791}], 
       Line3DBox[{1486, 2843, 1487, 2845, 1491, 2847, 1494, 2849, 1497, 2851, 
        1500, 2853, 1502, 2855, 1505, 2857, 2858, 1508, 2861, 1510, 2863, 
        1513, 2865, 1515, 2867, 1518, 2869, 1520, 2871, 1524}], 
       Line3DBox[{1537, 2873, 1538, 2875, 1542, 2877, 1545, 2879, 1548, 2881, 
        1551, 2883, 1554, 2885, 1556, 2887, 2888, 1559, 2891, 1562, 2893, 
        1564, 2895, 1567, 2897, 1569, 2899, 1572, 2901, 1575}], 
       Line3DBox[{1588, 1587, 3741, 1585, 3740, 1584, 3739, 1583, 3738, 1582, 
        3737, 1581, 3736, 3735, 1580, 3734, 1579, 3733, 1578, 3732, 1577, 
        3731, 1576, 3730, 1574, 3729, 1793}], 
       Line3DBox[{1590, 2903, 1591, 2905, 1595, 2907, 1598, 2909, 1601, 2911, 
        1604, 2913, 1607, 2915, 1610, 2917, 2918, 1612, 2921, 1615, 2923, 
        1618, 2925, 1620, 2927, 1623, 2929, 1625, 2931, 1629}], 
       Line3DBox[{1641, 3764, 1640, 3762, 1639, 3761, 1638, 3760, 1637, 3759, 
        1636, 3758, 1635, 3757, 3756, 1634, 3755, 1633, 3754, 1632, 3753, 
        1631, 3752, 1630, 3751, 1628, 3750, 1794}], 
       Line3DBox[{1643, 2933, 1644, 2935, 1648, 2937, 1651, 2939, 1655, 2941, 
        1657, 2943, 1660, 2945, 1663, 2947, 2948, 1666, 2951, 1668, 2953, 
        1671, 2955, 1674, 2957, 1676, 2959, 1679, 2961, 1682}], 
       Line3DBox[{1696, 1695, 3787, 1693, 3786, 1692, 3785, 1691, 3784, 1690, 
        3783, 1689, 3782, 1688, 3781, 3780, 1687, 3779, 1686, 3778, 1685, 
        3777, 1684, 3776, 1683, 3775, 1681, 3774, 1795}], 
       Line3DBox[{1698, 2963, 1699, 2965, 1703, 2967, 1707, 2969, 1710, 2971, 
        1713, 2973, 1716, 2975, 1718, 2977, 2978, 1721, 2981, 1724, 2983, 
        1726, 2985, 1729, 2987, 1732, 2989, 1734, 2991, 1738}], 
       Line3DBox[{1751, 3813, 1750, 3811, 1749, 3810, 1748, 3809, 1747, 3808, 
        1746, 3807, 1745, 3806, 1744, 3805, 3804, 1743, 3803, 1742, 3802, 
        1741, 3801, 1740, 3800, 1739, 3799, 1737, 3798, 1796}], 
       Line3DBox[{1754, 2603, 1114, 2601, 1112, 2599, 3565, 1110, 2597, 1108, 
        2595, 1107, 1105, 2593, 1103, 2591, 3881, 2590, 1101, 2587, 1099, 
        2585, 1098, 1096, 2583, 3880, 1094, 2581, 1092, 2579, 1091, 1089, 
        3564, 2577, 1087, 2575, 1085, 3563, 1781}], 
       Line3DBox[{1756, 3886, 2663, 1194, 2661, 1192, 2659, 1190, 3885, 2657, 
        1189, 1187, 2655, 1185, 2653, 1183, 3884, 2651, 1182, 2650, 1180, 
        2647, 1178, 3585, 2645, 1176, 1175, 2643, 1173, 3584, 2641, 1171, 
        2639, 1170, 1168, 3583, 2637, 1167, 1165, 3582, 2635, 1162, 3581, 
        1779}], Line3DBox[{1760, 3900, 2811, 1409, 2807, 1404, 1403, 2803, 
        1399, 3899, 2799, 1394, 2795, 1393, 1389, 3898, 2791, 1384, 2786, 
        1383, 3652, 1379, 2780, 1374, 3650, 2776, 1373, 1369, 2772, 1364, 
        3647, 1362, 2768, 1358, 3896, 2764, 1356, 1352, 3894, 2760, 1350, 
        1346, 3893, 2756, 1344, 3644, 1338, 3642, 1774}], 
       Line3DBox[{1762, 1482, 2842, 1470, 3682, 2840, 1468, 1467, 2838, 1465, 
        3681, 2836, 1463, 2834, 1462, 1460, 3680, 2832, 1458, 2830, 1457, 
        3907, 2829, 1455, 2826, 1453, 1452, 3906, 2824, 1450, 2822, 3905, 
        1449, 1447, 2820, 3904, 1445, 1444, 2818, 3903, 1442, 1441, 2816, 
        3902, 1440, 1438, 2814, 3901, 1437, 3679, 1434, 3678, 1773}], 
       Line3DBox[{1763, 3717, 2872, 1522, 1521, 2870, 1519, 3704, 2868, 1517, 
        2866, 1516, 1514, 3703, 2864, 1512, 2862, 1511, 1509, 3702, 2860, 
        2859, 1507, 1506, 3909, 2856, 1504, 2854, 1503, 3701, 1501, 2852, 
        1499, 3700, 1498, 2850, 1496, 3699, 2848, 1495, 1493, 3698, 2846, 
        1492, 3697, 1490, 1489, 2844, 3908, 1488, 3696, 1485, 3695, 1772}], 
       Line3DBox[{1765, 3763, 2932, 1627, 1626, 2930, 1624, 3749, 2928, 1622, 
        1621, 2926, 1619, 3748, 2924, 1617, 1616, 2922, 3747, 1614, 2920, 
        1613, 2919, 1611, 3917, 2916, 1609, 1608, 3916, 2914, 1606, 2912, 
        1605, 3746, 1603, 2910, 3915, 1602, 1600, 2908, 3914, 1599, 1597, 
        2906, 3913, 1596, 3745, 1594, 2904, 1593, 3744, 1592, 3743, 1589, 
        3742, 1770}], 
       Line3DBox[{1767, 3812, 2992, 1736, 1735, 2990, 1733, 3797, 2988, 1731, 
        1730, 2986, 1728, 3796, 2984, 1727, 1725, 2982, 3795, 1723, 2980, 
        1722, 3926, 2979, 1720, 1719, 2976, 1717, 3925, 2974, 1715, 1714, 
        3924, 2972, 1712, 1711, 3923, 2970, 1709, 3794, 1708, 2968, 3793, 
        1706, 1705, 2966, 3792, 1704, 1702, 3791, 2964, 1701, 3790, 1700, 
        3789, 1697, 3788, 1768}], 
       Line3DBox[{1769, 3765, 1642, 3766, 1645, 3767, 1646, 2934, 1647, 3768, 
        1649, 3918, 2936, 1650, 1652, 3919, 2938, 1653, 1654, 3920, 2940, 
        3769, 1656, 1658, 2942, 1659, 3770, 1661, 2944, 1662, 2946, 3921, 
        1664, 1665, 2949, 3922, 2950, 1667, 1669, 2952, 1670, 3771, 2954, 
        1672, 1673, 2956, 3772, 1675, 2958, 1677, 1678, 2960, 3773, 1680, 
        2962, 1694, 1766}], 
       Line3DBox[{1771, 3719, 1536, 3720, 1539, 3721, 1540, 2874, 1541, 3722, 
        1543, 2876, 3723, 1544, 1546, 2878, 3724, 1547, 1549, 2880, 3725, 
        1550, 2882, 3910, 1552, 1553, 2884, 3911, 1555, 1557, 2886, 1558, 
        2889, 3912, 1560, 2890, 1561, 2892, 3726, 1563, 1565, 2894, 1566, 
        2896, 3727, 1568, 2898, 1570, 1571, 2900, 3728, 1573, 2902, 1586, 
        1764}], Line3DBox[{1776, 3624, 1291, 3625, 1294, 2725, 1295, 3626, 
        1297, 2727, 1298, 3627, 1300, 2729, 1301, 3628, 2731, 1303, 1305, 
        2733, 3629, 1306, 2735, 1308, 1309, 2737, 3630, 1311, 2740, 2741, 
        3891, 1313, 1315, 2743, 1316, 2745, 1318, 3631, 1320, 2747, 1321, 
        2749, 1323, 2751, 3892, 1325, 2753, 1335, 1759}], 
       Line3DBox[{1777, 3608, 1246, 3609, 1249, 2695, 1250, 3610, 1252, 2697, 
        1253, 3611, 2699, 1255, 1257, 2701, 3612, 1258, 2703, 1260, 1261, 
        2705, 3613, 1263, 2707, 1265, 1266, 2710, 3889, 2711, 1268, 2713, 
        1270, 3614, 1272, 2715, 1273, 2717, 1275, 2719, 3890, 1277, 1279, 
        2721, 1280, 2723, 1758}], 
       Line3DBox[{1778, 3594, 1203, 3887, 2665, 1206, 1207, 3888, 2667, 1209, 
        1211, 2669, 3595, 1212, 2671, 1214, 1215, 2673, 3596, 1217, 2675, 
        1219, 1220, 2677, 3597, 1222, 2680, 2681, 1224, 1226, 3598, 2683, 
        1227, 2685, 1229, 2687, 1231, 3599, 1233, 2689, 1234, 2691, 1236, 
        2693, 1757}], 
       Line3DBox[{1780, 3571, 1121, 2605, 1124, 3572, 1126, 2607, 1127, 2609, 
        3573, 1129, 1131, 2611, 1132, 2613, 3574, 1134, 2615, 1136, 1138, 
        2617, 1139, 2620, 3882, 2621, 1141, 2623, 1143, 1145, 2625, 1146, 
        2627, 3883, 1148, 2629, 1150, 2631, 1152, 2633, 1159, 1755}], 
       Line3DBox[{1783, 3566, 1115, 3567, 1117, 3568, 1118, 3569, 1119, 3570, 
        1120}], Line3DBox[{1785, 3586, 1195, 3587, 1197, 3588, 1198, 3589, 
        1199, 3590, 1200, 3591, 1201, 3592, 3593, 1202}], 
       Line3DBox[{1792, 3705, 1523, 3706, 1525, 3707, 1526, 3708, 1527, 3709, 
        1528, 3710, 1529, 3711, 3712, 1530, 3713, 1531, 3714, 1532, 3715, 
        1533, 3716, 1534, 3718, 1535}], 
       Line3DBox[{1752, 2544, 3558, 1050, 1052, 2547, 1054, 2549, 1056, 2551, 
        3879, 1058, 2553, 1060, 1061, 2555, 1063, 2557, 1065, 2560, 2561, 
        1067, 3559, 2563, 1069, 2565, 1071, 1073, 2567, 1074, 2569, 1076, 
        2571, 1078, 2573, 1753}], 
       Line3DBox[{1761, 2812, 1410, 1408, 2808, 1405, 3655, 2804, 1400, 2800, 
        1398, 1395, 3654, 2796, 1390, 2792, 1388, 1385, 3653, 2788, 2787, 
        1380, 1378, 3651, 2781, 1375, 2777, 1370, 3649, 1368, 2773, 1365, 
        3648, 2769, 1363, 1359, 2765, 3897, 1357, 1353, 2761, 3895, 1351, 
        1347, 3646, 2757, 1345, 3645, 1339, 3643, 1775}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1799, 2546, 1800, 2576, 1871, 2606, 1912, 2636, 1951, 2666, 
        1988, 2696, 2025, 2726, 2060, 2758, 2759, 2095, 2815, 2127, 2845, 
        2160, 2875, 2193, 2905, 2225, 2935, 2259, 2965, 2296}], 
       Line3DBox[{1803, 2548, 1804, 2578, 1873, 2608, 1914, 2638, 1953, 2668, 
        1990, 2698, 2027, 2728, 2062, 2762, 2763, 2097, 2817, 2129, 2847, 
        2162, 2877, 2195, 2907, 2227, 2937, 2261, 2967, 2302}], 
       Line3DBox[{1807, 2550, 1808, 2580, 1875, 2610, 1916, 2640, 1955, 2670, 
        1992, 2700, 2029, 2730, 2064, 2766, 2767, 2099, 2819, 2131, 2849, 
        2164, 2879, 2197, 2909, 2229, 2939, 2263, 2969, 2311}], 
       Line3DBox[{1811, 2552, 1812, 2582, 1878, 2612, 1918, 2642, 1957, 2672, 
        1995, 2702, 2031, 2732, 2066, 2770, 2771, 2101, 2821, 2133, 2851, 
        2166, 2881, 2199, 2911, 2231, 2941, 2265, 2971, 2319}], 
       Line3DBox[{1816, 2554, 1817, 2584, 1880, 2614, 1921, 2644, 1960, 2674, 
        1997, 2704, 2034, 2734, 2068, 2774, 2775, 2103, 2823, 2135, 2853, 
        2168, 2883, 2201, 2913, 2233, 2943, 2267, 2973, 2328}], 
       Line3DBox[{1821, 2556, 1822, 2586, 1882, 2616, 1923, 2646, 1963, 2676, 
        2000, 2706, 2036, 2736, 2071, 2778, 2779, 2105, 2825, 2137, 2855, 
        2170, 2885, 2203, 2915, 2235, 2945, 2269, 2975, 2338}], 
       Line3DBox[{1827, 2558, 1829, 2588, 1885, 2618, 1925, 2648, 1965, 2678, 
        2003, 2708, 2039, 2738, 2073, 2782, 2784, 2107, 2827, 2140, 2857, 
        2172, 2887, 2205, 2917, 2237, 2947, 2271, 2977, 2350}], 
       Line3DBox[{1836, 2562, 1837, 2592, 1891, 2622, 1931, 2652, 1970, 2682, 
        2008, 2712, 2044, 2742, 2078, 2789, 2790, 2111, 2831, 2144, 2861, 
        2177, 2891, 2209, 2921, 2242, 2951, 2276, 2981, 2373}], 
       Line3DBox[{1841, 2564, 1842, 2594, 1895, 2624, 1934, 2654, 1972, 2684, 
        2010, 2714, 2047, 2744, 2080, 2793, 2794, 2113, 2833, 2146, 2863, 
        2179, 2893, 2211, 2923, 2245, 2953, 2278, 2983, 2387}], 
       Line3DBox[{1847, 2566, 1848, 2596, 1897, 2626, 1936, 2656, 1975, 2686, 
        2012, 2716, 2049, 2746, 2083, 2797, 2798, 2115, 2835, 2148, 2865, 
        2181, 2895, 2213, 2925, 2247, 2955, 2281, 2985, 2400}], 
       Line3DBox[{1852, 2568, 1853, 2598, 1900, 2628, 1939, 2658, 1977, 2688, 
        2015, 2718, 2051, 2748, 2085, 2801, 2802, 2117, 2837, 2150, 2867, 
        2183, 2897, 2215, 2927, 2250, 2957, 2283, 2987, 2415}], 
       Line3DBox[{1858, 2570, 1859, 2600, 1903, 2630, 1942, 2660, 1980, 2690, 
        2017, 2720, 2054, 2750, 2087, 2805, 2806, 2120, 2839, 2153, 2869, 
        2185, 2899, 2218, 2929, 2252, 2959, 2286, 2989, 2429}], 
       Line3DBox[{1864, 2572, 1865, 2602, 1906, 2632, 1946, 2662, 1982, 2692, 
        2020, 2722, 2056, 2752, 2090, 2809, 2810, 2122, 2841, 2156, 2871, 
        2188, 2901, 2220, 2931, 2255, 2961, 2288, 2991, 2445}], 
       Line3DBox[{2291, 2963, 2257, 2933, 2223, 2903, 2191, 2873, 2158, 2843, 
        2125, 2813, 2093, 2755, 2754, 2058, 2724, 2023, 2694, 1985, 2664, 
        1949, 2634, 1910, 2604, 1869, 2574, 1798, 2545, 2505}], 
       Line3DBox[{2301, 4012, 2300, 4011, 2299, 4010, 2298, 4009, 2297, 4008, 
        2503}], Line3DBox[{2318, 4027, 4026, 2317, 4024, 2316, 4023, 2315, 
        4022, 2314, 4021, 2313, 4020, 2312, 4019, 2501}], 
       Line3DBox[{2351, 2978, 2272, 2948, 2238, 2918, 2206, 2888, 2173, 2858, 
        2141, 2828, 2108, 2785, 2783, 2074, 2739, 2040, 2709, 2004, 2679, 
        1966, 2649, 1926, 2619, 1886, 2589, 1830, 2559, 1828}], 
       Line3DBox[{2370, 4076, 2368, 4073, 2366, 4071, 2364, 4068, 4067, 2362, 
        4065, 2360, 4063, 2358, 4061, 2356, 4059, 2354, 4057, 2352, 4055, 
        2496}], Line3DBox[{2386, 2385, 4089, 2383, 4088, 2382, 4087, 2381, 
        4086, 2380, 4085, 4084, 2379, 4083, 2378, 4082, 2377, 4081, 2376, 
        4080, 2375, 4079, 2374, 4078, 2495}], 
       Line3DBox[{2399, 4102, 2398, 4101, 2397, 4100, 2396, 4099, 2395, 4098, 
        2394, 4097, 4096, 2393, 4095, 2392, 4094, 2391, 4093, 2390, 4092, 
        2389, 4091, 2388, 4090, 2494}], 
       Line3DBox[{2428, 4129, 2427, 4128, 2426, 4127, 2425, 4126, 2424, 4125, 
        2423, 4124, 2422, 4123, 4122, 2421, 4121, 2420, 4120, 2419, 4119, 
        2418, 4118, 2417, 4117, 2416, 4116, 2492}], 
       Line3DBox[{2459, 4158, 2458, 4157, 2457, 4156, 2456, 4155, 2455, 4154, 
        2454, 4153, 2453, 4152, 2452, 4151, 4150, 2451, 4149, 2450, 4148, 
        2449, 4147, 2448, 4146, 2447, 4145, 2446, 4144, 2490}], 
       Line3DBox[{2460, 2544, 4159, 1797, 2508, 2575, 1870, 2605, 1911, 2635, 
        4180, 1950, 2665, 1986, 1987, 2695, 2024, 2725, 2059, 2756, 2757, 
        2094, 3998, 2814, 2126, 2844, 2159, 2537, 2874, 2192, 2904, 2224, 
        2934, 2258, 2964, 2489}], 
       Line3DBox[{2461, 4160, 2506, 2547, 1801, 2577, 4165, 1872, 2512, 2607, 
        1913, 2637, 1952, 3980, 2667, 1989, 2521, 2697, 2026, 2727, 2061, 
        2760, 3992, 2761, 2096, 2816, 2128, 2532, 2846, 2161, 2876, 2194, 
        4002, 2906, 2226, 2936, 2260, 2966, 2488}], 
       Line3DBox[{2462, 3927, 1802, 2549, 1805, 4166, 2509, 2579, 1874, 2609, 
        4173, 1915, 2516, 2639, 1954, 2669, 4186, 1991, 2699, 2028, 2524, 
        2729, 2063, 2764, 3993, 2765, 2098, 2818, 2130, 2533, 2848, 2163, 
        2878, 4214, 2196, 2908, 2228, 2938, 2262, 2968, 2308, 2487}], 
       Line3DBox[{2463, 3928, 1806, 2551, 3929, 1809, 1876, 2581, 3957, 1877, 
        2513, 2611, 1917, 2641, 4181, 1956, 2671, 1993, 1994, 2701, 4191, 
        2030, 2731, 2065, 2768, 2526, 2769, 4198, 2100, 2820, 2132, 2850, 
        2165, 2538, 2880, 4215, 2198, 2910, 2230, 2940, 2264, 2970, 4025, 
        2486}], Line3DBox[{2464, 3930, 1810, 4161, 2553, 1813, 1814, 3958, 
        2583, 1879, 1919, 2613, 4174, 1920, 2643, 1958, 1959, 2673, 4187, 
        1996, 2703, 2032, 2033, 2733, 4196, 2067, 2772, 2773, 2102, 2529, 
        3999, 2822, 2134, 2852, 2167, 2882, 2200, 4220, 2542, 2912, 2232, 
        2942, 2266, 2972, 2485}], 
       Line3DBox[{2465, 3931, 1815, 3932, 1818, 2555, 1819, 4167, 2510, 2585, 
        1881, 4175, 2615, 1922, 1961, 2645, 4182, 1962, 2675, 1998, 1999, 
        2705, 4192, 2035, 2735, 2069, 2070, 2776, 4199, 2777, 2104, 2824, 
        2136, 4208, 2534, 2854, 2169, 2884, 2202, 2914, 4003, 2234, 2543, 
        2944, 2268, 2974, 2484}], 
       Line3DBox[{2466, 3933, 1820, 3934, 1823, 2557, 1824, 3959, 1883, 2587, 
        1884, 4176, 2514, 2617, 1924, 4183, 2647, 1964, 2001, 2677, 4188, 
        2002, 2707, 2037, 2038, 2737, 4197, 2072, 2780, 2781, 4200, 2106, 
        2138, 2826, 2139, 2856, 2171, 4216, 2539, 2886, 2204, 2916, 2236, 
        2946, 4004, 2270, 2976, 2347, 2483}], 
       Line3DBox[{2468, 3936, 1826, 3938, 1832, 2561, 3940, 1834, 1888, 4168, 
        2591, 1890, 1928, 4177, 2621, 1930, 2517, 2651, 3974, 1969, 2681, 
        2006, 3981, 2007, 2711, 2043, 2741, 3988, 2076, 2077, 2786, 2788, 
        4202, 2110, 2530, 2830, 2143, 2860, 4209, 2176, 2540, 2890, 2208, 
        2920, 4221, 2241, 2950, 2274, 2275, 2980, 2481}], 
       Line3DBox[{2469, 3941, 1835, 3942, 1838, 4162, 2563, 1839, 1892, 4169, 
        2593, 1893, 1894, 3968, 2623, 1932, 1933, 3975, 2653, 1971, 2519, 
        4189, 2683, 2009, 2713, 3984, 2045, 2046, 2743, 2079, 2791, 3994, 
        2527, 2792, 2112, 2832, 4204, 2145, 2535, 2862, 2178, 2892, 4217, 
        2210, 2922, 2243, 2244, 2952, 4225, 2277, 2982, 2384, 2480}], 
       Line3DBox[{2470, 3943, 1840, 3944, 1843, 4163, 2565, 1844, 1845, 3961, 
        2511, 2595, 3962, 1896, 2515, 2625, 3969, 1935, 2655, 1973, 3976, 
        1974, 2685, 2011, 4194, 2522, 2715, 2048, 2745, 3989, 2081, 2082, 
        2795, 2796, 4203, 2114, 2531, 2834, 2147, 2864, 4210, 2180, 2541, 
        2894, 2212, 2924, 4222, 2246, 2954, 2279, 2280, 2984, 4228, 2479}], 
       Line3DBox[{2471, 3945, 1846, 3946, 1849, 4164, 2507, 2567, 1850, 3963, 
        1898, 2597, 3964, 1899, 1937, 2627, 3970, 1938, 2518, 2657, 3977, 
        1976, 2687, 3982, 2013, 2014, 2717, 3985, 2050, 2525, 2747, 2084, 
        2799, 3995, 2528, 2800, 2116, 2836, 4205, 2149, 2536, 2866, 2182, 
        2896, 4218, 2214, 2926, 2248, 2249, 2956, 4226, 2282, 2986, 2412, 
        2478}], Line3DBox[{2472, 3947, 1851, 3948, 1854, 3949, 1855, 2569, 
        1856, 3965, 1901, 4170, 2599, 1902, 1940, 4178, 2629, 1941, 1978, 
        4184, 2659, 1979, 4190, 2520, 2689, 2016, 2719, 3986, 2052, 2053, 
        2749, 3990, 2086, 2803, 2118, 2804, 2119, 4206, 2838, 2151, 2152, 
        2868, 4211, 2184, 2898, 2216, 2217, 2928, 4223, 2251, 2958, 2284, 
        2285, 2988, 4229, 2477}], 
       Line3DBox[{2473, 3950, 1857, 3951, 1860, 3952, 1861, 2571, 1862, 3966, 
        1904, 4171, 2601, 1905, 1943, 3971, 2631, 1944, 1945, 3978, 2661, 
        4185, 1981, 2018, 2691, 2019, 4195, 2523, 2721, 2055, 2751, 3991, 
        2088, 2089, 2807, 3996, 2808, 2121, 2154, 2840, 2155, 4212, 2870, 
        2186, 2187, 2900, 4219, 2219, 2930, 2253, 2254, 2960, 4227, 2287, 
        2990, 2442, 2476}], 
       Line3DBox[{2474, 3953, 1863, 3954, 1866, 3955, 1867, 2573, 3956, 1868, 
        1907, 4172, 2603, 1908, 1909, 4179, 2633, 1947, 3972, 1948, 2663, 
        3979, 1983, 1984, 2693, 3983, 2021, 2022, 2723, 3987, 2057, 2753, 
        2091, 2092, 2811, 3997, 2123, 2812, 2124, 4207, 2842, 2157, 2189, 
        2872, 4213, 2190, 2902, 2221, 2222, 2932, 4224, 2256, 2962, 2289, 
        2290, 2992, 4230, 2475}], 
       Line3DBox[{2482, 4075, 2979, 2273, 2949, 2240, 2239, 2919, 2207, 4001, 
        2889, 2175, 2859, 2174, 2142, 4000, 2829, 2109, 2787, 1383, 4201, 
        2075, 2740, 2042, 4193, 2710, 2041, 2005, 2680, 1968, 3973, 1967, 
        2650, 1929, 3967, 2620, 1927, 1889, 3960, 2590, 1887, 1833, 3939, 
        2560, 1831, 3937, 1825, 3935, 2467}], 
       Line3DBox[{2491, 4130, 2430, 4131, 2431, 4132, 2432, 4133, 2433, 4134, 
        2434, 4135, 2435, 4136, 4137, 2436, 4138, 2437, 4139, 2438, 4140, 
        2439, 4141, 2440, 4142, 2441, 4143, 2443, 2444}], 
       Line3DBox[{2493, 4103, 2401, 4104, 2402, 4105, 2403, 4106, 2404, 4107, 
        2405, 4108, 2406, 4109, 4110, 2407, 4111, 2408, 4112, 2409, 4113, 
        2410, 4114, 2411, 4115, 2413, 2414}], 
       Line3DBox[{2498, 4045, 2339, 4046, 2340, 4047, 2341, 4048, 2342, 4049, 
        2343, 4050, 2344, 4051, 4052, 2345, 4053, 2346, 4054, 2348, 2349}], 
       Line3DBox[{2499, 4036, 2329, 4037, 2330, 4038, 2331, 4039, 2332, 4040, 
        2333, 4041, 2334, 4042, 4043, 2335, 4044, 2336, 2337}], 
       Line3DBox[{2500, 4028, 2320, 4029, 2321, 4030, 2322, 4031, 2323, 4032, 
        2324, 4033, 2325, 4034, 4035, 2326, 2327}], 
       Line3DBox[{2502, 4013, 2303, 4014, 2304, 4015, 2305, 4016, 2306, 4017, 
        2307, 4018, 2309, 2310}], 
       Line3DBox[{2504, 4005, 2292, 4006, 2293, 4007, 2294, 2295}], 
       Line3DBox[{2372, 2371, 4077, 2369, 4074, 2367, 4072, 2365, 4070, 4069, 
        2363, 4066, 2361, 4064, 2359, 4062, 2357, 4060, 2355, 4058, 2353, 
        4056, 2497}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{3022, 3560, 3023, 3566, 3042, 3575, 3058, 3586, 3075, 3600, 
        3096, 3615, 3117, 3632, 3139, 3656, 3657, 3160, 3683, 3183, 3705, 
        3204, 3729, 3228, 3750, 3255, 3774, 3283, 3798, 3450}], 
       Line3DBox[{3024, 3561, 3025, 3567, 3043, 3576, 3059, 3587, 3076, 3601, 
        3097, 3616, 3118, 3633, 3140, 3658, 3659, 3161, 3684, 3184, 3706, 
        3205, 3730, 3229, 3751, 3256, 3775, 3284, 3799, 3451}], 
       Line3DBox[{3026, 3562, 3027, 3568, 3044, 3577, 3060, 3588, 3077, 3602, 
        3098, 3617, 3119, 3634, 3141, 3660, 3661, 3162, 3685, 3185, 3707, 
        3206, 3731, 3230, 3752, 3257, 3776, 3285, 3800, 3452}], 
       Line3DBox[{3046, 3570, 3047, 3579, 3062, 3590, 3079, 3604, 3100, 3619, 
        3121, 3636, 3143, 3664, 3665, 3164, 3687, 3187, 3709, 3208, 3733, 
        3232, 3754, 3259, 3778, 3287, 3802, 3454}], 
       Line3DBox[{3048, 3049, 3580, 3063, 3591, 3080, 3605, 3101, 3620, 3122, 
        3637, 3144, 3666, 3667, 3165, 3688, 3188, 3710, 3209, 3734, 3233, 
        3755, 3260, 3779, 3288, 3803, 3455}], 
       Line3DBox[{3081, 3593, 3083, 3607, 3103, 3622, 3124, 3639, 3146, 3669, 
        3671, 3167, 3690, 3190, 3712, 3211, 3736, 3235, 3757, 3262, 3781, 
        3290, 3805, 3457}], 
       Line3DBox[{3216, 3718, 3217, 3741, 3240, 3762, 3267, 3786, 3295, 3810, 
        3462}], Line3DBox[{3298, 4005, 3299, 4008, 3306, 4013, 3314, 4019, 
        3322, 4028, 3330, 4036, 3340, 4045, 3351, 4055, 4056, 3364, 4078, 
        3378, 4090, 3390, 4103, 3403, 4116, 3419, 4130, 3433, 4144, 3484}], 
       Line3DBox[{3300, 4006, 3301, 4009, 3307, 4014, 3315, 4020, 3323, 4029, 
        3331, 4037, 3341, 4046, 3352, 4057, 4058, 3365, 4079, 3379, 4091, 
        3391, 4104, 3404, 4117, 3420, 4131, 3434, 4145, 3485}], 
       Line3DBox[{3302, 4007, 3303, 4010, 3308, 4015, 3316, 4021, 3324, 4030, 
        3332, 4038, 3342, 4047, 3353, 4059, 4060, 3366, 4080, 3380, 4092, 
        3392, 4105, 3405, 4118, 3421, 4132, 3435, 4146, 3486}], 
       Line3DBox[{3304, 3305, 4011, 3309, 4016, 3317, 4022, 3325, 4031, 3333, 
        4039, 3343, 4048, 3354, 4061, 4062, 3367, 4081, 3381, 4093, 3393, 
        4106, 3406, 4119, 3422, 4133, 3436, 4147, 3487}], 
       Line3DBox[{3311, 3313, 4018, 3319, 4024, 3327, 4033, 3335, 4041, 3345, 
        4050, 3356, 4065, 4066, 3369, 4083, 3383, 4095, 3395, 4108, 3408, 
        4121, 3424, 4135, 3438, 4149, 3489}], 
       Line3DBox[{3320, 3321, 4026, 3328, 4034, 3336, 4042, 3346, 4051, 3357, 
        4067, 4069, 3370, 4084, 3384, 4096, 3396, 4109, 3409, 4122, 3425, 
        4136, 3439, 4150, 3490}], 
       Line3DBox[{3338, 3339, 4044, 3348, 4053, 3359, 4071, 4072, 3372, 4086, 
        3386, 4098, 3398, 4111, 3411, 4124, 3427, 4138, 3441, 4152, 3492}], 
       Line3DBox[{3349, 3350, 4054, 3360, 4073, 4074, 3373, 4087, 3387, 4099, 
        3399, 4112, 3412, 4125, 3428, 4139, 3442, 4153, 3493}], 
       Line3DBox[{3361, 3363, 4076, 4077, 3374, 4088, 3388, 4100, 3400, 4113, 
        3413, 4126, 3429, 4140, 3443, 4154, 3494}], 
       Line3DBox[{3375, 3377, 4089, 3389, 4101, 3401, 4114, 3414, 4127, 3430, 
        4141, 3444, 4155, 3495}], 
       Line3DBox[{3416, 3418, 4129, 3432, 4143, 3446, 4157, 3497}], 
       Line3DBox[{3447, 3449, 4158, 3498}], 
       Line3DBox[{3453, 3801, 3286, 3777, 3258, 3753, 3231, 3732, 3207, 3708, 
        3186, 3686, 3163, 3663, 3662, 3142, 3635, 3120, 3618, 3099, 3603, 
        3078, 3589, 3061, 3578, 3045, 3569, 3028, 3503}], 
       Line3DBox[{3458, 3806, 3291, 3782, 3263, 3758, 3236, 3737, 3212, 3713, 
        3191, 3691, 3168, 3673, 3672, 3147, 3640, 3125, 3623, 3104, 3529}], 
       Line3DBox[{3459, 3807, 3292, 3783, 3264, 3759, 3237, 3738, 3213, 3714, 
        3192, 3692, 3169, 3675, 3674, 3148, 3641, 3126, 3531}], 
       Line3DBox[{3460, 3808, 3293, 3784, 3265, 3760, 3238, 3739, 3214, 3715, 
        3193, 3693, 3170, 3677, 3676, 3149, 3533}], 
       Line3DBox[{3461, 3809, 3294, 3785, 3266, 3761, 3239, 3740, 3215, 3716, 
        3194, 3694, 3171, 3538}], 
       Line3DBox[{3463, 3811, 3296, 3787, 3268, 3764, 3241, 3551}], 
       Line3DBox[{3464, 3813, 3297, 3554}], 
       Line3DBox[{3465, 3953, 3018, 3950, 3015, 3947, 3012, 3945, 3010, 3943, 
        3008, 3941, 3005, 3936, 3935, 3002, 3933, 3000, 3931, 2998, 3930, 
        2996, 3928, 2995, 3927, 2994, 4160, 3499, 3558, 4159, 2993, 3563, 
        3029, 3571, 3050, 3581, 3065, 3594, 3084, 3608, 3105, 3624, 3127, 
        3642, 3643, 3150, 3678, 3172, 3695, 3195, 3719, 3218, 3742, 3242, 
        3765, 3269, 3788, 3483}], 
       Line3DBox[{3466, 3954, 3019, 3951, 3016, 3948, 3013, 3946, 3011, 3944, 
        3009, 3942, 3006, 3938, 3937, 3003, 3934, 3001, 3932, 2999, 4161, 
        3500, 3879, 3929, 2997, 3031, 4166, 3504, 3564, 4165, 3030, 3572, 
        3051, 3519, 3582, 4180, 3066, 3887, 3085, 3609, 3106, 3625, 3128, 
        3644, 3645, 3151, 3679, 3173, 3696, 3196, 3720, 3219, 3743, 3243, 
        3766, 3270, 3789, 3482}], 
       Line3DBox[{3467, 3955, 3020, 3952, 3017, 3949, 3014, 4164, 3502, 4163, 
        3501, 4162, 3559, 3007, 3940, 3939, 3004, 3814, 3959, 3034, 4167, 
        3505, 3958, 3880, 3032, 3957, 3033, 3510, 3573, 4173, 3052, 3520, 
        3583, 3820, 3980, 3888, 3086, 3610, 3107, 3626, 3129, 3829, 3893, 
        3646, 3837, 3998, 3901, 3174, 3908, 3197, 3721, 3220, 3744, 3244, 
        3767, 3271, 3790, 3481}], 
       Line3DBox[{3468, 3956, 3021, 3815, 3966, 3041, 3965, 3039, 3963, 3036, 
        3961, 3507, 4169, 3506, 4168, 3881, 3960, 3035, 3816, 4176, 3512, 
        4175, 3511, 3574, 4174, 3053, 3521, 3584, 4181, 3067, 3527, 3595, 
        4186, 3087, 3611, 3108, 3627, 3130, 3830, 3894, 3992, 3895, 3152, 
        3902, 3175, 3697, 3198, 3722, 3221, 3745, 3245, 3768, 3272, 3860, 
        3791, 3878}], 
       Line3DBox[{3469, 3817, 4179, 3517, 3971, 3516, 4178, 3515, 3883, 3970, 
        3055, 3969, 3056, 3524, 3975, 3523, 3884, 3974, 3973, 3070, 3069, 
        3597, 4188, 3089, 3823, 3613, 4192, 3110, 3826, 3629, 4196, 3133, 
        3132, 3647, 3648, 4198, 3154, 3904, 3177, 3543, 3699, 3845, 3724, 
        4214, 3222, 3914, 3247, 3919, 3274, 3793, 3312, 3479}], 
       Line3DBox[{3470, 3972, 3057, 3819, 3978, 3526, 4184, 3525, 3885, 3977, 
        3072, 3976, 3071, 3528, 4189, 3598, 3091, 3981, 3090, 3889, 4193, 
        3111, 3827, 3630, 4197, 3134, 3832, 3650, 4199, 3534, 3649, 3155, 
        3999, 3905, 3178, 3544, 3700, 3199, 3725, 4215, 3223, 3915, 3248, 
        3920, 3276, 3275, 3794, 3877}], 
       Line3DBox[{3471, 3983, 3095, 3825, 4195, 3530, 3890, 3986, 3115, 3985, 
        3114, 3631, 3136, 3989, 3135, 3834, 3898, 3994, 3535, 3653, 4202, 
        3838, 3907, 4000, 3180, 3842, 3909, 3847, 4216, 3548, 3911, 3852, 
        3916, 4003, 3250, 3770, 3277, 3862, 3924, 3876}], 
       Line3DBox[{3472, 3987, 3116, 3828, 3892, 3991, 3138, 3990, 3137, 3835, 
        3899, 3995, 3536, 3654, 4203, 3158, 3539, 3680, 4204, 3181, 3545, 
        3702, 4209, 3848, 3912, 4001, 3224, 3853, 3917, 3856, 3921, 4004, 
        3278, 3863, 3925, 3875}], 
       Line3DBox[{3473, 3836, 3900, 3997, 3159, 3996, 3537, 3655, 3839, 4206, 
        3540, 3681, 4205, 3182, 3546, 3703, 4210, 3201, 3549, 3726, 4217, 
        3225, 3747, 3251, 4221, 3857, 3922, 3864, 3926, 4075, 3362, 3874}], 
       Line3DBox[{3474, 3840, 4207, 3541, 3682, 3843, 4212, 3547, 3704, 4211, 
        3202, 3550, 3727, 4218, 3226, 3552, 3748, 4222, 3252, 3771, 3280, 
        4225, 3279, 3795, 3376, 3873}], 
       Line3DBox[{3475, 3855, 3763, 4224, 3254, 3859, 3773, 4227, 3282, 3866, 
        3797, 4229, 3417, 3872}], 
       Line3DBox[{3476, 3867, 3812, 4230, 3448, 3871}], 
       Line3DBox[{3477, 4228, 3796, 3865, 3281, 4226, 3772, 3858, 3253, 4223, 
        3749, 3854, 3227, 4219, 3728, 3849, 3203, 4213, 3717, 3557}], 
       Line3DBox[{3478, 4025, 3923, 3861, 3769, 3553, 3249, 3746, 4220, 3851, 
        3910, 3846, 3200, 3701, 4208, 3841, 3906, 3179, 3156, 4200, 3651, 
        3157, 3652, 4201, 3833, 3988, 3891, 3532, 3112, 3984, 3113, 3614, 
        4194, 3824, 3092, 3982, 3093, 3599, 4190, 3094, 3073, 4185, 3074, 
        3979, 3886, 3556}], 
       Line3DBox[{3480, 3792, 3273, 3918, 3246, 3913, 4002, 3850, 3723, 3844, 
        3698, 3542, 3176, 3903, 3153, 3897, 3993, 3896, 3831, 3131, 3628, 
        3109, 4191, 3612, 3822, 3088, 4187, 3596, 3821, 3068, 4182, 3585, 
        3522, 4183, 3818, 3054, 3967, 3882, 4177, 3513, 3968, 3514, 3038, 
        3962, 3037, 3964, 3040, 3565, 4170, 3508, 4171, 3509, 4172, 3555}], 
       Line3DBox[{3488, 4148, 3437, 4134, 3423, 4120, 3407, 4107, 3394, 4094, 
        3382, 4082, 3368, 4064, 4063, 3355, 4049, 3344, 4040, 3334, 4032, 
        3326, 4023, 3318, 4017, 3310, 4012, 3868}], 
       Line3DBox[{3496, 4156, 3445, 4142, 3431, 4128, 3415, 4115, 3402, 4102, 
        3870}], Line3DBox[{3518, 3064, 3592, 3082, 3606, 3102, 3621, 3123, 
        3638, 3145, 3668, 3670, 3166, 3689, 3189, 3711, 3210, 3735, 3234, 
        3756, 3261, 3780, 3289, 3804, 3456}], 
       Line3DBox[{3869, 4027, 3329, 4035, 3337, 4043, 3347, 4052, 3358, 4068, 
        4070, 3371, 4085, 3385, 4097, 3397, 4110, 3410, 4123, 3426, 4137, 
        3440, 4151, 3491}]}}},
    VertexNormals->CompressedData["
1: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
muVToG/pEXBtq4I4G42RRTOYmE2bleyaRjLce9Fn43KxBkwl753vscZfn2/6
+i1elVTwv+BhH1pQAbDgnHJkFAPTW630/HA5BW5ES6ms8q6CxXxVjk5S+OuY
eut7vfxKBVqu66MjrnWgdmigiGSPjzNfd17nldSjQfOiO0ctHOpgnvKjptxx
XLpyY02A8MI2sPWoPqeSXAoFZ0duJFfSsbaFR+xt1tLgM3lspZJDBcx72Bs6
xQT/Pq5bJ3ndeDw+D1K8z30+pgiq12/gmmRGx4zjD7T3jo6v45yUreFTCmW6
9f3Sw/jnqZ6VIKg4pR3Ksy4eqIyvhiOJ+w/c2dCBMVbTqvKT2kBWbXdW2cli
UNw3qjL9HP467ZWB83VK2+Doq7LNcpHFoCay1F5xPH645STp7JvYDlJRpEP3
NxfCwNnMw4FvOzCPV1YGbo1twH9gucxd32Jo/yGSvML0j+v/XXGM8+/yR3XJ
SFSn1OFQn5yK6ozsuuNnVG9UT2XVJXMOsOqUs3RZ9Ul2/VEX1SPZdUi89eVR
HiiD8kJ3lA+uRXljCcojO1D++BLlhxkoX9TlkCeqobiKhuKsCA7xVeccFk71
I9wSRnjVrMzCtfuKLJxz0mbhmybCLyOEZ5UccKxbVOT4yBABBtCnhv0ardY7
+Ocfc9Sr5vBlEnS2qsU6D7VAkKUhl58NAxtdSnmaK0CCXr4hu1lu9UB8o9y2
rIeJNXxXqLZ+SICItGZdc3oDeBGEKJbcnbjre86ascY1nAQtK/os7B7VQeNj
AbHhfvzzz1ZT+uIQ0wrhym2TykXrQKHfLlwknYktKdbOGhohw4Mv2mUzp9eA
e9GLSbSjTOxUgWc83yYy+Jwa2nTUtRa8igdJ5qH461+PiIjxEacCP/nM8SeF
9bDoiJnT3go6ZvWE+92F2RTg5m3g0s2oBplln57pH8Ffp/fIVm8FMwoc6dbI
q9Oqhorzc1+O6TExg9ZQ+XZjKohbPCjX+1QJL3R1Iy6VMzDbt/uDRZ5S4P3h
OT1fRathxddb6xzm469fsiYmX06WBn7TsglSayvgyC5h1W2ODKzuexA9yJoK
ouH+1IONlZBdtnzK42L8+2vyrjZ7VjMNFgsfcPMqKoWElIqtmgIMrMQYSzOe
RYN1/VpcYwsqYGSzSly8J/462QIqtuUbaNAzPTU39XU5iBaTYy5YMrC30g3m
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
/9Dz/PW7cOb9TX7Xr9878fg/zfvbXocxK5bu1hzpcOP/m/7213X7a+P/NO//
0evw67r9u8a9EB/vi/h5rv/Gy/+6zv97xv9p3q/rxmH8JrvOjurulv+t3v7r
+v9nx/9p3q/r+RfHe78k/pYPvxXJ/i0/pmT+//PiX/flPzv+X98D+1/sPrNt
qO8su9/s1Yt3dE9c6YKaJ6RV5VHZwOD62DfJshXrlVVJ2CfdC+YK0kcyO2Pg
m39+hYtWHfZ0vs/eK597YV6/b9T5gIfwfuGpg2v6KrBRq6T4dOM+IJOLfa8L
hECCj+GhnEtFGPZobKdTYB9sevrsg2rINTjcoR7zbmM+NlX7mHjnqz6QrfqE
pRT4wu25WcMzsBwsxX4efzb0QWiRzZtz5t7AcLqu1NwLmE/sY+mrZX1guuPH
3a31HpDpnmuZv/s9FicWwFza0Afy5/z5NDpc4NLA+cuLvN5iIfsf31Ui9UFz
fIJiX48TLAxLd9y4Ng3Tuz1fN5nWB1Xl1UaG7Q7gnyk0OkszBXv52Xn4B70P
Vnu1aeb32MCh5eIjGsFJWNHBnLhSZh88ONPUs2DQEgyfvkqnVydi8u4eLiui
+yAyKD571ypvgErNwc4XOdhs3/CeitheaBrWl27+Fgq7js43MJ1bjdGrNPfP
PdgD3O82JXu3PIU9+m65J7c1Yc5Pro2uW9ENEitni794GgeSt2Pa7kwlYSVC
HS5+c7tAPM8/5bR8CpSXb3FpLCZjkb7bntrydEItttFh1fZ3cGrPBsUzxlTs
xhehnWf6GZC9VZxinwuA7fMcM3xOw5RIgQIGbXRwzAxQ+mGaAxYtwrE3itqw
HrJDUk5rBzivICff78iDPiPqnuM57ZjBZu9Hq761w1WDss1aWgVwW/BNoa9P
BzZyRGX3t3ntkH4plEh4VASLcw+nmivRMWkb71SPQ23gqrviwuhwCQhfyhW4
8YKO8Q0rzhiMoYHr8RLXe/zloDacsmdIjIFFRbs8uc9PA7m73jUPeiuAos53
+pEzA7tzKre8w40KFgNKrQ1ZlXBq5p3mN9kMTP2y4qz7ART4MsTYSu+oGv9h
eTKj65jYhyNfMwunUqD/lM7n+ZXVYHHjfKapzXh8KNchGBhOhmKvyr51WTVQ
qPLugsVFJpZjvt1MXYkMSyfnPNEKqYVru6dNd4xkYsL+1gsfBLWC1s4Za5JV
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
     "]], {}},
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{322.6227620745963, 334.6391542972163},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.48876718970879857`, 3.260392274028798, 0.762200008998614},
  ViewVertical->{0.24900547475157397`, 
   0.7259619402306388, -0.6410737359152299}]], "Output",
 CellChangeTimes->{
  3.8420563883382697`*^9, 3.8420564309371414`*^9, {3.842056514426797*^9, 
   3.842056546253293*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"9bde2c53-c1c3-41f3-8dd4-cc23221d36b1"]
}, Open  ]]
},
WindowSize->{1065, 833},
WindowMargins->{{Automatic, 420}, {Automatic, 176}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 415, 10, 45, "Input",ExpressionUUID->"a66a4d6d-04a4-4913-a528-58b727952047"],
Cell[998, 34, 362, 9, 32, "Output",ExpressionUUID->"c35f48d4-021d-4000-beae-6956ff5f5e90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1397, 48, 383, 10, 45, "Input",ExpressionUUID->"45ab34d7-6479-4a71-bc7a-6b45c0da9494"],
Cell[1783, 60, 1124, 27, 70, "Output",ExpressionUUID->"a62e372c-f8e6-4fc5-901b-80d8d8a2e003"]
}, Open  ]],
Cell[2922, 90, 10819, 306, 654, "Input",ExpressionUUID->"bad3b70c-6f73-4ad1-a625-5f5970747c2f"],
Cell[CellGroupData[{
Cell[13766, 400, 282, 6, 45, "Input",ExpressionUUID->"f74f3ae5-cf9d-4506-b265-a8efd31821b4"],
Cell[14051, 408, 1431, 43, 79, "Output",ExpressionUUID->"0a6c309d-5139-42b0-8821-4290f6ace6eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15519, 456, 2013, 52, 77, "Input",ExpressionUUID->"9a6a6f25-8f85-43c2-8d37-bef6a2ebe475"],
Cell[17535, 510, 981, 28, 79, "Output",ExpressionUUID->"343f138e-7aba-4e4a-a263-4df7fced3497"]
}, Open  ]],
Cell[18531, 541, 1777, 49, 196, "Input",ExpressionUUID->"df3312e9-be0f-4895-af23-03a260d682da"],
Cell[20311, 592, 156, 3, 28, "Input",ExpressionUUID->"7c070420-791c-4d1e-9e09-a64438dd5c56"],
Cell[CellGroupData[{
Cell[20492, 599, 3474, 95, 236, "Input",ExpressionUUID->"1922cd37-4342-44b3-aa3d-4a39aa9d4e91"],
Cell[23969, 696, 2774, 78, 100, "Output",ExpressionUUID->"96b62e12-b890-45c6-a1c3-0410c6948da6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26780, 779, 3068, 81, 152, "Input",ExpressionUUID->"4c829bb9-edd1-4e34-9c1d-a66ba8d1e445"],
Cell[29851, 862, 8855, 222, 286, "Output",ExpressionUUID->"32e07f7e-011d-4b9c-883d-9fb1efb2c36a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38743, 1089, 9855, 238, 685, "Input",ExpressionUUID->"3b2a84ed-436a-4acc-a89a-59c1812f95bf"],
Cell[48601, 1329, 6125, 107, 449, "Output",ExpressionUUID->"1553b7e8-8f8d-4f07-8629-da63904939e8"]
}, Open  ]],
Cell[54741, 1439, 1071, 33, 52, "Input",ExpressionUUID->"c6008d01-a7f7-4711-89a3-a956d1dcb576"],
Cell[CellGroupData[{
Cell[55837, 1476, 972, 29, 48, "Input",ExpressionUUID->"3ee2aa1b-a0d5-4db7-bc61-d49758739b3d"],
Cell[56812, 1507, 511, 16, 36, "Output",ExpressionUUID->"bceab057-08ae-46ea-9684-d7b2a0b87e75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57360, 1528, 934, 28, 48, "Input",ExpressionUUID->"cd08f64b-78df-4993-bd92-ca0a739dcd76"],
Cell[58297, 1558, 669, 20, 32, "Output",ExpressionUUID->"917e79d6-dfd1-4769-a8f8-d1794825adf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59003, 1583, 764, 23, 48, "Input",ExpressionUUID->"9be4191a-fdb9-4b88-b5b8-b11db94e0b42"],
Cell[59770, 1608, 1908, 54, 113, "Output",ExpressionUUID->"1a1d0499-b78b-43d0-8ce6-3cd9f26611ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61715, 1667, 2246, 61, 178, "Input",ExpressionUUID->"4a442a70-d272-4ff0-977e-382d7a9ad736"],
Cell[63964, 1730, 2753, 50, 373, "Output",ExpressionUUID->"2d420150-2b48-4d2e-801e-4db2521802d7"]
}, Open  ]],
Cell[66732, 1783, 282, 7, 28, "Input",ExpressionUUID->"11eeb040-544d-4a21-aff7-4d2f5c30b708"],
Cell[67017, 1792, 990, 28, 78, "Input",ExpressionUUID->"183743f8-eaeb-4df8-8979-b5874cc54988"],
Cell[CellGroupData[{
Cell[68032, 1824, 234, 4, 45, "Input",ExpressionUUID->"875665b1-3d6d-41a2-be3c-f62aef56d5d4"],
Cell[68269, 1830, 949, 26, 36, "Output",ExpressionUUID->"e128cbca-bb17-4065-bb86-c1796bbdab32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69255, 1861, 1369, 36, 86, "Input",ExpressionUUID->"28753035-16d5-45c1-b9ff-da5f46931f65"],
Cell[70627, 1899, 1779, 42, 64, "Output",ExpressionUUID->"a0605b5c-a836-4bf3-b520-09cb23245c56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72443, 1946, 2947, 68, 239, "Input",ExpressionUUID->"c6c91bc7-671d-4627-86aa-085a0dac535c"],
Cell[75393, 2016, 5081, 85, 437, "Output",ExpressionUUID->"d216bd66-c793-428b-88bd-373f8d3ddaff"]
}, Open  ]],
Cell[80489, 2104, 322, 8, 28, "Input",ExpressionUUID->"60dab20a-7811-4d02-aa2b-84e6273033c1"],
Cell[80814, 2114, 952, 28, 64, "Input",ExpressionUUID->"f0798b8c-b17f-4791-aeaa-d568bd989ff4"],
Cell[CellGroupData[{
Cell[81791, 2146, 644, 15, 45, "Input",ExpressionUUID->"9323699f-39d2-4aae-9af3-882efbaa4cda"],
Cell[82438, 2163, 166760, 2696, 385, "Output",ExpressionUUID->"9bde2c53-c1c3-41f3-8dd4-cc23221d36b1"]
}, Open  ]]
}
]
*)

